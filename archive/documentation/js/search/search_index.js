var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.2',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/injectables/ApiHttpService.html', [0, 0.635, 1, 2.767]],
      [
        'body/injectables/ApiHttpService.html',
        [
          0,
          0.651,
          1,
          2.247,
          2,
          0.055,
          3,
          0.055,
          4,
          0.042,
          5,
          1.786,
          6,
          0.253,
          7,
          0.594,
          8,
          1.709,
          9,
          5.931,
          10,
          0.411,
          11,
          1.017,
          12,
          4.828,
          13,
          6.311,
          14,
          3.322,
          15,
          3.322,
          16,
          3.322,
          17,
          3.322,
          18,
          3.322,
          19,
          3.322,
          20,
          0.554,
          21,
          2.046,
          22,
          3.064,
          23,
          4.194,
          24,
          2.667,
          25,
          4.194,
          26,
          2.741,
          27,
          4.194,
          28,
          1.468,
          29,
          0.606,
          30,
          3.322,
          31,
          0.884,
          32,
          0.013,
          33,
          0.518,
          34,
          0.676,
          35,
          0.654,
          36,
          3.322,
          37,
          2.046,
          38,
          2.382,
          39,
          0.601,
          40,
          0.463,
          41,
          3.322,
          42,
          1.591,
          43,
          5.255,
          44,
          7.231,
          45,
          1.749,
          46,
          6.204,
          47,
          2.046,
          48,
          3.058,
          49,
          2.472,
          50,
          6.448,
          51,
          1.85,
          52,
          3.709,
          53,
          6.23,
          54,
          6.631,
          55,
          1.337,
          56,
          3.661,
          57,
          2.621,
          58,
          3.322,
          59,
          2.046,
          60,
          2.621,
          61,
          2.504,
          62,
          2.413,
          63,
          2.945,
          64,
          3.322,
          65,
          6.918,
          66,
          2.046,
          67,
          3.322,
          68,
          1.051,
          69,
          0.675,
          70,
          1.244,
          71,
          2.741,
          72,
          3.809,
          73,
          3.995,
          74,
          3.322,
          75,
          2.046,
          76,
          2.101,
          77,
          0.009,
          78,
          1.054,
          79,
          3.322,
          80,
          3.355,
          81,
          2.046,
          82,
          2.487,
          83,
          1.886,
          84,
          2.289,
          85,
          3.609,
          86,
          3.322,
          87,
          2.046,
          88,
          4.222,
          89,
          3.322,
          90,
          2.046,
          91,
          4.963,
          92,
          1.886,
          93,
          3.322,
          94,
          3.064,
          95,
          2.505,
          96,
          2.247,
          97,
          1.636,
          98,
          1.087,
          99,
          1.158,
          100,
          2.247,
          101,
          1.898,
          102,
          0.262,
          103,
          0.083,
          104,
          1.162,
          105,
          0.965,
          106,
          0.965,
          107,
          0.824,
          108,
          2.046,
          109,
          1.105,
          110,
          1.444,
          111,
          1.299,
          112,
          1.486,
          113,
          1.786,
          114,
          0.89,
          115,
          1.162,
          116,
          0.048,
          117,
          0.022,
          118,
          2.151,
          119,
          3.322,
          120,
          2.9,
          121,
          5.309,
          122,
          2.046,
          123,
          3.322,
          124,
          3.846,
          125,
          2.504,
          126,
          1.886,
          127,
          1.243,
          128,
          0.51,
          129,
          2.046,
          130,
          2.046,
          131,
          4.828,
          132,
          3.322,
          133,
          6.631,
          134,
          5.309,
          135,
          6.631,
          136,
          5.309,
          137,
          5.309,
          138,
          4.188,
          139,
          4.634,
          140,
          3.369,
          141,
          5.309,
          142,
          5.309,
          143,
          5.687,
          144,
          1.682,
          145,
          1.943,
          146,
          4.828,
          147,
          2.046,
          148,
          3.661,
          149,
          2.046,
          150,
          2.837,
          151,
          0.98,
          152,
          6.453,
          153,
          2.046,
          154,
          2.046,
          155,
          2.046,
          156,
          2.046,
          157,
          2.046,
          158,
          2.046,
          159,
          1.786,
          160,
          2.046,
          161,
          1.786,
          162,
          4.828,
          163,
          1.389,
          164,
          2.046,
          165,
          1.614,
          166,
          2.046,
          167,
          0.563,
          168,
          2.046,
          169,
          1.384,
          170,
          1.786,
          171,
          2.046,
          172,
          2.046,
          173,
          1.614,
          174,
          2.046,
          175,
          1.226,
          176,
          2.046,
          177,
          2.046,
          178,
          0.582,
          179,
          1.486,
          180,
          2.046,
          181,
          1.786,
          182,
          1.384,
          183,
          1.486,
          184,
          0.005,
        ],
      ],
      ['title/injectables/ApiSelectorsService.html', [0, 0.635, 185, 2.971]],
      [
        'body/injectables/ApiSelectorsService.html',
        [
          0,
          0.976,
          2,
          0.107,
          3,
          0.107,
          4,
          0.081,
          6,
          0.494,
          7,
          0.982,
          11,
          1.27,
          20,
          0.665,
          24,
          2.65,
          29,
          0.503,
          31,
          0.494,
          32,
          0.013,
          33,
          0.331,
          34,
          0.365,
          35,
          0.418,
          39,
          0.607,
          43,
          2.531,
          63,
          3.195,
          68,
          1.088,
          69,
          0.642,
          70,
          2.005,
          73,
          3.846,
          76,
          2.793,
          77,
          0.008,
          80,
          2.298,
          83,
          3.12,
          84,
          1.606,
          98,
          1.125,
          99,
          1.915,
          102,
          0.306,
          103,
          0.162,
          106,
          1.882,
          107,
          1.606,
          109,
          2.154,
          110,
          1.734,
          111,
          2.531,
          115,
          2.265,
          116,
          0.094,
          117,
          0.043,
          118,
          1.173,
          125,
          1.882,
          127,
          2.055,
          128,
          0.995,
          145,
          2.727,
          151,
          1.469,
          178,
          1.135,
          184,
          0.008,
          185,
          3.991,
          186,
          3.481,
          187,
          3.382,
          188,
          2.389,
          189,
          5.495,
          190,
          4.796,
          191,
          4.796,
          192,
          2.968,
          193,
          3.481,
          194,
          4.796,
          195,
          3.481,
          196,
          3.481,
          197,
          3.481,
          198,
          1.69,
          199,
          3.481,
          200,
          1.882,
          201,
          3.989,
          202,
          3.481,
          203,
          3.481,
          204,
          3.147,
          205,
          2.531,
          206,
          1.805,
          207,
          1.668,
          208,
          3.481,
          209,
          3.147,
          210,
          3.481,
          211,
          1.213,
          212,
          4.299,
          213,
          3.481,
          214,
          2.213,
          215,
          2.697,
          216,
          2.897,
          217,
          3.291,
          218,
          0.763,
          219,
          2.265,
          220,
          2.897,
          221,
          2.055,
          222,
          2.531,
          223,
          1.547,
          224,
          3.481,
          225,
          3.481,
          226,
          3.481,
          227,
          5.912,
          228,
          3.065,
          229,
          3.481,
          230,
          3.481,
          231,
          3.481,
          232,
          3.481,
          233,
          3.481,
          234,
          3.12,
          235,
          1.882,
          236,
          3.147,
          237,
          6.691,
          238,
          2.389,
          239,
          2.265,
          240,
          1.964,
          241,
          3.481,
          242,
          3.481,
          243,
          3.481,
          244,
          5.486,
          245,
          4.796,
          246,
          2.534,
          247,
          4.796,
          248,
          3.481,
          249,
          3.481,
        ],
      ],
      ['title/injectables/ApiService.html', [0, 0.635, 250, 2.767]],
      [
        'body/injectables/ApiService.html',
        [
          0,
          0.977,
          1,
          3.719,
          2,
          0.108,
          3,
          0.108,
          4,
          0.081,
          6,
          0.494,
          7,
          0.983,
          8,
          1.747,
          9,
          3.15,
          10,
          0.681,
          11,
          1.434,
          20,
          0.917,
          22,
          4.301,
          24,
          2.915,
          26,
          4.354,
          28,
          2.061,
          29,
          0.65,
          31,
          0.494,
          32,
          0.013,
          33,
          0.331,
          34,
          0.575,
          35,
          0.419,
          38,
          3.572,
          39,
          0.411,
          40,
          1.243,
          43,
          2.534,
          49,
          2.391,
          52,
          1.884,
          55,
          2.214,
          68,
          0.791,
          69,
          0.643,
          77,
          0.008,
          80,
          2.299,
          82,
          2.833,
          83,
          3.123,
          88,
          3.719,
          95,
          2.834,
          98,
          1.126,
          102,
          0.326,
          103,
          0.162,
          104,
          2.268,
          105,
          1.884,
          106,
          1.884,
          112,
          2.9,
          113,
          3.485,
          114,
          1.736,
          115,
          2.268,
          116,
          0.094,
          117,
          0.043,
          145,
          2.214,
          173,
          3.15,
          178,
          1.564,
          184,
          0.008,
          185,
          5.336,
          187,
          3.596,
          188,
          2.392,
          192,
          2.97,
          198,
          1.372,
          206,
          1.807,
          207,
          1.67,
          217,
          3.294,
          221,
          3.24,
          223,
          2.133,
          250,
          3.719,
          251,
          3.485,
          252,
          4.968,
          253,
          5.915,
          254,
          5.915,
          255,
          4.06,
          256,
          3.994,
          257,
          3.994,
          258,
          3.994,
          259,
          3.994,
          260,
          3.719,
          261,
          4.8,
          262,
          3.994,
          263,
          3.994,
          264,
          3.994,
          265,
          2.057,
          266,
          4.8,
          267,
          3.994,
          268,
          2.391,
          269,
          4.8,
          270,
          6.693,
          271,
          5.336,
          272,
          4.8,
          273,
          4.8,
          274,
          5.915,
          275,
          4.8,
          276,
          3.994,
          277,
          1.67,
          278,
          1.807,
          279,
          3.994,
          280,
          3.485,
          281,
          3.485,
          282,
          2.701,
          283,
          2.392,
          284,
          3.994,
          285,
          3.485,
          286,
          2.9,
          287,
          1.807,
          288,
          2.9,
          289,
          3.15,
          290,
          3.994,
          291,
          3.485,
          292,
          3.485,
          293,
          3.485,
          294,
          3.485,
        ],
      ],
      ['title/components/ApiStateComponent.html', [295, 0.41, 296, 1.244]],
      [
        'body/components/ApiStateComponent.html',
        [
          2,
          0.115,
          3,
          0.115,
          4,
          0.087,
          6,
          0.527,
          7,
          1.028,
          10,
          0.712,
          11,
          1.163,
          20,
          1.085,
          29,
          0.637,
          32,
          0.013,
          33,
          0.539,
          34,
          0.39,
          39,
          0.318,
          40,
          0.963,
          45,
          1.481,
          63,
          3.284,
          68,
          0.843,
          69,
          0.686,
          76,
          1.934,
          77,
          0.009,
          98,
          1.567,
          102,
          0.265,
          103,
          0.234,
          110,
          1.852,
          115,
          2.419,
          116,
          0.101,
          117,
          0.046,
          145,
          2.926,
          184,
          0.009,
          198,
          2.118,
          214,
          1.253,
          218,
          1.62,
          240,
          3.429,
          246,
          2.15,
          295,
          0.729,
          296,
          2.117,
          297,
          1.747,
          298,
          1.173,
          299,
          1.434,
          300,
          6.345,
          301,
          5.735,
          302,
          3.718,
          303,
          1.387,
          304,
          2.719,
          305,
          0.872,
          306,
          3.263,
          307,
          3.263,
          308,
          3.104,
          309,
          5.748,
          310,
          2.074,
          311,
          5.748,
          312,
          6.963,
          313,
          2.803,
          314,
          5.748,
          315,
          5.748,
          316,
          4.26,
          317,
          4.26,
          318,
          2.419,
          319,
          5.748,
          320,
          5.748,
          321,
          5.016,
          322,
          5.748,
          323,
          5.748,
          324,
          4.174,
          325,
          0.932,
          326,
          1.747,
          327,
          1.531,
          328,
          2.265,
          329,
          1.434,
          330,
          1.434,
          331,
          1.173,
          332,
          1.434,
          333,
          1.253,
          334,
          1.434,
          335,
          1.253,
          336,
          1.434,
          337,
          1.135,
          338,
          1.434,
          339,
          2.189,
          340,
          1.295,
          341,
          1.434,
          342,
          1.295,
          343,
          1.434,
          344,
          1.295,
          345,
          1.434,
          346,
          1.253,
          347,
          1.295,
          348,
          1.434,
          349,
          1.253,
          350,
          1.434,
          351,
          1.295,
          352,
          1.434,
          353,
          1.582,
          354,
          1.934,
          355,
          1.253,
          356,
          1.295,
          357,
          1.434,
          358,
          1.295,
          359,
          1.253,
          360,
          1.295,
          361,
          1.869,
          362,
          1.434,
          363,
          1.295,
          364,
          1.434,
          365,
          1.212,
          366,
          1.434,
          367,
          1.173,
          368,
          1.295,
          369,
          1.295,
          370,
          1.434,
          371,
          1.295,
          372,
          1.434,
          373,
          1.434,
          374,
          1.212,
          375,
          1.434,
          376,
          1.253,
          377,
          1.434,
          378,
          1.212,
          379,
          1.434,
          380,
          1.212,
          381,
          1.386,
          382,
          1.434,
        ],
      ],
      ['title/classes/ApiUtils.html', [117, 0.044, 383, 3.227]],
      [
        'body/classes/ApiUtils.html',
        [
          2,
          0.094,
          3,
          0.189,
          4,
          0.071,
          6,
          0.79,
          10,
          0.79,
          11,
          0.623,
          29,
          0.319,
          31,
          0.619,
          32,
          0.013,
          33,
          0.289,
          34,
          0.584,
          35,
          0.365,
          39,
          0.477,
          42,
          1.597,
          46,
          6.231,
          49,
          3.482,
          51,
          1.626,
          55,
          3.26,
          70,
          0.898,
          77,
          0.009,
          91,
          6.584,
          94,
          4.702,
          95,
          3.273,
          99,
          1.741,
          100,
          3.38,
          101,
          3.058,
          109,
          1.882,
          116,
          0.082,
          117,
          0.054,
          118,
          1.877,
          125,
          1.644,
          126,
          1.979,
          144,
          1.741,
          151,
          1.579,
          163,
          2.09,
          165,
          6.278,
          178,
          0.992,
          184,
          0.01,
          212,
          3.172,
          215,
          2.357,
          216,
          2.531,
          228,
          3.682,
          235,
          1.644,
          238,
          4.048,
          239,
          2.838,
          246,
          1.869,
          383,
          3.943,
          384,
          4.362,
          385,
          2.357,
          386,
          2.531,
          387,
          1.796,
          388,
          3.042,
          389,
          3.042,
          390,
          2.756,
          391,
          6.383,
          392,
          3.485,
          393,
          8.099,
          394,
          6.466,
          395,
          5.845,
          396,
          3.485,
          397,
          4.998,
          398,
          6.757,
          399,
          4.998,
          400,
          4.998,
          401,
          5.57,
          402,
          3.708,
          403,
          3.38,
          404,
          3.823,
          405,
          4.998,
          406,
          4.998,
          407,
          3.156,
          408,
          3.38,
          409,
          4.998,
          410,
          3.485,
          411,
          1.979,
          412,
          3.485,
          413,
          3.485,
          414,
          3.485,
          415,
          2.75,
          416,
          5.57,
          417,
          3.485,
          418,
          2.173,
          419,
          2.357,
          420,
          3.485,
          421,
          3.485,
          422,
          3.485,
          423,
          2.357,
          424,
          3.485,
          425,
          3.485,
          426,
          3.485,
          427,
          2.75,
          428,
          3.485,
          429,
          3.485,
          430,
          5.843,
          431,
          5.843,
          432,
          2.531,
          433,
          3.38,
          434,
          3.485,
          435,
          2.994,
          436,
          6.383,
          437,
          3.485,
          438,
          1.258,
          439,
          3.485,
          440,
          1.979,
          441,
          5.843,
          442,
          3.485,
          443,
          2.75,
          444,
          3.485,
          445,
          3.485,
          446,
          3.485,
          447,
          1.979,
          448,
          3.485,
          449,
          1.869,
          450,
          2.75,
          451,
          3.485,
          452,
          3.042,
          453,
          3.485,
          454,
          3.485,
          455,
          2.75,
          456,
          3.042,
          457,
          3.042,
          458,
          3.485,
          459,
          3.485,
          460,
          3.485,
          461,
          3.485,
          462,
          3.485,
          463,
          2.212,
          464,
          1.882,
          465,
          3.485,
          466,
          3.485,
        ],
      ],
      ['title/injectables/AppCommsService.html', [0, 0.635, 467, 2.971]],
      [
        'body/injectables/AppCommsService.html',
        [
          0,
          0.878,
          2,
          0.088,
          3,
          0.088,
          4,
          0.067,
          6,
          0.407,
          7,
          0.856,
          8,
          1.973,
          10,
          0.7,
          11,
          1.232,
          20,
          0.548,
          24,
          2.382,
          28,
          1.888,
          29,
          0.63,
          31,
          0.407,
          32,
          0.013,
          33,
          0.272,
          34,
          0.438,
          35,
          0.344,
          39,
          0.464,
          40,
          1.404,
          51,
          1.068,
          52,
          1.55,
          62,
          2.386,
          63,
          1.55,
          68,
          0.65,
          69,
          0.529,
          70,
          1.234,
          76,
          1.106,
          77,
          0.007,
          82,
          1.692,
          84,
          1.322,
          95,
          2.363,
          97,
          2.358,
          102,
          0.28,
          103,
          0.134,
          107,
          1.322,
          114,
          1.428,
          116,
          0.113,
          117,
          0.035,
          125,
          1.55,
          127,
          2.469,
          128,
          1.719,
          145,
          3.041,
          150,
          4.199,
          151,
          1.32,
          175,
          3.385,
          178,
          0.935,
          184,
          0.007,
          206,
          1.487,
          207,
          1.374,
          211,
          0.999,
          218,
          1.482,
          220,
          4.51,
          277,
          1.374,
          278,
          2.167,
          287,
          2.167,
          407,
          1.774,
          433,
          3.238,
          440,
          2.719,
          463,
          4.515,
          464,
          1.774,
          467,
          3.478,
          468,
          4.811,
          469,
          2.592,
          470,
          4.464,
          471,
          4.811,
          472,
          4.899,
          473,
          4.789,
          474,
          3.778,
          475,
          3.238,
          476,
          4.66,
          477,
          6.21,
          478,
          6.21,
          479,
          6.21,
          480,
          6.21,
          481,
          3.285,
          482,
          3.941,
          483,
          3.536,
          484,
          3.941,
          485,
          4.789,
          486,
          2.868,
          487,
          3.285,
          488,
          2.868,
          489,
          3.285,
          490,
          2.719,
          491,
          4.104,
          492,
          3.285,
          493,
          5.4,
          494,
          2.665,
          495,
          3.285,
          496,
          6.21,
          497,
          3.478,
          498,
          3.941,
          499,
          3.238,
          500,
          3.285,
          501,
          2.592,
          502,
          2.867,
          503,
          4.179,
          504,
          4.179,
          505,
          2.386,
          506,
          3.285,
          507,
          3.285,
          508,
          3.285,
          509,
          3.285,
          510,
          3.285,
          511,
          3.285,
          512,
          3.285,
          513,
          1.968,
          514,
          3.285,
          515,
          2.719,
          516,
          5.651,
          517,
          3.285,
          518,
          3.285,
          519,
          2.386,
          520,
          3.238,
          521,
          3.285,
          522,
          2.592,
          523,
          2.592,
          524,
          2.386,
          525,
          2.867,
          526,
          3.285,
          527,
          3.778,
          528,
          3.285,
          529,
          2.867,
          530,
          3.039,
          531,
          3.17,
          532,
          3.954,
          533,
          4.789,
          534,
          3.285,
          535,
          3.285,
          536,
          3.285,
          537,
          3.285,
          538,
          4.104,
          539,
          4.789,
          540,
          2.911,
          541,
          2.592,
          542,
          2.592,
          543,
          2.592,
          544,
          6.489,
          545,
          3.285,
          546,
          2.592,
          547,
          2.867,
          548,
          2.386,
          549,
          3.285,
          550,
          3.285,
          551,
          3.285,
          552,
          1.618,
          553,
          2.911,
          554,
          2.386,
          555,
          4.789,
          556,
          4.789,
          557,
          2.867,
          558,
          4.179,
          559,
          2.222,
        ],
      ],
      ['title/components/AppComponent.html', [295, 0.41, 331, 1.126]],
      [
        'body/components/AppComponent.html',
        [
          2,
          0.1,
          3,
          0.1,
          4,
          0.075,
          6,
          0.459,
          8,
          1.85,
          10,
          0.647,
          11,
          1.081,
          13,
          3.236,
          20,
          0.871,
          26,
          4.075,
          29,
          0.553,
          31,
          0.459,
          32,
          0.013,
          33,
          0.544,
          34,
          0.339,
          35,
          0.389,
          39,
          0.452,
          40,
          1.181,
          45,
          1.346,
          60,
          2.925,
          71,
          2.965,
          76,
          1.248,
          77,
          0.008,
          83,
          2.105,
          98,
          0.759,
          100,
          2.507,
          102,
          0.292,
          103,
          0.151,
          105,
          1.749,
          109,
          2.821,
          110,
          1.612,
          111,
          2.353,
          116,
          0.087,
          117,
          0.04,
          125,
          1.749,
          128,
          1.303,
          167,
          1.021,
          184,
          0.008,
          198,
          2.095,
          207,
          2.183,
          214,
          1.09,
          218,
          1.608,
          277,
          1.55,
          278,
          2.736,
          287,
          2.97,
          295,
          0.694,
          296,
          1.127,
          297,
          1.588,
          298,
          1.021,
          299,
          1.248,
          303,
          1.261,
          304,
          2.528,
          305,
          0.759,
          310,
          1.885,
          313,
          2.642,
          325,
          0.811,
          326,
          1.588,
          327,
          1.391,
          328,
          2.135,
          329,
          1.248,
          330,
          1.248,
          331,
          1.806,
          332,
          1.248,
          333,
          1.09,
          334,
          1.248,
          335,
          1.09,
          336,
          1.248,
          337,
          0.988,
          338,
          1.248,
          339,
          2.035,
          340,
          1.127,
          341,
          1.248,
          342,
          1.127,
          343,
          1.248,
          344,
          1.127,
          345,
          1.248,
          346,
          1.09,
          347,
          1.127,
          348,
          1.248,
          349,
          1.09,
          350,
          1.248,
          351,
          1.127,
          352,
          1.248,
          353,
          1.437,
          354,
          1.758,
          355,
          1.09,
          356,
          1.127,
          357,
          1.248,
          358,
          1.127,
          359,
          1.09,
          360,
          1.127,
          361,
          1.699,
          362,
          1.248,
          363,
          1.127,
          364,
          1.248,
          365,
          1.055,
          366,
          1.248,
          367,
          1.021,
          368,
          1.127,
          369,
          1.127,
          370,
          1.248,
          371,
          1.127,
          372,
          1.248,
          373,
          1.248,
          374,
          1.055,
          375,
          1.248,
          376,
          1.09,
          377,
          1.248,
          378,
          1.055,
          379,
          1.248,
          380,
          1.055,
          381,
          1.206,
          382,
          1.248,
          403,
          3.532,
          449,
          1.387,
          467,
          4.766,
          519,
          2.693,
          540,
          1.91,
          552,
          1.826,
          559,
          2.507,
          560,
          3.236,
          561,
          5.222,
          562,
          6.918,
          563,
          2.925,
          564,
          5.817,
          565,
          6.12,
          566,
          4.187,
          567,
          4.769,
          568,
          4.438,
          569,
          6.046,
          570,
          3.708,
          571,
          3.708,
          572,
          3.708,
          573,
          3.314,
          574,
          3.564,
          575,
          3.265,
          576,
          5.222,
          577,
          5.222,
          578,
          2.507,
          579,
          2.221,
          580,
          2.507,
          581,
          3.708,
          582,
          3.708,
          583,
          3.708,
          584,
          3.236,
          585,
          3.708,
          586,
          2.507,
          587,
          3.708,
          588,
          3.708,
          589,
          2.105,
          590,
          2.925,
          591,
          3.708,
          592,
          3.708,
          593,
          3.708,
          594,
          3.708,
          595,
          3.708,
          596,
          3.236,
          597,
          3.708,
          598,
          3.708,
          599,
          5.222,
          600,
          3.708,
          601,
          3.708,
          602,
          3.708,
          603,
          3.708,
          604,
          3.708,
          605,
          3.708,
          606,
          3.236,
          607,
          2.693,
          608,
          2.353,
          609,
          1.749,
          610,
          2.925,
          611,
          2.925,
          612,
          3.708,
          613,
          3.708,
          614,
          1.826,
        ],
      ],
      ['title/injectables/AppConfigService.html', [0, 0.635, 615, 2.767]],
      [
        'body/injectables/AppConfigService.html',
        [
          0,
          1.051,
          2,
          0.124,
          3,
          0.124,
          4,
          0.094,
          6,
          0.571,
          7,
          0.824,
          8,
          1.188,
          10,
          0.75,
          11,
          1.37,
          20,
          0.769,
          22,
          4.56,
          28,
          2.269,
          29,
          0.657,
          31,
          0.75,
          32,
          0.013,
          33,
          0.502,
          34,
          0.554,
          35,
          0.635,
          39,
          0.537,
          40,
          1.042,
          42,
          0.976,
          48,
          2.004,
          51,
          1.499,
          61,
          2.175,
          63,
          2.175,
          69,
          0.742,
          76,
          2.039,
          77,
          0.009,
          84,
          1.856,
          95,
          1.927,
          98,
          0.944,
          101,
          2.086,
          102,
          0.304,
          103,
          0.187,
          104,
          2.618,
          114,
          2.633,
          116,
          0.109,
          117,
          0.049,
          118,
          1.356,
          128,
          2.101,
          151,
          1.581,
          184,
          0.009,
          192,
          3.271,
          211,
          1.402,
          218,
          1.295,
          221,
          3.485,
          238,
          2.761,
          239,
          2.618,
          255,
          3.628,
          277,
          3.203,
          278,
          3.252,
          468,
          4.859,
          470,
          4.096,
          497,
          3.348,
          552,
          2.27,
          586,
          3.118,
          589,
          3.439,
          615,
          4.096,
          616,
          3.637,
          617,
          4.096,
          618,
          6.057,
          619,
          6.271,
          620,
          3.118,
          621,
          4.61,
          622,
          5.286,
          623,
          5.904,
          624,
          4.61,
          625,
          4.61,
          626,
          4.096,
          627,
          3.637,
          628,
          4.023,
          629,
          2.175,
          630,
          4.023,
          631,
          2.086,
          632,
          1.856,
          633,
          4.096,
          634,
          2.926,
          635,
          4.023,
          636,
          4.023,
          637,
          4.023,
          638,
          5.286,
          639,
          4.023,
          640,
          4.023,
          641,
          4.023,
          642,
          4.023,
          643,
          4.023,
          644,
          4.023,
          645,
          4.023,
          646,
          4.023,
          647,
          4.023,
          648,
          3.348,
          649,
          4.023,
          650,
          4.023,
        ],
      ],
      ['title/modules/AppModule.html', [651, 1.055, 652, 2.767]],
      [
        'body/modules/AppModule.html',
        [
          2,
          0.101,
          3,
          0.101,
          4,
          0.076,
          24,
          1.355,
          28,
          2.296,
          32,
          0.013,
          39,
          0.394,
          61,
          2.485,
          63,
          2.485,
          76,
          1.773,
          77,
          0.008,
          98,
          1.078,
          102,
          0.333,
          103,
          0.153,
          104,
          2.131,
          105,
          1.771,
          106,
          1.771,
          110,
          2.29,
          116,
          0.156,
          117,
          0.04,
          118,
          1.549,
          128,
          1.846,
          144,
          1.308,
          151,
          0.877,
          178,
          1.068,
          184,
          0.008,
          205,
          2.382,
          218,
          1.446,
          221,
          1.934,
          234,
          2.991,
          246,
          2.276,
          265,
          1.404,
          277,
          2.203,
          278,
          1.699,
          295,
          0.61,
          325,
          0.821,
          331,
          2.184,
          365,
          2.05,
          374,
          2.05,
          483,
          2.384,
          488,
          2.249,
          494,
          1.771,
          552,
          1.849,
          557,
          4.598,
          559,
          2.539,
          574,
          3.399,
          578,
          3.563,
          579,
          2.249,
          589,
          2.131,
          590,
          2.961,
          608,
          2.382,
          615,
          4.463,
          626,
          4.116,
          632,
          2.45,
          651,
          1.701,
          652,
          5.574,
          653,
          1.456,
          654,
          2.121,
          655,
          3.399,
          656,
          3.276,
          657,
          3.276,
          658,
          3.276,
          659,
          3.276,
          660,
          3.276,
          661,
          3.946,
          662,
          5.575,
          663,
          2.485,
          664,
          3.276,
          665,
          2.384,
          666,
          3.754,
          667,
          5.268,
          668,
          3.754,
          669,
          2.384,
          670,
          5.268,
          671,
          4.598,
          672,
          5.268,
          673,
          3.276,
          674,
          5.268,
          675,
          5.268,
          676,
          5.268,
          677,
          5.268,
          678,
          3.754,
          679,
          2.961,
          680,
          2.539,
          681,
          2.961,
          682,
          3.276,
          683,
          3.276,
          684,
          3.826,
          685,
          3.826,
          686,
          2.961,
          687,
          3.754,
          688,
          3.276,
          689,
          3.754,
          690,
          3.826,
          691,
          3.276,
          692,
          2.961,
          693,
          3.754,
          694,
          3.754,
          695,
          3.754,
          696,
          5.268,
          697,
          4.156,
          698,
          3.826,
          699,
          2.726,
          700,
          2.726,
          701,
          2.539,
          702,
          4.156,
          703,
          3.754,
          704,
          2.726,
          705,
          2.961,
          706,
          3.754,
          707,
          3.754,
          708,
          3.754,
          709,
          3.754,
          710,
          3.276,
          711,
          3.276,
          712,
          3.754,
          713,
          3.754,
          714,
          3.754,
          715,
          3.276,
          716,
          5.268,
          717,
          3.754,
          718,
          3.754,
          719,
          3.754,
          720,
          3.754,
          721,
          2.382,
          722,
          2.726,
          723,
          3.276,
          724,
          6.086,
          725,
          2.249,
          726,
          3.754,
          727,
          3.754,
          728,
          3.754,
          729,
          3.754,
          730,
          3.754,
        ],
      ],
      ['title/modules/AppServerModule.html', [651, 1.055, 731, 2.971]],
      [
        'body/modules/AppServerModule.html',
        [
          2,
          0.154,
          3,
          0.154,
          4,
          0.116,
          32,
          0.013,
          77,
          0.01,
          85,
          3.621,
          102,
          0.333,
          103,
          0.232,
          109,
          3.081,
          116,
          0.164,
          117,
          0.061,
          163,
          2.385,
          178,
          1.623,
          184,
          0.01,
          265,
          2.134,
          325,
          1.248,
          331,
          2.254,
          578,
          3.858,
          632,
          2.296,
          651,
          1.787,
          652,
          5.472,
          653,
          2.213,
          654,
          2.602,
          655,
          3.522,
          663,
          3.269,
          669,
          3.137,
          688,
          4.979,
          731,
          5.947,
          732,
          4.979,
          733,
          5.705,
          734,
          5.705,
          735,
          5.705,
          736,
          6.931,
          737,
          6.931,
          738,
          4.979,
          739,
          4.979,
          740,
          4.979,
          741,
          5.705,
          742,
          5.705,
          743,
          3.858,
        ],
      ],
      ['title/injectables/AppSettings.html', [0, 0.635, 28, 1.244]],
      [
        'body/injectables/AppSettings.html',
        [
          0,
          0.776,
          2,
          0.058,
          3,
          0.058,
          4,
          0.071,
          6,
          0.268,
          7,
          1.277,
          8,
          2.101,
          10,
          0.54,
          11,
          1.337,
          20,
          0.362,
          24,
          2.302,
          28,
          1.058,
          29,
          0.716,
          31,
          0.815,
          32,
          0.013,
          33,
          0.546,
          34,
          0.631,
          35,
          0.69,
          38,
          1.977,
          39,
          0.605,
          40,
          1.32,
          42,
          1.722,
          49,
          1.513,
          51,
          1.132,
          52,
          2.355,
          53,
          6.319,
          55,
          2.719,
          68,
          1.366,
          69,
          1.285,
          76,
          1.468,
          77,
          0.005,
          98,
          1.439,
          99,
          0.755,
          101,
          1.575,
          102,
          0.222,
          103,
          0.142,
          116,
          0.082,
          117,
          0.023,
          118,
          1.717,
          127,
          3.077,
          128,
          1.921,
          145,
          2.649,
          151,
          0.506,
          182,
          4.15,
          184,
          0.005,
          218,
          1.386,
          219,
          1.231,
          255,
          3.498,
          277,
          0.906,
          278,
          0.981,
          387,
          1.117,
          411,
          1.231,
          432,
          2.528,
          438,
          1.256,
          483,
          2.777,
          497,
          3.627,
          501,
          2.746,
          519,
          5.757,
          520,
          4.15,
          522,
          2.746,
          523,
          2.746,
          524,
          3.627,
          527,
          1.71,
          552,
          1.714,
          609,
          1.642,
          614,
          3.517,
          648,
          3.168,
          722,
          2.528,
          725,
          2.085,
          744,
          1.575,
          745,
          4.994,
          746,
          4.994,
          747,
          4.994,
          748,
          4.994,
          749,
          4.994,
          750,
          4.994,
          751,
          4.606,
          752,
          7.407,
          753,
          4.362,
          754,
          4.994,
          755,
          4.994,
          756,
          3.481,
          757,
          3.481,
          758,
          4.358,
          759,
          3.481,
          760,
          4.314,
          761,
          4.177,
          762,
          2.168,
          763,
          2.168,
          764,
          3.481,
          765,
          3.481,
          766,
          5.894,
          767,
          2.168,
          768,
          3.038,
          769,
          5.567,
          770,
          2.168,
          771,
          2.168,
          772,
          3.481,
          773,
          2.168,
          774,
          5.839,
          775,
          3.481,
          776,
          2.168,
          777,
          3.481,
          778,
          2.168,
          779,
          2.168,
          780,
          3.481,
          781,
          3.481,
          782,
          2.168,
          783,
          2.168,
          784,
          2.168,
          785,
          2.168,
          786,
          3.481,
          787,
          2.168,
          788,
          3.481,
          789,
          2.168,
          790,
          2.168,
          791,
          2.528,
          792,
          2.168,
          793,
          3.481,
          794,
          2.746,
          795,
          2.168,
          796,
          2.168,
          797,
          2.168,
          798,
          2.168,
          799,
          2.168,
          800,
          2.168,
          801,
          2.168,
          802,
          2.168,
          803,
          2.168,
          804,
          2.168,
          805,
          2.168,
          806,
          2.168,
          807,
          2.168,
          808,
          2.168,
          809,
          2.168,
          810,
          2.168,
          811,
          2.168,
          812,
          2.168,
          813,
          1.892,
          814,
          0.942,
          815,
          1.466,
          816,
          4.358,
          817,
          2.168,
          818,
          2.168,
          819,
          2.168,
          820,
          3.627,
          821,
          2.209,
          822,
          2.168,
          823,
          3.481,
          824,
          3.481,
          825,
          2.168,
          826,
          2.168,
          827,
          3.481,
          828,
          3.481,
          829,
          3.481,
          830,
          3.481,
          831,
          3.481,
          832,
          2.168,
          833,
          2.168,
          834,
          2.168,
          835,
          3.481,
          836,
          2.168,
          837,
          2.168,
          838,
          2.168,
          839,
          2.168,
          840,
          3.481,
          841,
          2.168,
          842,
          2.168,
          843,
          2.168,
          844,
          2.168,
          845,
          5.469,
          846,
          2.168,
          847,
          2.168,
          848,
          3.481,
          849,
          4.362,
          850,
          4.362,
          851,
          3.441,
          852,
          2.168,
          853,
          2.168,
          854,
          2.168,
          855,
          2.168,
          856,
          2.168,
          857,
          2.168,
          858,
          1.71,
          859,
          1.892,
          860,
          4.358,
          861,
          1.892,
          862,
          2.168,
          863,
          1.892,
          864,
          3.038,
        ],
      ],
      ['title/guards/AuthGuard.html', [865, 3.227, 866, 3.57]],
      [
        'body/guards/AuthGuard.html',
        [
          0,
          1.044,
          2,
          0.146,
          3,
          0.146,
          4,
          0.11,
          6,
          0.672,
          8,
          1.398,
          10,
          0.832,
          20,
          0.905,
          28,
          2.32,
          29,
          0.615,
          31,
          0.672,
          32,
          0.013,
          33,
          0.45,
          34,
          0.496,
          35,
          0.569,
          39,
          0.545,
          52,
          2.559,
          70,
          1.398,
          77,
          0.01,
          83,
          3.08,
          98,
          1.11,
          102,
          0.319,
          103,
          0.221,
          105,
          2.559,
          114,
          2.358,
          116,
          0.128,
          117,
          0.058,
          128,
          1.821,
          140,
          3.443,
          178,
          1.543,
          179,
          3.94,
          184,
          0.01,
          206,
          2.455,
          207,
          2.268,
          211,
          1.649,
          246,
          2.514,
          268,
          2.358,
          277,
          2.268,
          278,
          2.455,
          303,
          1.31,
          407,
          2.93,
          475,
          3.669,
          552,
          2.672,
          566,
          4.333,
          608,
          4.844,
          609,
          2.559,
          611,
          4.28,
          614,
          2.672,
          620,
          3.669,
          760,
          4.28,
          865,
          4.28,
          866,
          5.865,
          867,
          5.425,
          868,
          7.993,
          869,
          5.425,
          870,
          5.425,
          871,
          5.425,
          872,
          4.28,
          873,
          4.734,
          874,
          5.425,
          875,
          5.425,
          876,
          5.425,
          877,
          3.08,
          878,
          4.734,
          879,
          5.425,
        ],
      ],
      ['title/injectables/AuthService.html', [0, 0.635, 566, 2.323]],
      [
        'body/injectables/AuthService.html',
        [
          0,
          0.755,
          2,
          0.069,
          3,
          0.069,
          4,
          0.052,
          6,
          0.317,
          7,
          0.869,
          8,
          1.957,
          10,
          0.678,
          11,
          1.433,
          20,
          0.662,
          22,
          3.477,
          24,
          1.433,
          26,
          3.715,
          28,
          1.666,
          29,
          0.671,
          31,
          0.678,
          32,
          0.013,
          33,
          0.454,
          34,
          0.598,
          35,
          0.574,
          38,
          2.761,
          39,
          0.53,
          40,
          1.529,
          48,
          1.114,
          52,
          1.873,
          68,
          1.43,
          69,
          1.01,
          70,
          1.743,
          71,
          3.366,
          77,
          0.006,
          80,
          2.479,
          83,
          1.454,
          84,
          2.205,
          85,
          1.626,
          92,
          2.255,
          95,
          1.66,
          97,
          2.698,
          98,
          1.214,
          99,
          1.384,
          102,
          0.282,
          103,
          0.104,
          104,
          1.454,
          105,
          1.208,
          109,
          1.383,
          111,
          1.626,
          114,
          1.114,
          116,
          0.06,
          117,
          0.027,
          118,
          1.743,
          124,
          3.705,
          125,
          2.796,
          127,
          2.346,
          128,
          1.732,
          140,
          4.406,
          148,
          2.236,
          151,
          1.136,
          163,
          1.071,
          169,
          3.289,
          178,
          1.784,
          179,
          1.86,
          181,
          4.244,
          182,
          4.797,
          183,
          3.532,
          184,
          0.006,
          187,
          2.939,
          205,
          1.626,
          206,
          1.159,
          207,
          1.071,
          217,
          2.379,
          218,
          0.76,
          219,
          1.454,
          221,
          2.822,
          246,
          1.485,
          250,
          3.705,
          262,
          1.86,
          277,
          1.071,
          278,
          1.159,
          359,
          1.168,
          368,
          1.989,
          395,
          2.021,
          418,
          1.726,
          419,
          2.686,
          438,
          2.361,
          472,
          2.021,
          483,
          1.159,
          486,
          1.534,
          490,
          2.255,
          531,
          2.844,
          532,
          2.379,
          552,
          2.395,
          553,
          1.32,
          554,
          1.86,
          564,
          4.322,
          566,
          2.255,
          574,
          2.505,
          575,
          2.145,
          579,
          1.534,
          596,
          2.236,
          608,
          2.52,
          610,
          5.161,
          611,
          2.021,
          614,
          3.612,
          631,
          1.159,
          634,
          1.626,
          654,
          0.893,
          723,
          2.236,
          877,
          3.715,
          878,
          2.236,
          880,
          2.236,
          881,
          5.478,
          882,
          4.781,
          883,
          5.928,
          884,
          4.781,
          885,
          5.478,
          886,
          5.478,
          887,
          5.928,
          888,
          5.478,
          889,
          4.863,
          890,
          2.562,
          891,
          3.545,
          892,
          3.705,
          893,
          3.971,
          894,
          2.562,
          895,
          3.971,
          896,
          3.971,
          897,
          3.466,
          898,
          3.971,
          899,
          2.562,
          900,
          3.971,
          901,
          2.562,
          902,
          4.863,
          903,
          3.971,
          904,
          2.562,
          905,
          3.971,
          906,
          2.562,
          907,
          4.781,
          908,
          5.477,
          909,
          3.466,
          910,
          3.466,
          911,
          5.928,
          912,
          4.781,
          913,
          2.562,
          914,
          3.133,
          915,
          2.562,
          916,
          3.466,
          917,
          4.244,
          918,
          3.971,
          919,
          3.971,
          920,
          2.562,
          921,
          3.971,
          922,
          3.133,
          923,
          2.562,
          924,
          2.562,
          925,
          4.244,
          926,
          3.836,
          927,
          3.971,
          928,
          1.383,
          929,
          1.534,
          930,
          2.236,
          931,
          2.021,
          932,
          3.971,
          933,
          2.562,
          934,
          2.562,
          935,
          2.562,
          936,
          3.971,
          937,
          3.971,
          938,
          2.686,
          939,
          3.971,
          940,
          3.971,
          941,
          2.562,
          942,
          2.562,
          943,
          1.534,
          944,
          3.971,
          945,
          1.86,
          946,
          2.562,
          947,
          2.562,
          948,
          3.971,
          949,
          4.863,
          950,
          4.781,
          951,
          4.863,
          952,
          2.562,
          953,
          2.021,
          954,
          2.562,
          955,
          2.562,
          956,
          2.562,
          957,
          2.562,
          958,
          2.562,
          959,
          3.971,
          960,
          2.562,
          961,
          2.021,
          962,
          4.863,
          963,
          2.236,
          964,
          2.562,
          965,
          2.562,
          966,
          2.562,
          967,
          2.562,
          968,
          2.562,
          969,
          2.562,
          970,
          1.732,
          971,
          2.236,
          972,
          2.562,
          973,
          1.626,
          974,
          2.562,
          975,
          3.971,
          976,
          1.732,
          977,
          2.562,
          978,
          2.562,
          979,
          2.562,
          980,
          2.236,
          981,
          5.174,
          982,
          3.971,
          983,
          2.562,
          984,
          2.562,
          985,
          2.236,
          986,
          2.236,
          987,
          2.562,
        ],
      ],
      ['title/modules/ChartModule.html', [651, 1.055, 988, 2.767]],
      [
        'body/modules/ChartModule.html',
        [
          2,
          0.16,
          3,
          0.16,
          4,
          0.12,
          32,
          0.013,
          77,
          0.011,
          102,
          0.32,
          103,
          0.241,
          116,
          0.186,
          117,
          0.064,
          178,
          1.687,
          184,
          0.011,
          265,
          2.218,
          325,
          1.297,
          333,
          2.495,
          632,
          3.056,
          651,
          1.829,
          653,
          2.3,
          654,
          2.066,
          655,
          2.797,
          663,
          3.346,
          669,
          3.21,
          814,
          2.578,
          988,
          5.581,
          989,
          5.175,
          990,
          5.175,
          991,
          5.175,
          992,
          5.929,
          993,
          3.655,
          994,
          5.929,
        ],
      ],
      ['title/components/ChartsComponent.html', [295, 0.41, 335, 1.203]],
      [
        'body/components/ChartsComponent.html',
        [
          2,
          0.077,
          3,
          0.077,
          4,
          0.058,
          6,
          0.356,
          7,
          0.775,
          8,
          1.85,
          10,
          0.537,
          11,
          1.453,
          20,
          0.871,
          29,
          0.697,
          31,
          0.356,
          32,
          0.013,
          33,
          0.518,
          34,
          0.623,
          35,
          0.301,
          39,
          0.569,
          40,
          0.981,
          42,
          1.548,
          45,
          1.118,
          46,
          2.268,
          68,
          1.299,
          69,
          1.057,
          77,
          0.007,
          80,
          1.814,
          98,
          0.588,
          101,
          3.083,
          102,
          0.212,
          103,
          0.117,
          109,
          3.545,
          116,
          0.068,
          117,
          0.031,
          151,
          1.736,
          184,
          0.007,
          187,
          3.049,
          198,
          2.046,
          214,
          0.845,
          218,
          1.561,
          295,
          0.626,
          296,
          0.874,
          297,
          1.319,
          298,
          0.791,
          299,
          0.968,
          303,
          1.047,
          304,
          2.184,
          305,
          0.588,
          306,
          2.463,
          307,
          2.463,
          308,
          2.343,
          310,
          1.565,
          313,
          2.342,
          318,
          1.632,
          325,
          0.629,
          326,
          1.319,
          327,
          1.155,
          328,
          1.892,
          329,
          0.968,
          330,
          0.968,
          331,
          0.791,
          332,
          0.968,
          333,
          0.845,
          334,
          0.968,
          335,
          1.711,
          336,
          0.968,
          337,
          0.766,
          338,
          0.968,
          339,
          1.758,
          340,
          0.874,
          341,
          0.968,
          342,
          0.874,
          343,
          0.968,
          344,
          0.874,
          345,
          0.968,
          346,
          0.845,
          347,
          0.874,
          348,
          0.968,
          349,
          0.845,
          350,
          0.968,
          351,
          0.874,
          352,
          0.968,
          353,
          1.194,
          354,
          1.46,
          355,
          0.845,
          356,
          0.874,
          357,
          0.968,
          358,
          0.874,
          359,
          0.845,
          360,
          0.874,
          361,
          1.411,
          362,
          0.968,
          363,
          0.874,
          364,
          0.968,
          365,
          0.818,
          366,
          0.968,
          367,
          0.791,
          368,
          0.874,
          369,
          0.874,
          370,
          0.968,
          371,
          0.874,
          372,
          0.968,
          373,
          0.968,
          374,
          0.818,
          375,
          0.968,
          376,
          0.845,
          377,
          0.968,
          378,
          0.818,
          379,
          0.968,
          380,
          0.818,
          381,
          0.935,
          382,
          0.968,
          427,
          3.422,
          435,
          3.931,
          438,
          2.099,
          449,
          1.622,
          925,
          3.785,
          943,
          1.722,
          995,
          2.509,
          996,
          3.785,
          997,
          4.337,
          998,
          4.337,
          999,
          6.383,
          1000,
          5.817,
          1001,
          5.817,
          1002,
          5.817,
          1003,
          5.077,
          1004,
          6.264,
          1005,
          5.817,
          1006,
          3.785,
          1007,
          5.817,
          1008,
          7.014,
          1009,
          4.337,
          1010,
          2.875,
          1011,
          4.337,
          1012,
          5.223,
          1013,
          2.875,
          1014,
          2.875,
          1015,
          2.875,
          1016,
          4.589,
          1017,
          6.713,
          1018,
          2.875,
          1019,
          5.817,
          1020,
          6.571,
          1021,
          2.875,
          1022,
          2.875,
          1023,
          2.875,
          1024,
          2.875,
          1025,
          2.875,
          1026,
          2.875,
          1027,
          2.875,
          1028,
          2.875,
          1029,
          2.875,
          1030,
          2.875,
          1031,
          2.875,
          1032,
          5.077,
          1033,
          4.337,
          1034,
          4.925,
          1035,
          4.337,
          1036,
          2.875,
          1037,
          5.817,
          1038,
          4.337,
          1039,
          4.337,
          1040,
          4.337,
          1041,
          4.337,
          1042,
          2.875,
          1043,
          4.337,
          1044,
          4.337,
          1045,
          2.875,
          1046,
          2.875,
          1047,
          2.875,
          1048,
          3.532,
          1049,
          2.875,
          1050,
          4.337,
          1051,
          2.875,
          1052,
          4.337,
          1053,
          2.875,
          1054,
          4.337,
          1055,
          2.875,
          1056,
          2.875,
          1057,
          2.875,
          1058,
          2.875,
          1059,
          2.875,
          1060,
          2.875,
          1061,
          2.875,
          1062,
          2.875,
          1063,
          2.509,
          1064,
          4.337,
        ],
      ],
      ['title/modules/ComponentsModule.html', [651, 1.055, 1065, 2.767]],
      [
        'body/modules/ComponentsModule.html',
        [
          2,
          0.121,
          3,
          0.121,
          4,
          0.092,
          32,
          0.013,
          39,
          0.336,
          77,
          0.009,
          98,
          0.922,
          102,
          0.34,
          103,
          0.183,
          110,
          2.593,
          116,
          0.175,
          117,
          0.048,
          151,
          1.393,
          178,
          1.281,
          184,
          0.009,
          234,
          2.557,
          265,
          1.684,
          295,
          0.598,
          296,
          1.813,
          301,
          3.553,
          325,
          0.985,
          331,
          2.196,
          337,
          1.589,
          340,
          1.813,
          342,
          1.813,
          351,
          1.813,
          358,
          1.813,
          359,
          1.324,
          360,
          1.813,
          361,
          1.465,
          363,
          1.813,
          365,
          2.27,
          367,
          1.642,
          369,
          1.813,
          371,
          1.813,
          374,
          2.27,
          390,
          2.124,
          632,
          2.692,
          651,
          1.537,
          653,
          1.747,
          654,
          1.569,
          655,
          3.155,
          663,
          2.814,
          665,
          2.038,
          669,
          3.027,
          681,
          3.553,
          702,
          5.276,
          721,
          3.785,
          814,
          1.958,
          891,
          2.814,
          993,
          3.073,
          1065,
          5.669,
          1066,
          3.93,
          1067,
          4.504,
          1068,
          3.93,
          1069,
          3.93,
          1070,
          4.83,
          1071,
          4.83,
          1072,
          3.93,
          1073,
          6.214,
          1074,
          4.034,
          1075,
          3.93,
          1076,
          4.504,
          1077,
          6.688,
          1078,
          4.504,
          1079,
          4.504,
          1080,
          4.504,
          1081,
          4.504,
          1082,
          4.504,
          1083,
          4.504,
          1084,
          4.504,
          1085,
          4.504,
          1086,
          4.504,
          1087,
          4.504,
          1088,
          3.553,
          1089,
          4.504,
          1090,
          4.504,
          1091,
          4.332,
          1092,
          3.046,
        ],
      ],
      ['title/components/ConfirmationModalComponent.html', [295, 0.41, 337, 1.09]],
      [
        'body/components/ConfirmationModalComponent.html',
        [
          0,
          0.901,
          2,
          0.116,
          3,
          0.116,
          4,
          0.088,
          6,
          0.534,
          7,
          1.037,
          10,
          0.718,
          11,
          1.396,
          20,
          0.72,
          29,
          0.64,
          31,
          0.534,
          32,
          0.013,
          33,
          0.581,
          34,
          0.599,
          35,
          0.452,
          39,
          0.322,
          40,
          0.976,
          45,
          1.494,
          77,
          0.009,
          80,
          3.265,
          98,
          0.883,
          102,
          0.266,
          103,
          0.176,
          116,
          0.102,
          117,
          0.046,
          184,
          0.009,
          198,
          2.12,
          214,
          1.269,
          218,
          1.622,
          295,
          0.732,
          296,
          1.312,
          297,
          1.763,
          298,
          1.188,
          299,
          1.453,
          305,
          0.883,
          310,
          2.092,
          325,
          0.944,
          326,
          1.763,
          327,
          1.544,
          328,
          2.277,
          329,
          1.453,
          330,
          1.453,
          331,
          1.188,
          332,
          1.453,
          333,
          1.269,
          334,
          1.453,
          335,
          1.269,
          336,
          1.453,
          337,
          1.864,
          338,
          2.662,
          339,
          2.204,
          340,
          1.312,
          341,
          1.453,
          342,
          1.312,
          343,
          1.453,
          344,
          1.312,
          345,
          1.453,
          346,
          1.269,
          347,
          1.312,
          348,
          1.453,
          349,
          1.269,
          350,
          1.453,
          351,
          1.312,
          352,
          1.453,
          353,
          1.596,
          354,
          1.951,
          355,
          1.269,
          356,
          1.312,
          357,
          1.453,
          358,
          1.312,
          359,
          1.269,
          360,
          1.312,
          361,
          1.886,
          362,
          1.453,
          363,
          1.312,
          364,
          1.453,
          365,
          1.228,
          366,
          1.453,
          367,
          1.188,
          368,
          1.312,
          369,
          1.312,
          370,
          1.453,
          371,
          1.312,
          372,
          1.453,
          373,
          1.453,
          374,
          1.228,
          375,
          1.453,
          376,
          1.269,
          377,
          1.453,
          378,
          1.228,
          379,
          1.453,
          380,
          1.228,
          381,
          1.404,
          382,
          1.453,
          654,
          1.504,
          891,
          2.735,
          928,
          2.331,
          929,
          2.585,
          938,
          2.919,
          1093,
          6.373,
          1094,
          3.134,
          1095,
          5.06,
          1096,
          7.302,
          1097,
          5.932,
          1098,
          4.316,
          1099,
          6.562,
          1100,
          4.316,
          1101,
          4.316,
          1102,
          3.921,
          1103,
          3.405,
          1104,
          5.06,
          1105,
          3.767,
          1106,
          4.316,
          1107,
          3.134,
          1108,
          4.316,
          1109,
          4.316,
          1110,
          4.316,
          1111,
          5.798,
        ],
      ],
      ['title/modules/ContextModule.html', [651, 1.055, 1112, 2.767]],
      [
        'body/modules/ContextModule.html',
        [
          2,
          0.159,
          3,
          0.159,
          4,
          0.12,
          32,
          0.013,
          77,
          0.011,
          102,
          0.327,
          103,
          0.24,
          116,
          0.179,
          117,
          0.063,
          178,
          1.678,
          184,
          0.011,
          265,
          2.206,
          325,
          1.29,
          356,
          1.793,
          632,
          2.847,
          651,
          1.823,
          653,
          2.287,
          654,
          2.055,
          655,
          3.573,
          663,
          3.336,
          669,
          3.2,
          814,
          2.564,
          993,
          3.643,
          1112,
          5.514,
          1113,
          5.147,
          1114,
          5.147,
          1115,
          4.884,
          1116,
          4.283,
          1117,
          3.743,
          1118,
          5.898,
          1119,
          7.072,
          1120,
          3.743,
          1121,
          3.988,
          1122,
          5.898,
          1123,
          5.898,
        ],
      ],
      ['title/injectables/ContextService.html', [0, 0.635, 1115, 2.451]],
      [
        'body/injectables/ContextService.html',
        [
          0,
          0.998,
          2,
          0.112,
          3,
          0.112,
          4,
          0.085,
          6,
          0.515,
          7,
          1.011,
          8,
          1.656,
          10,
          0.7,
          11,
          1.33,
          20,
          0.694,
          29,
          0.631,
          31,
          0.795,
          32,
          0.013,
          33,
          0.674,
          34,
          0.68,
          35,
          0.78,
          39,
          0.422,
          40,
          1.278,
          42,
          0.88,
          51,
          1.839,
          68,
          0.823,
          69,
          0.67,
          77,
          0.009,
          78,
          2.142,
          80,
          3.181,
          96,
          3.824,
          101,
          1.882,
          102,
          0.261,
          103,
          0.169,
          116,
          0.098,
          117,
          0.045,
          118,
          2.12,
          163,
          2.882,
          184,
          0.009,
          211,
          1.264,
          223,
          2.193,
          260,
          3.824,
          283,
          3.387,
          295,
          0.763,
          298,
          1.556,
          313,
          2.276,
          356,
          2.455,
          418,
          2.997,
          449,
          1.555,
          450,
          3.281,
          540,
          3.989,
          553,
          3.714,
          725,
          4.129,
          970,
          2.813,
          1115,
          3.387,
          1116,
          5.236,
          1117,
          4.576,
          1120,
          2.639,
          1121,
          4.662,
          1124,
          3.63,
          1125,
          6.894,
          1126,
          6.369,
          1127,
          4.159,
          1128,
          7.437,
          1129,
          5.654,
          1130,
          5.654,
          1131,
          5.526,
          1132,
          5.607,
          1133,
          4.159,
          1134,
          4.107,
          1135,
          5.555,
          1136,
          5.654,
          1137,
          5.654,
          1138,
          6.292,
          1139,
          6.64,
          1140,
          4.159,
          1141,
          4.461,
          1142,
          4.935,
          1143,
          4.461,
          1144,
          5.654,
          1145,
          4.935,
          1146,
          4.935,
          1147,
          4.935,
          1148,
          4.159,
          1149,
          3.02,
          1150,
          3.281,
          1151,
          5.654,
          1152,
          4.159,
          1153,
          4.159,
          1154,
          4.159,
          1155,
          4.159,
        ],
      ],
      ['title/pipes/CountPipe.html', [167, 1.126, 1156, 2.767]],
      [
        'body/pipes/CountPipe.html',
        [
          2,
          0.153,
          3,
          0.153,
          4,
          0.116,
          10,
          0.704,
          29,
          0.52,
          31,
          0.704,
          32,
          0.013,
          33,
          0.618,
          34,
          0.52,
          35,
          0.596,
          39,
          0.594,
          42,
          1.464,
          55,
          3.001,
          69,
          1.301,
          77,
          0.01,
          102,
          0.231,
          103,
          0.231,
          116,
          0.134,
          117,
          0.061,
          167,
          2.052,
          184,
          0.01,
          200,
          2.682,
          223,
          2.205,
          228,
          2.573,
          263,
          5.414,
          303,
          1.372,
          305,
          1.164,
          411,
          4.233,
          438,
          2.496,
          1156,
          4.678,
          1157,
          4.962,
          1158,
          4.143,
          1159,
          5.685,
          1160,
          3.563,
          1161,
          6.036,
          1162,
          6.917,
          1163,
          5.685,
        ],
      ],
      ['title/components/CounterComponent.html', [295, 0.41, 340, 1.244]],
      [
        'body/components/CounterComponent.html',
        [
          2,
          0.108,
          3,
          0.108,
          4,
          0.081,
          6,
          0.495,
          7,
          0.984,
          10,
          0.681,
          11,
          1.434,
          20,
          1.05,
          29,
          0.689,
          32,
          0.013,
          33,
          0.522,
          34,
          0.366,
          39,
          0.531,
          40,
          1.608,
          45,
          1.419,
          73,
          3.85,
          77,
          0.008,
          98,
          0.818,
          102,
          0.256,
          103,
          0.163,
          107,
          1.609,
          111,
          2.538,
          116,
          0.094,
          117,
          0.043,
          127,
          1.495,
          184,
          0.008,
          198,
          2.108,
          214,
          1.176,
          218,
          1.612,
          265,
          2.749,
          295,
          0.713,
          296,
          1.216,
          297,
          1.673,
          298,
          1.101,
          299,
          1.346,
          303,
          1.329,
          304,
          2.632,
          305,
          0.818,
          306,
          3.125,
          307,
          3.125,
          308,
          2.973,
          310,
          1.986,
          313,
          2.73,
          318,
          2.27,
          325,
          0.875,
          326,
          1.673,
          327,
          1.466,
          328,
          2.206,
          329,
          1.346,
          330,
          1.346,
          331,
          1.101,
          332,
          1.346,
          333,
          1.176,
          334,
          1.346,
          335,
          1.176,
          336,
          1.346,
          337,
          1.065,
          338,
          1.346,
          339,
          2.119,
          340,
          2.062,
          341,
          1.346,
          342,
          1.216,
          343,
          1.346,
          344,
          1.216,
          345,
          1.346,
          346,
          1.176,
          347,
          1.216,
          348,
          1.346,
          349,
          1.176,
          350,
          1.346,
          351,
          1.216,
          352,
          1.346,
          353,
          1.515,
          354,
          1.853,
          355,
          1.176,
          356,
          1.216,
          357,
          1.346,
          358,
          1.216,
          359,
          1.176,
          360,
          1.216,
          361,
          1.79,
          362,
          1.346,
          363,
          1.216,
          364,
          1.346,
          365,
          1.137,
          366,
          1.346,
          367,
          1.101,
          368,
          1.216,
          369,
          1.216,
          370,
          1.346,
          371,
          1.216,
          372,
          1.346,
          373,
          1.346,
          374,
          1.137,
          375,
          1.346,
          376,
          1.176,
          377,
          1.346,
          378,
          1.137,
          379,
          1.346,
          380,
          1.137,
          381,
          1.3,
          382,
          1.346,
          435,
          3.297,
          447,
          4.173,
          490,
          4.173,
          908,
          6.373,
          926,
          5.349,
          1164,
          3.489,
          1165,
          3.77,
          1166,
          3.997,
          1167,
          5.504,
          1168,
          5.504,
          1169,
          4.062,
          1170,
          5.504,
          1171,
          3.998,
          1172,
          3.998,
          1173,
          3.998,
          1174,
          3.998,
          1175,
          3.998,
          1176,
          3.998,
          1177,
          5.504,
          1178,
          5.504,
          1179,
          3.998,
          1180,
          3.998,
          1181,
          5.504,
        ],
      ],
      ['title/pipes/DebouncePipe.html', [167, 1.126, 1182, 2.767]],
      [
        'body/pipes/DebouncePipe.html',
        [
          2,
          0.129,
          3,
          0.129,
          4,
          0.098,
          7,
          0.859,
          8,
          2.032,
          10,
          0.595,
          29,
          0.668,
          31,
          0.595,
          32,
          0.013,
          33,
          0.572,
          34,
          0.668,
          35,
          0.503,
          39,
          0.545,
          51,
          1.562,
          68,
          1.497,
          69,
          1.341,
          70,
          1.238,
          77,
          0.009,
          78,
          2.475,
          102,
          0.195,
          103,
          0.195,
          116,
          0.113,
          117,
          0.052,
          127,
          2.898,
          144,
          1.674,
          167,
          1.9,
          184,
          0.009,
          200,
          2.266,
          211,
          1.46,
          219,
          3.533,
          240,
          3.064,
          287,
          2.816,
          303,
          1.16,
          305,
          0.983,
          411,
          2.728,
          438,
          2.635,
          449,
          2.327,
          554,
          3.489,
          938,
          4.208,
          953,
          3.79,
          1003,
          5.43,
          1158,
          3.727,
          1160,
          3.205,
          1182,
          4.208,
          1183,
          4.192,
          1184,
          6.761,
          1185,
          4.208,
          1186,
          5.43,
          1187,
          3.949,
          1188,
          6.222,
          1189,
          7.562,
          1190,
          4.804,
          1191,
          6.902,
          1192,
          4.804,
          1193,
          6.902,
          1194,
          4.804,
          1195,
          6.902,
          1196,
          4.804,
          1197,
          5.43,
          1198,
          5.43,
          1199,
          4.804,
          1200,
          4.804,
          1201,
          4.192,
          1202,
          7.562,
          1203,
          6.222,
          1204,
          7.3,
          1205,
          4.804,
          1206,
          4.192,
          1207,
          4.804,
          1208,
          4.804,
        ],
      ],
      ['title/classes/DesktopUtils.html', [117, 0.044, 1209, 2.971]],
      [
        'body/classes/DesktopUtils.html',
        [
          2,
          0.145,
          3,
          0.145,
          4,
          0.11,
          6,
          0.667,
          10,
          0.829,
          29,
          0.493,
          31,
          0.667,
          32,
          0.013,
          33,
          0.447,
          34,
          0.493,
          35,
          0.565,
          39,
          0.569,
          42,
          1.657,
          51,
          1.753,
          57,
          4.252,
          62,
          3.914,
          70,
          1.389,
          77,
          0.01,
          116,
          0.127,
          117,
          0.072,
          151,
          1.259,
          179,
          3.914,
          184,
          0.01,
          236,
          4.252,
          252,
          4.526,
          258,
          3.914,
          385,
          3.645,
          386,
          3.914,
          387,
          2.776,
          388,
          4.704,
          389,
          4.704,
          390,
          3.434,
          546,
          4.252,
          575,
          2.911,
          579,
          3.228,
          820,
          3.914,
          851,
          4.252,
          1134,
          3.914,
          1209,
          4.861,
          1210,
          5.841,
          1211,
          6.693,
          1212,
          6.693,
          1213,
          5.39,
          1214,
          5.28,
          1215,
          6.354,
          1216,
          6.354,
          1217,
          5.39,
          1218,
          5.39,
          1219,
          3.42,
          1220,
          4.252,
          1221,
          5.28,
          1222,
          6.693,
          1223,
          5.39,
          1224,
          4.704,
          1225,
          3.914,
          1226,
          5.39,
          1227,
          5.39,
          1228,
          5.39,
          1229,
          5.39,
          1230,
          5.39,
          1231,
          5.39,
          1232,
          4.252,
          1233,
          4.704,
          1234,
          5.39,
          1235,
          5.39,
          1236,
          5.39,
          1237,
          5.39,
          1238,
          5.39,
          1239,
          5.39,
          1240,
          5.39,
          1241,
          6.693,
          1242,
          5.39,
          1243,
          5.39,
        ],
      ],
      ['title/pipes/DurationPipe.html', [167, 1.126, 1244, 2.767]],
      [
        'body/pipes/DurationPipe.html',
        [
          2,
          0.147,
          3,
          0.147,
          4,
          0.111,
          10,
          0.674,
          29,
          0.498,
          31,
          0.674,
          32,
          0.013,
          33,
          0.606,
          34,
          0.498,
          35,
          0.57,
          39,
          0.407,
          42,
          1.152,
          51,
          1.77,
          69,
          1.084,
          77,
          0.01,
          102,
          0.221,
          103,
          0.221,
          116,
          0.128,
          117,
          0.058,
          163,
          2.276,
          167,
          2.013,
          184,
          0.01,
          200,
          2.567,
          303,
          1.314,
          305,
          1.114,
          408,
          3.681,
          438,
          2.887,
          443,
          4.294,
          914,
          5.312,
          926,
          6.028,
          931,
          5.312,
          961,
          4.294,
          1158,
          4.034,
          1160,
          3.469,
          1166,
          4.891,
          1219,
          4.274,
          1244,
          4.554,
          1245,
          4.75,
          1246,
          5.312,
          1247,
          4.891,
          1248,
          6.734,
          1249,
          5.443,
          1250,
          7.313,
          1251,
          7.313,
          1252,
          6.982,
          1253,
          5.443,
          1254,
          6.734,
          1255,
          4.294,
          1256,
          5.443,
          1257,
          5.443,
          1258,
          5.443,
          1259,
          5.443,
          1260,
          5.443,
          1261,
          5.443,
          1262,
          5.443,
          1263,
          4.75,
        ],
      ],
      ['title/pipes/FilterPipe.html', [167, 1.126, 1264, 2.767]],
      [
        'body/pipes/FilterPipe.html',
        [
          2,
          0.114,
          3,
          0.114,
          4,
          0.086,
          7,
          1.161,
          10,
          0.526,
          29,
          0.389,
          31,
          0.526,
          32,
          0.013,
          33,
          0.539,
          34,
          0.389,
          35,
          0.445,
          39,
          0.605,
          42,
          1.735,
          48,
          1.847,
          51,
          1.382,
          55,
          3.08,
          69,
          1.12,
          70,
          1.872,
          77,
          0.009,
          78,
          2.956,
          102,
          0.173,
          103,
          0.173,
          116,
          0.1,
          117,
          0.046,
          151,
          1.34,
          167,
          1.788,
          184,
          0.01,
          200,
          2.005,
          223,
          2.903,
          228,
          3.607,
          246,
          2.799,
          255,
          2.545,
          268,
          3.326,
          283,
          2.545,
          303,
          1.026,
          305,
          0.87,
          404,
          2.545,
          423,
          2.874,
          450,
          3.352,
          464,
          2.295,
          520,
          3.88,
          580,
          5.39,
          768,
          6.07,
          943,
          4.483,
          945,
          3.086,
          985,
          3.709,
          1091,
          3.086,
          1160,
          2.956,
          1186,
          3.709,
          1187,
          2.697,
          1264,
          3.88,
          1265,
          3.709,
          1266,
          7.781,
          1267,
          7.781,
          1268,
          5.738,
          1269,
          5.738,
          1270,
          5.007,
          1271,
          7.264,
          1272,
          6.339,
          1273,
          7.485,
          1274,
          4.25,
          1275,
          5.007,
          1276,
          4.25,
          1277,
          3.709,
          1278,
          4.25,
          1279,
          4.25,
          1280,
          4.25,
          1281,
          4.25,
          1282,
          3.709,
          1283,
          4.25,
          1284,
          4.25,
          1285,
          4.25,
          1286,
          4.25,
          1287,
          4.25,
          1288,
          5.738,
          1289,
          5.007,
          1290,
          4.25,
          1291,
          4.25,
          1292,
          4.25,
          1293,
          4.25,
        ],
      ],
      ['title/directives/FocusDirective.html', [327, 1.09, 378, 1.164]],
      [
        'body/directives/FocusDirective.html',
        [
          2,
          0.145,
          3,
          0.145,
          4,
          0.109,
          6,
          0.665,
          10,
          0.827,
          20,
          0.896,
          29,
          0.665,
          31,
          0.665,
          32,
          0.013,
          33,
          0.446,
          34,
          0.611,
          35,
          0.563,
          39,
          0.401,
          40,
          1.214,
          45,
          1.722,
          51,
          1.747,
          68,
          1.322,
          70,
          1.874,
          76,
          2.56,
          77,
          0.01,
          102,
          0.218,
          103,
          0.218,
          116,
          0.127,
          117,
          0.058,
          128,
          1.666,
          184,
          0.01,
          198,
          1.666,
          211,
          1.633,
          223,
          2.591,
          240,
          3.746,
          268,
          2.904,
          303,
          1.613,
          305,
          1.1,
          327,
          1.936,
          378,
          1.9,
          488,
          4.556,
          1294,
          4.688,
          1295,
          4.851,
          1296,
          4.851,
          1297,
          7.606,
          1298,
          8.086,
          1299,
          6.68,
          1300,
          5.735,
          1301,
          6,
          1302,
          4.688,
          1303,
          6,
          1304,
          6.68,
          1305,
          5.83,
          1306,
          5.372,
          1307,
          5.372,
          1308,
          4.688,
          1309,
          5.372,
          1310,
          5.372,
        ],
      ],
      ['title/components/FooterComponent.html', [295, 0.41, 342, 1.244]],
      [
        'body/components/FooterComponent.html',
        [
          2,
          0.134,
          3,
          0.134,
          4,
          0.101,
          20,
          1.171,
          29,
          0.455,
          32,
          0.013,
          33,
          0.582,
          45,
          1.641,
          77,
          0.01,
          98,
          1.019,
          102,
          0.202,
          103,
          0.202,
          116,
          0.117,
          117,
          0.053,
          184,
          0.01,
          198,
          2.141,
          214,
          1.463,
          218,
          1.639,
          295,
          0.767,
          296,
          1.513,
          297,
          1.935,
          298,
          1.37,
          299,
          1.675,
          305,
          1.019,
          310,
          2.297,
          325,
          1.089,
          326,
          1.935,
          327,
          1.695,
          328,
          2.406,
          329,
          1.675,
          330,
          1.675,
          331,
          1.37,
          332,
          1.675,
          333,
          1.463,
          334,
          1.675,
          335,
          1.463,
          336,
          1.675,
          337,
          1.326,
          338,
          1.675,
          339,
          2.362,
          340,
          1.513,
          341,
          1.675,
          342,
          2.249,
          343,
          1.675,
          344,
          1.513,
          345,
          1.675,
          346,
          1.463,
          347,
          1.513,
          348,
          1.675,
          349,
          1.463,
          350,
          1.675,
          351,
          1.513,
          352,
          1.675,
          353,
          1.752,
          354,
          2.142,
          355,
          1.463,
          356,
          1.513,
          357,
          1.675,
          358,
          1.513,
          359,
          1.463,
          360,
          1.513,
          361,
          2.07,
          362,
          1.675,
          363,
          1.513,
          364,
          1.675,
          365,
          1.416,
          366,
          1.675,
          367,
          1.37,
          368,
          1.513,
          369,
          1.513,
          370,
          1.675,
          371,
          1.513,
          372,
          1.675,
          373,
          1.675,
          374,
          1.416,
          375,
          1.675,
          376,
          1.463,
          377,
          1.675,
          378,
          1.416,
          379,
          1.675,
          380,
          1.416,
          381,
          1.619,
          382,
          1.675,
          1311,
          4.343,
          1312,
          6.366,
          1313,
          6.366,
          1314,
          4.977,
        ],
      ],
      ['title/directives/FullScreenDirective.html', [327, 1.09, 380, 1.164]],
      [
        'body/directives/FullScreenDirective.html',
        [
          2,
          0.094,
          3,
          0.094,
          4,
          0.071,
          6,
          0.433,
          7,
          0.896,
          8,
          1.51,
          10,
          0.621,
          11,
          1.35,
          20,
          0.584,
          29,
          0.723,
          31,
          0.433,
          32,
          0.013,
          33,
          0.29,
          34,
          0.663,
          35,
          0.367,
          39,
          0.478,
          40,
          1.446,
          45,
          1.648,
          48,
          1.522,
          51,
          1.138,
          68,
          1.436,
          69,
          1.09,
          71,
          4.351,
          77,
          0.008,
          99,
          1.22,
          102,
          0.142,
          103,
          0.142,
          116,
          0.083,
          117,
          0.038,
          127,
          2.531,
          128,
          0.873,
          184,
          0.008,
          198,
          1.25,
          240,
          3.774,
          287,
          2.269,
          298,
          1.863,
          303,
          1.21,
          305,
          0.716,
          327,
          1.56,
          347,
          1.944,
          380,
          1.426,
          381,
          1.63,
          418,
          2.179,
          438,
          2.443,
          440,
          3.631,
          554,
          2.542,
          589,
          1.987,
          609,
          2.365,
          631,
          1.584,
          715,
          5.581,
          791,
          4.916,
          1016,
          5.045,
          1034,
          4.62,
          1225,
          2.542,
          1232,
          2.761,
          1233,
          4.375,
          1295,
          4.254,
          1296,
          3.641,
          1300,
          4.62,
          1301,
          5.045,
          1302,
          4.375,
          1303,
          5.721,
          1305,
          4.375,
          1315,
          6.282,
          1316,
          2.761,
          1317,
          5.013,
          1318,
          3.39,
          1319,
          5.013,
          1320,
          4.375,
          1321,
          4.375,
          1322,
          5.013,
          1323,
          5.013,
          1324,
          5.111,
          1325,
          6.395,
          1326,
          6.996,
          1327,
          6.395,
          1328,
          5.581,
          1329,
          5.857,
          1330,
          7.042,
          1331,
          5.857,
          1332,
          5.857,
          1333,
          5.907,
          1334,
          5.857,
          1335,
          5.857,
          1336,
          3.5,
          1337,
          6.395,
          1338,
          6.146,
          1339,
          5.013,
          1340,
          3.5,
          1341,
          5.013,
          1342,
          3.5,
          1343,
          6.591,
          1344,
          5.111,
          1345,
          5.111,
          1346,
          3.5,
          1347,
          3.717,
          1348,
          3.5,
          1349,
          5.013,
          1350,
          4.375,
          1351,
          3.5,
          1352,
          3.5,
          1353,
          3.5,
          1354,
          3.5,
          1355,
          4.375,
          1356,
          3.5,
          1357,
          3.5,
          1358,
          5.013,
          1359,
          3.5,
          1360,
          3.5,
          1361,
          3.055,
          1362,
          3.055,
          1363,
          3.5,
          1364,
          3.5,
          1365,
          6.395,
          1366,
          5.013,
          1367,
          3.5,
          1368,
          3.5,
          1369,
          3.5,
          1370,
          5.013,
          1371,
          3.055,
          1372,
          5.013,
          1373,
          3.5,
          1374,
          3.5,
          1375,
          3.5,
          1376,
          3.5,
          1377,
          3.5,
          1378,
          5.013,
          1379,
          3.5,
          1380,
          3.5,
          1381,
          3.5,
          1382,
          3.5,
          1383,
          3.5,
          1384,
          3.5,
          1385,
          3.5,
        ],
      ],
      ['title/injectables/GlobalErrorHandler.html', [0, 0.635, 698, 2.971]],
      [
        'body/injectables/GlobalErrorHandler.html',
        [
          0,
          1.085,
          2,
          0.133,
          3,
          0.133,
          4,
          0.1,
          6,
          0.611,
          8,
          1.631,
          10,
          0.784,
          11,
          1.25,
          20,
          0.823,
          28,
          2.242,
          29,
          0.579,
          31,
          0.784,
          32,
          0.013,
          33,
          0.525,
          34,
          0.639,
          35,
          0.663,
          39,
          0.368,
          40,
          1.115,
          42,
          1.044,
          50,
          4.305,
          63,
          3.908,
          77,
          0.01,
          82,
          2.541,
          98,
          1.296,
          99,
          1.719,
          102,
          0.257,
          103,
          0.201,
          114,
          2.144,
          116,
          0.116,
          117,
          0.053,
          118,
          1.45,
          125,
          2.985,
          128,
          1.579,
          138,
          3.891,
          140,
          4.017,
          144,
          1.719,
          145,
          1.985,
          151,
          1.479,
          175,
          2.954,
          184,
          0.01,
          211,
          1.5,
          217,
          2.954,
          221,
          2.541,
          246,
          1.845,
          287,
          2.232,
          288,
          3.582,
          298,
          1.358,
          303,
          1.191,
          443,
          3.891,
          494,
          2.327,
          609,
          2.327,
          620,
          3.336,
          634,
          4.435,
          653,
          1.913,
          671,
          5.524,
          698,
          4.597,
          1102,
          3.336,
          1149,
          3.582,
          1386,
          4.305,
          1387,
          6.989,
          1388,
          4.932,
          1389,
          6.329,
          1390,
          4.932,
          1391,
          4.932,
          1392,
          4.932,
          1393,
          4.305,
          1394,
          4.932,
          1395,
          4.932,
          1396,
          4.932,
          1397,
          3.582,
          1398,
          4.932,
          1399,
          4.305,
          1400,
          4.932,
          1401,
          4.305,
          1402,
          6.329,
          1403,
          4.932,
          1404,
          4.932,
          1405,
          4.932,
          1406,
          4.932,
          1407,
          4.932,
          1408,
          4.932,
          1409,
          4.932,
          1410,
          4.932,
          1411,
          3.582,
          1412,
          4.932,
          1413,
          4.932,
          1414,
          4.932,
          1415,
          4.932,
          1416,
          4.932,
          1417,
          4.932,
          1418,
          4.932,
          1419,
          4.932,
          1420,
          4.932,
          1421,
          4.932,
          1422,
          4.932,
          1423,
          4.932,
          1424,
          4.932,
        ],
      ],
      ['title/modules/GridModule.html', [651, 1.055, 1425, 2.767]],
      [
        'body/modules/GridModule.html',
        [
          2,
          0.136,
          3,
          0.136,
          4,
          0.102,
          32,
          0.013,
          77,
          0.01,
          102,
          0.336,
          103,
          0.205,
          116,
          0.175,
          117,
          0.054,
          128,
          1.257,
          178,
          1.433,
          184,
          0.01,
          214,
          1.886,
          265,
          1.884,
          277,
          2.106,
          278,
          2.28,
          297,
          1.95,
          325,
          1.102,
          344,
          2.526,
          346,
          2.464,
          347,
          2.333,
          349,
          2.443,
          632,
          2.841,
          651,
          1.653,
          653,
          1.954,
          654,
          1.755,
          655,
          3.026,
          663,
          3.026,
          665,
          2.28,
          669,
          2.903,
          721,
          4.071,
          814,
          2.19,
          993,
          3.305,
          1425,
          5.686,
          1426,
          4.396,
          1427,
          4.396,
          1428,
          4.396,
          1429,
          4.454,
          1430,
          5.037,
          1431,
          6.415,
          1432,
          4.479,
          1433,
          5.598,
          1434,
          5.037,
          1435,
          3.974,
          1436,
          5.037,
          1437,
          3.974,
          1438,
          5.037,
          1439,
          4.396,
          1440,
          4.396,
          1441,
          5.037,
          1442,
          5.037,
          1443,
          5.037,
          1444,
          5.037,
        ],
      ],
      ['title/components/GridStatusBarComponent.html', [295, 0.41, 346, 1.203]],
      [
        'body/components/GridStatusBarComponent.html',
        [
          2,
          0.072,
          3,
          0.072,
          4,
          0.054,
          6,
          0.329,
          7,
          0.731,
          8,
          1.907,
          10,
          0.506,
          11,
          1.454,
          20,
          0.443,
          29,
          0.699,
          31,
          0.821,
          32,
          0.013,
          33,
          0.568,
          34,
          0.667,
          35,
          0.632,
          38,
          2.32,
          39,
          0.495,
          40,
          1.547,
          42,
          1.347,
          45,
          1.053,
          49,
          1.156,
          51,
          1.329,
          68,
          1.106,
          69,
          0.899,
          70,
          1.053,
          77,
          0.006,
          84,
          2.249,
          95,
          2.336,
          98,
          0.836,
          101,
          1.849,
          102,
          0.202,
          103,
          0.108,
          116,
          0.063,
          117,
          0.029,
          118,
          2.144,
          127,
          1.862,
          128,
          0.663,
          145,
          1.645,
          184,
          0.007,
          198,
          2.028,
          211,
          0.808,
          214,
          2.45,
          218,
          1.546,
          228,
          1.203,
          238,
          1.592,
          239,
          1.509,
          262,
          1.931,
          265,
          2.802,
          287,
          1.849,
          295,
          0.665,
          296,
          0.808,
          297,
          1.242,
          298,
          0.732,
          299,
          0.895,
          303,
          0.986,
          304,
          2.081,
          305,
          0.544,
          306,
          2.32,
          307,
          2.32,
          308,
          2.207,
          310,
          1.475,
          313,
          2.249,
          318,
          1.509,
          325,
          0.581,
          326,
          1.242,
          327,
          1.088,
          328,
          1.817,
          329,
          0.895,
          330,
          0.895,
          331,
          0.732,
          332,
          0.895,
          333,
          0.782,
          334,
          0.895,
          335,
          0.782,
          336,
          0.895,
          337,
          0.708,
          338,
          0.895,
          339,
          1.675,
          340,
          0.808,
          341,
          0.895,
          342,
          0.808,
          343,
          0.895,
          344,
          0.808,
          345,
          0.895,
          346,
          1.643,
          347,
          2.362,
          348,
          0.895,
          349,
          0.782,
          350,
          0.895,
          351,
          0.808,
          352,
          0.895,
          353,
          1.125,
          354,
          1.375,
          355,
          0.782,
          356,
          0.808,
          357,
          0.895,
          358,
          0.808,
          359,
          0.782,
          360,
          0.808,
          361,
          1.329,
          362,
          0.895,
          363,
          0.808,
          364,
          0.895,
          365,
          0.756,
          366,
          0.895,
          367,
          0.732,
          368,
          0.808,
          369,
          0.808,
          370,
          0.895,
          371,
          0.808,
          372,
          0.895,
          373,
          0.895,
          374,
          0.756,
          375,
          0.895,
          376,
          0.782,
          377,
          0.895,
          378,
          0.756,
          379,
          0.895,
          380,
          0.756,
          381,
          0.865,
          382,
          0.895,
          407,
          3.87,
          416,
          2.32,
          418,
          1.776,
          471,
          1.798,
          488,
          2.448,
          530,
          2.593,
          580,
          4.484,
          665,
          1.203,
          1138,
          3.566,
          1187,
          3.546,
          1197,
          4.876,
          1296,
          2.968,
          1432,
          3.546,
          1437,
          6.083,
          1445,
          6.083,
          1446,
          2.32,
          1447,
          3.566,
          1448,
          4.086,
          1449,
          4.086,
          1450,
          5.587,
          1451,
          5.587,
          1452,
          5.587,
          1453,
          5.441,
          1454,
          3.566,
          1455,
          3.566,
          1456,
          4.086,
          1457,
          4.086,
          1458,
          5.587,
          1459,
          2.658,
          1460,
          4.086,
          1461,
          3.566,
          1462,
          2.658,
          1463,
          3.566,
          1464,
          2.658,
          1465,
          2.658,
          1466,
          4.086,
          1467,
          2.658,
          1468,
          5.262,
          1469,
          4.086,
          1470,
          2.658,
          1471,
          5.972,
          1472,
          6.03,
          1473,
          2.658,
          1474,
          4.876,
          1475,
          2.658,
          1476,
          4.086,
          1477,
          4.086,
          1478,
          5.587,
          1479,
          2.658,
          1480,
          5.587,
          1481,
          2.658,
          1482,
          2.658,
          1483,
          2.658,
          1484,
          2.658,
          1485,
          2.658,
          1486,
          2.658,
          1487,
          4.086,
          1488,
          2.658,
          1489,
          2.658,
          1490,
          2.658,
          1491,
          3.566,
          1492,
          2.32,
          1493,
          2.658,
          1494,
          2.658,
          1495,
          2.658,
          1496,
          2.658,
          1497,
          1.931,
          1498,
          2.658,
          1499,
          2.658,
          1500,
          2.658,
          1501,
          2.658,
          1502,
          2.658,
          1503,
          2.658,
          1504,
          1.798,
          1505,
          2.658,
          1506,
          2.658,
          1507,
          2.658,
          1508,
          2.658,
          1509,
          2.658,
          1510,
          2.658,
          1511,
          2.658,
          1512,
          4.086,
          1513,
          5.399,
          1514,
          4.086,
          1515,
          4.086,
          1516,
          4.086,
          1517,
          4.086,
          1518,
          4.086,
        ],
      ],
      ['title/components/GridTemplateRendererComponent.html', [295, 0.41, 349, 1.203]],
      [
        'body/components/GridTemplateRendererComponent.html',
        [
          2,
          0.111,
          3,
          0.111,
          4,
          0.084,
          6,
          0.512,
          7,
          1.007,
          10,
          0.697,
          29,
          0.629,
          31,
          0.697,
          32,
          0.013,
          33,
          0.597,
          34,
          0.679,
          35,
          0.59,
          39,
          0.514,
          40,
          1.273,
          45,
          1.451,
          70,
          1.065,
          71,
          3.197,
          77,
          0.008,
          96,
          3.808,
          98,
          0.846,
          102,
          0.26,
          103,
          0.168,
          116,
          0.098,
          117,
          0.044,
          118,
          2.116,
          184,
          0.008,
          198,
          2.114,
          214,
          1.215,
          218,
          1.617,
          246,
          1.546,
          268,
          2.448,
          295,
          0.721,
          296,
          1.257,
          297,
          2.533,
          298,
          1.138,
          299,
          1.391,
          303,
          1.359,
          305,
          0.846,
          325,
          0.904,
          326,
          1.712,
          327,
          1.5,
          328,
          2.236,
          329,
          1.391,
          330,
          1.391,
          331,
          1.138,
          332,
          1.391,
          333,
          1.215,
          334,
          1.391,
          335,
          1.215,
          336,
          1.391,
          337,
          1.101,
          338,
          1.391,
          339,
          2.155,
          340,
          1.257,
          341,
          1.391,
          342,
          1.257,
          343,
          1.391,
          344,
          1.257,
          345,
          1.391,
          346,
          1.215,
          347,
          2.09,
          348,
          1.391,
          349,
          2.022,
          350,
          1.391,
          351,
          1.257,
          352,
          1.391,
          353,
          1.55,
          354,
          1.895,
          355,
          1.215,
          356,
          1.257,
          357,
          1.391,
          358,
          1.257,
          359,
          1.215,
          360,
          1.257,
          361,
          1.831,
          362,
          1.391,
          363,
          1.257,
          364,
          1.391,
          365,
          1.176,
          366,
          1.391,
          367,
          1.138,
          368,
          1.257,
          369,
          1.257,
          370,
          1.391,
          371,
          1.257,
          372,
          1.391,
          373,
          1.391,
          374,
          1.176,
          375,
          1.391,
          376,
          1.215,
          377,
          1.391,
          378,
          1.176,
          379,
          1.391,
          380,
          1.176,
          381,
          1.344,
          382,
          1.391,
          471,
          2.795,
          483,
          1.87,
          665,
          2.548,
          1432,
          4.064,
          1435,
          5.676,
          1445,
          5.676,
          1454,
          4.914,
          1461,
          4.914,
          1519,
          3.607,
          1520,
          6.404,
          1521,
          5.63,
          1522,
          6.876,
          1523,
          6.876,
          1524,
          4.133,
          1525,
          5.63,
          1526,
          4.133,
          1527,
          6.001,
          1528,
          4.133,
          1529,
          4.133,
          1530,
          4.133,
          1531,
          3.002,
          1532,
          4.133,
          1533,
          5.63,
          1534,
          5.63,
          1535,
          4.133,
          1536,
          5.63,
          1537,
          4.133,
          1538,
          2.795,
          1539,
          4.133,
        ],
      ],
      ['title/components/HeaderComponent.html', [295, 0.41, 351, 1.244]],
      [
        'body/components/HeaderComponent.html',
        [
          2,
          0.121,
          3,
          0.121,
          4,
          0.091,
          6,
          0.557,
          7,
          1.065,
          10,
          0.738,
          11,
          1.36,
          20,
          0.75,
          26,
          4.32,
          29,
          0.611,
          31,
          0.557,
          32,
          0.013,
          33,
          0.59,
          34,
          0.411,
          35,
          0.471,
          39,
          0.336,
          40,
          1.017,
          45,
          1.536,
          68,
          0.89,
          69,
          0.724,
          70,
          1.723,
          77,
          0.009,
          98,
          0.921,
          102,
          0.242,
          103,
          0.183,
          105,
          2.121,
          116,
          0.106,
          117,
          0.048,
          184,
          0.009,
          198,
          2.127,
          211,
          1.367,
          214,
          1.323,
          218,
          1.627,
          287,
          2.035,
          295,
          0.742,
          296,
          1.367,
          297,
          1.812,
          298,
          1.238,
          299,
          1.514,
          303,
          1.439,
          304,
          2.794,
          305,
          0.921,
          310,
          2.151,
          313,
          2.864,
          325,
          0.984,
          326,
          1.812,
          327,
          1.587,
          328,
          2.314,
          329,
          1.514,
          330,
          1.514,
          331,
          1.238,
          332,
          1.514,
          333,
          1.323,
          334,
          1.514,
          335,
          1.323,
          336,
          1.514,
          337,
          1.198,
          338,
          1.514,
          339,
          2.249,
          340,
          1.367,
          341,
          1.514,
          342,
          1.367,
          343,
          1.514,
          344,
          1.367,
          345,
          1.514,
          346,
          1.323,
          347,
          1.367,
          348,
          1.514,
          349,
          1.323,
          350,
          1.514,
          351,
          2.163,
          352,
          1.514,
          353,
          1.64,
          354,
          2.006,
          355,
          1.323,
          356,
          1.367,
          357,
          1.514,
          358,
          1.367,
          359,
          1.323,
          360,
          1.367,
          361,
          1.938,
          362,
          1.514,
          363,
          1.367,
          364,
          1.514,
          365,
          1.279,
          366,
          1.514,
          367,
          1.238,
          368,
          1.367,
          369,
          1.367,
          370,
          1.514,
          371,
          1.367,
          372,
          2.006,
          373,
          1.514,
          374,
          1.279,
          375,
          1.514,
          376,
          1.323,
          377,
          1.514,
          378,
          1.279,
          379,
          1.514,
          380,
          1.279,
          381,
          1.463,
          382,
          1.514,
          531,
          1.955,
          532,
          2.694,
          563,
          3.548,
          574,
          2.317,
          665,
          2.697,
          705,
          4.701,
          1411,
          4.328,
          1540,
          3.925,
          1541,
          5.959,
          1542,
          6.21,
          1543,
          5.959,
          1544,
          4.497,
          1545,
          4.497,
          1546,
          4.497,
        ],
      ],
      ['title/components/HomeComponent.html', [295, 0.41, 353, 1.126]],
      [
        'body/components/HomeComponent.html',
        [
          2,
          0.06,
          3,
          0.06,
          4,
          0.045,
          6,
          0.277,
          7,
          0.637,
          8,
          0.576,
          10,
          0.441,
          11,
          1.514,
          20,
          0.373,
          24,
          0.806,
          29,
          0.722,
          31,
          0.798,
          32,
          0.013,
          33,
          0.612,
          34,
          0.675,
          35,
          0.676,
          39,
          0.545,
          40,
          1.602,
          42,
          1.175,
          45,
          0.919,
          48,
          0.971,
          49,
          2.208,
          55,
          1.791,
          68,
          1.229,
          69,
          1.07,
          70,
          1.309,
          71,
          2.024,
          76,
          1.498,
          77,
          0.005,
          82,
          1.151,
          84,
          0.899,
          88,
          1.511,
          94,
          2.263,
          95,
          2.124,
          98,
          1.04,
          99,
          1.55,
          102,
          0.262,
          103,
          0.091,
          116,
          0.084,
          117,
          0.024,
          118,
          1.826,
          126,
          1.268,
          144,
          1.934,
          145,
          2.234,
          151,
          0.522,
          159,
          1.949,
          163,
          2.474,
          184,
          0.007,
          187,
          3.523,
          192,
          1.926,
          198,
          1.985,
          211,
          0.679,
          214,
          0.657,
          218,
          1.511,
          235,
          2.618,
          246,
          0.835,
          250,
          3.435,
          265,
          0.835,
          268,
          2.572,
          271,
          4.828,
          295,
          0.557,
          296,
          0.679,
          297,
          1.084,
          298,
          0.615,
          299,
          0.752,
          303,
          0.861,
          304,
          1.86,
          305,
          0.457,
          306,
          2.024,
          307,
          2.024,
          308,
          1.926,
          310,
          1.287,
          313,
          2.045,
          318,
          1.268,
          325,
          0.489,
          326,
          1.084,
          327,
          0.95,
          328,
          1.652,
          329,
          0.752,
          330,
          0.752,
          331,
          0.615,
          332,
          0.752,
          333,
          0.657,
          334,
          0.752,
          335,
          0.657,
          336,
          0.752,
          337,
          0.595,
          338,
          0.752,
          339,
          1.498,
          340,
          0.679,
          341,
          0.752,
          342,
          0.679,
          343,
          0.752,
          344,
          0.679,
          345,
          0.752,
          346,
          0.657,
          347,
          1.688,
          348,
          0.752,
          349,
          0.657,
          350,
          0.752,
          351,
          0.679,
          352,
          0.752,
          353,
          1.528,
          354,
          1.2,
          355,
          0.657,
          356,
          1.688,
          357,
          0.752,
          358,
          0.679,
          359,
          0.657,
          360,
          0.679,
          361,
          1.16,
          362,
          0.752,
          363,
          0.679,
          364,
          0.752,
          365,
          0.635,
          366,
          0.752,
          367,
          0.615,
          368,
          0.679,
          369,
          0.679,
          370,
          0.752,
          371,
          0.679,
          372,
          0.752,
          373,
          0.752,
          374,
          0.635,
          375,
          0.752,
          376,
          0.657,
          377,
          0.752,
          378,
          0.635,
          379,
          0.752,
          380,
          0.635,
          381,
          0.726,
          382,
          0.752,
          403,
          2.411,
          415,
          1.762,
          440,
          1.268,
          447,
          2.024,
          471,
          1.511,
          474,
          2.813,
          483,
          2.918,
          484,
          3.755,
          493,
          1.622,
          494,
          1.682,
          499,
          1.511,
          544,
          1.949,
          552,
          1.1,
          573,
          3.224,
          584,
          1.949,
          631,
          1.011,
          761,
          1.418,
          1102,
          1.511,
          1120,
          1.418,
          1135,
          3.435,
          1165,
          2.665,
          1169,
          3.043,
          1214,
          1.762,
          1347,
          1.418,
          1432,
          1.418,
          1453,
          5.296,
          1468,
          3.112,
          1491,
          3.883,
          1504,
          4.361,
          1527,
          3.112,
          1538,
          1.511,
          1547,
          1.949,
          1548,
          2.411,
          1549,
          3.112,
          1550,
          3.112,
          1551,
          4.007,
          1552,
          5.08,
          1553,
          5.08,
          1554,
          5.08,
          1555,
          4.433,
          1556,
          5.088,
          1557,
          3.565,
          1558,
          3.112,
          1559,
          3.565,
          1560,
          3.565,
          1561,
          3.112,
          1562,
          3.112,
          1563,
          4.433,
          1564,
          3.112,
          1565,
          4.433,
          1566,
          4.433,
          1567,
          4.433,
          1568,
          1.949,
          1569,
          3.51,
          1570,
          4.007,
          1571,
          3.565,
          1572,
          3.565,
          1573,
          5.164,
          1574,
          2.234,
          1575,
          2.813,
          1576,
          3.565,
          1577,
          2.234,
          1578,
          3.565,
          1579,
          2.234,
          1580,
          3.565,
          1581,
          2.234,
          1582,
          2.813,
          1583,
          2.234,
          1584,
          2.234,
          1585,
          3.565,
          1586,
          2.234,
          1587,
          3.112,
          1588,
          2.234,
          1589,
          3.754,
          1590,
          4.007,
          1591,
          2.234,
          1592,
          3.112,
          1593,
          2.234,
          1594,
          4.845,
          1595,
          3.112,
          1596,
          2.234,
          1597,
          2.234,
          1598,
          2.234,
          1599,
          3.112,
          1600,
          2.234,
          1601,
          4.379,
          1602,
          2.234,
          1603,
          2.234,
          1604,
          2.234,
          1605,
          2.234,
          1606,
          2.234,
          1607,
          2.234,
          1608,
          3.565,
          1609,
          2.234,
          1610,
          2.234,
          1611,
          3.112,
          1612,
          2.234,
          1613,
          1.762,
          1614,
          1.511,
          1615,
          2.234,
          1616,
          3.112,
          1617,
          1.762,
          1618,
          2.234,
          1619,
          2.234,
          1620,
          2.234,
          1621,
          2.234,
          1622,
          1.949,
          1623,
          1.949,
          1624,
          2.234,
          1625,
          1.949,
          1626,
          1.511,
          1627,
          1.762,
          1628,
          1.762,
          1629,
          1.949,
          1630,
          1.949,
          1631,
          1.622,
          1632,
          2.813,
          1633,
          1.762,
          1634,
          1.949,
          1635,
          2.234,
          1636,
          2.234,
          1637,
          4.45,
          1638,
          2.234,
          1639,
          2.234,
          1640,
          2.234,
          1641,
          1.762,
          1642,
          3.883,
          1643,
          2.234,
          1644,
          2.234,
          1645,
          3.565,
          1646,
          2.234,
          1647,
          2.234,
          1648,
          2.234,
          1649,
          2.234,
          1650,
          4.433,
          1651,
          1.949,
          1652,
          3.883,
          1653,
          1.949,
          1654,
          1.949,
          1655,
          1.949,
          1656,
          2.234,
          1657,
          1.949,
          1658,
          2.234,
          1659,
          1.949,
          1660,
          3.565,
          1661,
          2.813,
          1662,
          2.813,
        ],
      ],
      ['title/components/HomeComponent-1.html', [295, 0.342, 353, 0.939, 449, 1.276]],
      [
        'body/components/HomeComponent-1.html',
        [
          2,
          0.06,
          3,
          0.06,
          4,
          0.045,
          6,
          0.275,
          7,
          0.635,
          8,
          1.522,
          10,
          0.44,
          11,
          1.504,
          20,
          0.592,
          24,
          0.802,
          29,
          0.715,
          31,
          0.731,
          32,
          0.013,
          33,
          0.604,
          34,
          0.666,
          35,
          0.713,
          39,
          0.529,
          40,
          1.6,
          42,
          0.938,
          45,
          0.915,
          49,
          2.201,
          68,
          1.274,
          69,
          1.096,
          70,
          1.305,
          71,
          2.016,
          76,
          1.492,
          77,
          0.005,
          82,
          1.145,
          88,
          1.502,
          94,
          2.253,
          95,
          2.691,
          97,
          1.748,
          98,
          0.908,
          99,
          1.237,
          102,
          0.27,
          103,
          0.09,
          107,
          0.894,
          116,
          0.052,
          117,
          0.024,
          118,
          1.822,
          126,
          2.518,
          127,
          1.328,
          144,
          1.765,
          145,
          1.785,
          163,
          2.468,
          184,
          0.005,
          187,
          3.56,
          192,
          1.917,
          198,
          1.984,
          212,
          2.253,
          214,
          0.653,
          218,
          1.51,
          234,
          2.016,
          235,
          2.091,
          240,
          1.094,
          246,
          2.545,
          252,
          2.401,
          255,
          2.126,
          265,
          0.831,
          268,
          1.927,
          271,
          4.943,
          287,
          1.607,
          295,
          0.555,
          296,
          0.675,
          297,
          1.079,
          298,
          0.612,
          299,
          0.748,
          303,
          0.857,
          304,
          1.854,
          305,
          0.455,
          306,
          2.016,
          307,
          2.016,
          308,
          1.917,
          310,
          1.281,
          313,
          2.038,
          318,
          1.261,
          325,
          0.486,
          326,
          1.079,
          327,
          0.946,
          328,
          1.647,
          329,
          0.748,
          330,
          0.748,
          331,
          0.612,
          332,
          0.748,
          333,
          0.653,
          334,
          0.748,
          335,
          0.653,
          336,
          0.748,
          337,
          0.592,
          338,
          0.748,
          339,
          1.492,
          340,
          0.675,
          341,
          0.748,
          342,
          0.675,
          343,
          0.748,
          344,
          0.675,
          345,
          0.748,
          346,
          0.653,
          347,
          1.348,
          348,
          0.748,
          349,
          0.653,
          350,
          0.748,
          351,
          0.675,
          352,
          0.748,
          353,
          1.524,
          354,
          1.195,
          355,
          0.653,
          356,
          1.348,
          357,
          0.748,
          358,
          0.675,
          359,
          0.653,
          360,
          0.675,
          361,
          1.155,
          362,
          0.748,
          363,
          0.675,
          364,
          0.748,
          365,
          0.632,
          366,
          0.748,
          367,
          0.612,
          368,
          0.675,
          369,
          0.675,
          370,
          0.748,
          371,
          0.675,
          372,
          0.748,
          373,
          0.748,
          374,
          0.632,
          375,
          0.748,
          376,
          0.653,
          377,
          0.748,
          378,
          0.632,
          379,
          0.748,
          380,
          0.632,
          381,
          0.723,
          382,
          0.748,
          387,
          1.145,
          438,
          1.6,
          447,
          2.016,
          449,
          0.831,
          476,
          3.992,
          483,
          2.804,
          484,
          3.746,
          498,
          3.214,
          499,
          2.998,
          540,
          3.041,
          541,
          1.753,
          542,
          1.753,
          543,
          1.753,
          553,
          1.829,
          580,
          2.401,
          761,
          2.814,
          858,
          1.753,
          1102,
          1.502,
          1115,
          3.033,
          1121,
          2.401,
          1131,
          1.614,
          1132,
          3.869,
          1135,
          2.401,
          1165,
          2.656,
          1169,
          3.033,
          1209,
          1.614,
          1214,
          1.753,
          1215,
          1.939,
          1432,
          2.253,
          1504,
          4.353,
          1548,
          2.401,
          1549,
          3.098,
          1550,
          3.098,
          1551,
          3.995,
          1555,
          4.42,
          1556,
          3.995,
          1561,
          4.42,
          1563,
          3.098,
          1564,
          3.098,
          1565,
          4.42,
          1566,
          4.42,
          1567,
          4.42,
          1568,
          1.939,
          1569,
          3.498,
          1570,
          3.995,
          1573,
          4.42,
          1575,
          2.801,
          1589,
          2.401,
          1590,
          2.801,
          1592,
          3.098,
          1594,
          5.408,
          1595,
          3.098,
          1599,
          3.098,
          1601,
          4.367,
          1611,
          3.098,
          1613,
          1.753,
          1614,
          1.502,
          1622,
          1.939,
          1627,
          1.753,
          1628,
          1.753,
          1629,
          1.939,
          1630,
          1.939,
          1631,
          3.22,
          1632,
          2.801,
          1633,
          4.657,
          1634,
          4.832,
          1650,
          4.832,
          1651,
          1.939,
          1652,
          3.869,
          1653,
          1.939,
          1654,
          1.939,
          1655,
          1.939,
          1657,
          1.939,
          1659,
          1.939,
          1661,
          2.801,
          1663,
          1.939,
          1664,
          5.064,
          1665,
          3.55,
          1666,
          3.55,
          1667,
          5.064,
          1668,
          5.064,
          1669,
          3.214,
          1670,
          4.434,
          1671,
          3.55,
          1672,
          3.55,
          1673,
          2.222,
          1674,
          3.55,
          1675,
          2.222,
          1676,
          2.222,
          1677,
          3.55,
          1678,
          2.222,
          1679,
          5.536,
          1680,
          4.434,
          1681,
          3.55,
          1682,
          2.222,
          1683,
          2.222,
          1684,
          2.222,
          1685,
          3.55,
          1686,
          3.55,
          1687,
          2.222,
          1688,
          2.222,
          1689,
          2.222,
          1690,
          2.222,
          1691,
          2.222,
          1692,
          2.222,
          1693,
          2.222,
          1694,
          2.222,
          1695,
          2.222,
          1696,
          3.55,
          1697,
          3.55,
          1698,
          3.55,
          1699,
          3.55,
          1700,
          3.55,
          1701,
          3.55,
          1702,
          2.222,
          1703,
          2.222,
          1704,
          2.222,
          1705,
          2.222,
          1706,
          2.222,
          1707,
          1.41,
          1708,
          1.939,
          1709,
          3.55,
          1710,
          2.222,
          1711,
          2.222,
          1712,
          2.222,
          1713,
          4.434,
          1714,
          2.222,
          1715,
          2.222,
          1716,
          2.222,
          1717,
          2.222,
          1718,
          3.55,
          1719,
          3.55,
        ],
      ],
      ['title/components/HomeContextMenuComponent.html', [295, 0.41, 355, 1.203]],
      [
        'body/components/HomeContextMenuComponent.html',
        [
          2,
          0.109,
          3,
          0.109,
          4,
          0.083,
          6,
          0.504,
          7,
          0.996,
          10,
          0.689,
          11,
          1.135,
          20,
          0.678,
          29,
          0.625,
          31,
          0.504,
          32,
          0.013,
          33,
          0.566,
          34,
          0.509,
          35,
          0.426,
          39,
          0.416,
          40,
          1.259,
          45,
          1.435,
          77,
          0.008,
          98,
          0.833,
          102,
          0.258,
          103,
          0.165,
          116,
          0.096,
          117,
          0.044,
          184,
          0.008,
          198,
          2.111,
          211,
          1.236,
          214,
          1.196,
          218,
          1.614,
          295,
          0.717,
          296,
          1.236,
          297,
          1.693,
          298,
          1.119,
          299,
          1.369,
          303,
          1.344,
          304,
          2.655,
          305,
          0.833,
          306,
          3.162,
          307,
          3.162,
          308,
          3.008,
          310,
          2.01,
          313,
          2.749,
          318,
          2.309,
          325,
          0.89,
          326,
          1.693,
          327,
          1.483,
          328,
          2.221,
          329,
          1.369,
          330,
          1.369,
          331,
          1.119,
          332,
          1.369,
          333,
          1.196,
          334,
          1.369,
          335,
          1.196,
          336,
          1.369,
          337,
          1.083,
          338,
          1.369,
          339,
          2.137,
          340,
          1.236,
          341,
          1.369,
          342,
          1.236,
          343,
          1.369,
          344,
          1.236,
          345,
          1.369,
          346,
          1.196,
          347,
          1.236,
          348,
          1.369,
          349,
          1.196,
          350,
          1.369,
          351,
          1.236,
          352,
          1.369,
          353,
          1.533,
          354,
          1.874,
          355,
          2.008,
          356,
          2.375,
          357,
          1.369,
          358,
          1.236,
          359,
          1.196,
          360,
          1.236,
          361,
          1.811,
          362,
          1.369,
          363,
          1.236,
          364,
          1.369,
          365,
          1.157,
          366,
          1.369,
          367,
          1.119,
          368,
          1.236,
          369,
          1.236,
          370,
          1.369,
          371,
          1.236,
          372,
          1.369,
          373,
          1.369,
          374,
          1.157,
          375,
          1.369,
          376,
          1.196,
          377,
          1.369,
          378,
          1.157,
          379,
          1.369,
          380,
          1.157,
          381,
          1.323,
          382,
          1.369,
          418,
          2.421,
          440,
          3.162,
          1016,
          4.393,
          1103,
          3.208,
          1115,
          4.091,
          1117,
          4.54,
          1120,
          2.581,
          1121,
          4.838,
          1131,
          2.954,
          1135,
          4.996,
          1139,
          5.961,
          1141,
          4.393,
          1142,
          3.549,
          1146,
          3.549,
          1147,
          3.549,
          1558,
          5.961,
          1631,
          4.045,
          1641,
          4.393,
          1707,
          2.581,
          1720,
          6.243,
          1721,
          3.549,
          1722,
          5.569,
          1723,
          5.569,
          1724,
          4.067,
          1725,
          5.569,
          1726,
          4.067,
          1727,
          4.067,
          1728,
          5.569,
          1729,
          4.067,
          1730,
          4.067,
          1731,
          4.067,
          1732,
          5.569,
          1733,
          7.388,
          1734,
          4.045,
          1735,
          5.569,
          1736,
          5.569,
          1737,
          5.569,
        ],
      ],
      ['title/modules/HomeModule.html', [651, 1.055, 1738, 2.971]],
      [
        'body/modules/HomeModule.html',
        [
          2,
          0.145,
          3,
          0.145,
          4,
          0.11,
          32,
          0.013,
          39,
          0.403,
          76,
          1.817,
          77,
          0.01,
          102,
          0.333,
          103,
          0.22,
          116,
          0.172,
          117,
          0.058,
          178,
          1.536,
          184,
          0.01,
          265,
          2.019,
          295,
          0.541,
          325,
          1.181,
          353,
          2.197,
          390,
          2.546,
          574,
          3.753,
          632,
          2.933,
          651,
          1.878,
          653,
          2.094,
          654,
          1.881,
          655,
          3.437,
          661,
          4.533,
          663,
          3.16,
          669,
          3.297,
          700,
          3.921,
          701,
          4.531,
          721,
          3.426,
          814,
          2.347,
          993,
          3.452,
          1074,
          4.531,
          1092,
          3.651,
          1425,
          5.399,
          1548,
          3.651,
          1707,
          3.426,
          1738,
          6.062,
          1739,
          4.711,
          1740,
          4.711,
          1741,
          5.398,
          1742,
          5.398,
          1743,
          4.711,
          1744,
          4.711,
          1745,
          5.398,
          1746,
          5.398,
        ],
      ],
      ['title/interceptors/HttpInterceptorService.html', [662, 2.971, 697, 3.227]],
      [
        'body/interceptors/HttpInterceptorService.html',
        [
          0,
          1.049,
          2,
          0.147,
          3,
          0.147,
          4,
          0.111,
          6,
          0.677,
          10,
          0.836,
          20,
          0.912,
          28,
          2.327,
          29,
          0.618,
          31,
          0.836,
          32,
          0.013,
          33,
          0.56,
          34,
          0.618,
          35,
          0.708,
          39,
          0.505,
          73,
          4.161,
          77,
          0.01,
          102,
          0.311,
          103,
          0.222,
          104,
          3.106,
          107,
          2.202,
          114,
          2.378,
          116,
          0.129,
          117,
          0.059,
          118,
          1.608,
          128,
          1.961,
          151,
          1.278,
          184,
          0.01,
          211,
          1.663,
          303,
          1.32,
          455,
          5.329,
          608,
          4.287,
          614,
          3.327,
          620,
          3.699,
          662,
          4.906,
          697,
          4.315,
          877,
          3.106,
          1411,
          3.972,
          1747,
          5.47,
          1748,
          6.755,
          1749,
          5.47,
          1750,
          7.329,
          1751,
          6.755,
          1752,
          7.654,
          1753,
          7.329,
          1754,
          7.654,
          1755,
          5.47,
          1756,
          5.47,
          1757,
          5.47,
          1758,
          6.755,
          1759,
          5.47,
          1760,
          5.47,
          1761,
          5.47,
          1762,
          5.47,
        ],
      ],
      ['title/components/LaunchModalComponent.html', [295, 0.41, 358, 1.244]],
      [
        'body/components/LaunchModalComponent.html',
        [
          2,
          0.09,
          3,
          0.09,
          4,
          0.068,
          6,
          0.412,
          7,
          0.864,
          8,
          1.466,
          10,
          0.857,
          11,
          1.017,
          20,
          0.554,
          29,
          0.607,
          31,
          0.412,
          32,
          0.013,
          33,
          0.55,
          34,
          0.442,
          35,
          0.348,
          39,
          0.425,
          40,
          1.286,
          42,
          0.704,
          45,
          1.245,
          49,
          2.1,
          51,
          1.081,
          55,
          1.338,
          68,
          0.658,
          70,
          1.245,
          71,
          1.888,
          73,
          2.743,
          77,
          0.007,
          80,
          2.893,
          84,
          2.874,
          98,
          0.681,
          102,
          0.254,
          103,
          0.135,
          107,
          1.338,
          116,
          0.078,
          117,
          0.067,
          125,
          1.568,
          144,
          1.683,
          151,
          0.777,
          163,
          1.39,
          184,
          0.007,
          192,
          2.609,
          198,
          2.075,
          211,
          1.011,
          214,
          0.978,
          218,
          1.589,
          219,
          2.743,
          223,
          1.874,
          240,
          3.731,
          246,
          1.243,
          259,
          2.415,
          286,
          4.132,
          295,
          0.76,
          296,
          1.011,
          297,
          1.73,
          298,
          0.915,
          299,
          1.119,
          303,
          1.166,
          304,
          2.379,
          305,
          0.681,
          313,
          2.514,
          325,
          0.727,
          326,
          1.469,
          327,
          1.287,
          328,
          2.031,
          329,
          1.119,
          330,
          1.119,
          331,
          0.915,
          332,
          1.119,
          333,
          0.978,
          334,
          1.119,
          335,
          0.978,
          336,
          1.119,
          337,
          0.886,
          338,
          1.119,
          339,
          1.915,
          340,
          1.011,
          341,
          1.119,
          342,
          1.011,
          343,
          1.119,
          344,
          1.011,
          345,
          1.119,
          346,
          0.978,
          347,
          1.011,
          348,
          1.119,
          349,
          0.978,
          350,
          1.119,
          351,
          1.011,
          352,
          1.119,
          353,
          1.33,
          354,
          1.626,
          355,
          0.978,
          356,
          1.011,
          357,
          1.119,
          358,
          1.899,
          359,
          1.836,
          360,
          1.011,
          361,
          1.571,
          362,
          1.119,
          363,
          1.011,
          364,
          1.119,
          365,
          0.946,
          366,
          1.119,
          367,
          0.915,
          368,
          1.011,
          369,
          1.011,
          370,
          1.119,
          371,
          1.011,
          372,
          1.119,
          373,
          1.119,
          374,
          0.946,
          375,
          1.119,
          376,
          0.978,
          377,
          1.119,
          378,
          0.946,
          379,
          1.119,
          380,
          0.946,
          381,
          1.081,
          382,
          1.119,
          390,
          1.568,
          476,
          4.223,
          488,
          2.893,
          494,
          2.279,
          498,
          3.963,
          499,
          2.248,
          505,
          3.508,
          530,
          3.066,
          531,
          2.473,
          540,
          2.931,
          553,
          2.488,
          575,
          1.796,
          653,
          1.29,
          821,
          2.11,
          891,
          3.831,
          922,
          4.926,
          945,
          3.508,
          973,
          3.066,
          976,
          2.248,
          1088,
          5.459,
          1094,
          2.415,
          1120,
          2.11,
          1165,
          3.408,
          1169,
          3.74,
          1296,
          3.508,
          1318,
          2.248,
          1347,
          2.11,
          1616,
          4.216,
          1617,
          2.623,
          1641,
          3.811,
          1734,
          2.415,
          1763,
          6.039,
          1764,
          3.508,
          1765,
          5.789,
          1766,
          3.325,
          1767,
          4.535,
          1768,
          4.83,
          1769,
          3.325,
          1770,
          3.325,
          1771,
          3.325,
          1772,
          4.83,
          1773,
          6.633,
          1774,
          3.325,
          1775,
          5.689,
          1776,
          2.623,
          1777,
          3.325,
          1778,
          3.848,
          1779,
          2.415,
          1780,
          2.415,
          1781,
          3.325,
          1782,
          3.508,
          1783,
          3.325,
          1784,
          2.623,
          1785,
          2.623,
          1786,
          5.689,
          1787,
          3.325,
          1788,
          3.325,
          1789,
          3.325,
          1790,
          2.623,
          1791,
          3.325,
          1792,
          4.83,
          1793,
          5.689,
          1794,
          2.415,
          1795,
          3.325,
          1796,
          3.325,
          1797,
          3.325,
          1798,
          3.325,
          1799,
          2.902,
        ],
      ],
      ['title/components/LayoutMainComponent.html', [295, 0.41, 360, 1.244]],
      [
        'body/components/LayoutMainComponent.html',
        [
          2,
          0.133,
          3,
          0.133,
          4,
          0.1,
          20,
          1.166,
          29,
          0.451,
          32,
          0.013,
          33,
          0.58,
          45,
          1.631,
          77,
          0.01,
          98,
          1.01,
          102,
          0.201,
          103,
          0.201,
          116,
          0.116,
          117,
          0.053,
          184,
          0.01,
          198,
          2.14,
          214,
          1.45,
          218,
          1.638,
          295,
          0.765,
          296,
          1.5,
          297,
          1.924,
          298,
          1.358,
          299,
          1.66,
          305,
          1.01,
          310,
          2.284,
          325,
          1.079,
          326,
          1.924,
          327,
          1.686,
          328,
          2.398,
          329,
          1.66,
          330,
          1.66,
          331,
          1.358,
          332,
          1.66,
          333,
          1.45,
          334,
          1.66,
          335,
          1.45,
          336,
          1.66,
          337,
          1.314,
          338,
          1.66,
          339,
          2.352,
          340,
          1.5,
          341,
          1.66,
          342,
          1.5,
          343,
          1.66,
          344,
          1.5,
          345,
          1.66,
          346,
          1.45,
          347,
          1.5,
          348,
          1.66,
          349,
          1.45,
          350,
          1.66,
          351,
          1.5,
          352,
          1.66,
          353,
          1.742,
          354,
          2.13,
          355,
          1.45,
          356,
          1.5,
          357,
          1.66,
          358,
          1.5,
          359,
          1.45,
          360,
          2.242,
          361,
          2.538,
          362,
          1.66,
          363,
          1.5,
          364,
          1.66,
          365,
          1.403,
          366,
          1.66,
          367,
          1.358,
          368,
          1.5,
          369,
          1.5,
          370,
          1.66,
          371,
          1.5,
          372,
          1.66,
          373,
          1.66,
          374,
          1.403,
          375,
          1.66,
          376,
          1.45,
          377,
          1.66,
          378,
          1.403,
          379,
          1.66,
          380,
          1.403,
          381,
          1.604,
          382,
          1.66,
          686,
          4.993,
          1800,
          5.524,
          1801,
          4.305,
          1802,
          6.329,
          1803,
          4.932,
        ],
      ],
      ['title/components/LayoutSingleComponent.html', [295, 0.41, 363, 1.244]],
      [
        'body/components/LayoutSingleComponent.html',
        [
          2,
          0.133,
          3,
          0.133,
          4,
          0.1,
          20,
          1.166,
          29,
          0.451,
          32,
          0.013,
          33,
          0.58,
          45,
          1.631,
          77,
          0.01,
          98,
          1.01,
          102,
          0.201,
          103,
          0.201,
          116,
          0.116,
          117,
          0.053,
          184,
          0.01,
          198,
          2.14,
          212,
          4.017,
          214,
          1.45,
          218,
          1.638,
          295,
          0.765,
          296,
          1.5,
          297,
          1.924,
          298,
          1.358,
          299,
          1.66,
          305,
          1.01,
          310,
          2.284,
          325,
          1.079,
          326,
          1.924,
          327,
          1.686,
          328,
          2.398,
          329,
          1.66,
          330,
          1.66,
          331,
          1.358,
          332,
          1.66,
          333,
          1.45,
          334,
          1.66,
          335,
          1.45,
          336,
          1.66,
          337,
          1.314,
          338,
          1.66,
          339,
          2.352,
          340,
          1.5,
          341,
          1.66,
          342,
          1.5,
          343,
          1.66,
          344,
          1.5,
          345,
          1.66,
          346,
          1.45,
          347,
          1.5,
          348,
          1.66,
          349,
          1.45,
          350,
          1.66,
          351,
          1.5,
          352,
          1.66,
          353,
          1.742,
          354,
          2.13,
          355,
          1.45,
          356,
          1.5,
          357,
          1.66,
          358,
          1.5,
          359,
          1.45,
          360,
          1.5,
          361,
          2.538,
          362,
          1.66,
          363,
          2.242,
          364,
          1.66,
          365,
          1.403,
          366,
          1.66,
          367,
          1.358,
          368,
          1.5,
          369,
          1.5,
          370,
          1.66,
          371,
          1.5,
          372,
          1.66,
          373,
          1.66,
          374,
          1.403,
          375,
          1.66,
          376,
          1.45,
          377,
          1.66,
          378,
          1.403,
          379,
          1.66,
          380,
          1.403,
          381,
          1.604,
          382,
          1.66,
          1804,
          5.524,
          1805,
          4.305,
          1806,
          6.329,
          1807,
          4.932,
        ],
      ],
      ['title/components/LoginComponent.html', [295, 0.41, 365, 1.164]],
      [
        'body/components/LoginComponent.html',
        [
          2,
          0.078,
          3,
          0.078,
          4,
          0.059,
          6,
          0.357,
          7,
          0.778,
          8,
          1.612,
          10,
          0.538,
          11,
          1.486,
          20,
          0.725,
          26,
          3.873,
          28,
          1.772,
          29,
          0.697,
          31,
          0.538,
          32,
          0.013,
          33,
          0.483,
          34,
          0.642,
          35,
          0.302,
          38,
          1.638,
          39,
          0.435,
          40,
          1.183,
          42,
          1.108,
          45,
          1.121,
          52,
          1.361,
          60,
          2.276,
          61,
          2.051,
          63,
          2.469,
          68,
          1.154,
          69,
          0.843,
          70,
          1.81,
          76,
          0.971,
          77,
          0.007,
          98,
          0.591,
          102,
          0.267,
          103,
          0.117,
          105,
          1.361,
          107,
          1.161,
          110,
          1.254,
          116,
          0.068,
          117,
          0.031,
          125,
          1.361,
          127,
          1.627,
          128,
          1.454,
          138,
          3.431,
          139,
          5.953,
          140,
          4.329,
          178,
          1.237,
          182,
          2.941,
          183,
          3.801,
          184,
          0.007,
          198,
          2.046,
          214,
          0.848,
          218,
          1.561,
          246,
          2.339,
          268,
          3.123,
          295,
          0.627,
          296,
          0.877,
          297,
          1.322,
          298,
          0.794,
          299,
          0.971,
          303,
          1.05,
          304,
          2.188,
          305,
          0.591,
          310,
          1.57,
          313,
          2.346,
          325,
          0.631,
          326,
          1.322,
          327,
          1.158,
          328,
          1.895,
          329,
          0.971,
          330,
          0.971,
          331,
          0.794,
          332,
          0.971,
          333,
          0.848,
          334,
          0.971,
          335,
          0.848,
          336,
          0.971,
          337,
          0.768,
          338,
          0.971,
          339,
          1.762,
          340,
          0.877,
          341,
          0.971,
          342,
          0.877,
          343,
          0.971,
          344,
          0.877,
          345,
          0.971,
          346,
          0.848,
          347,
          0.877,
          348,
          0.971,
          349,
          0.848,
          350,
          0.971,
          351,
          0.877,
          352,
          0.971,
          353,
          1.197,
          354,
          1.464,
          355,
          0.848,
          356,
          0.877,
          357,
          0.971,
          358,
          0.877,
          359,
          0.848,
          360,
          0.877,
          361,
          1.414,
          362,
          0.971,
          363,
          0.877,
          364,
          0.971,
          365,
          1.658,
          366,
          0.971,
          367,
          0.794,
          368,
          1.322,
          369,
          0.877,
          370,
          0.971,
          371,
          0.877,
          372,
          0.971,
          373,
          0.971,
          374,
          0.821,
          375,
          0.971,
          376,
          0.848,
          377,
          0.971,
          378,
          0.821,
          379,
          0.971,
          380,
          0.821,
          381,
          0.938,
          382,
          0.971,
          476,
          3.941,
          498,
          3.698,
          505,
          2.095,
          541,
          2.276,
          542,
          2.276,
          543,
          2.276,
          564,
          4.597,
          566,
          3.732,
          574,
          3.002,
          575,
          1.558,
          610,
          4.597,
          761,
          4.56,
          813,
          5.736,
          814,
          1.254,
          820,
          2.095,
          884,
          5.086,
          891,
          1.361,
          910,
          2.518,
          950,
          2.518,
          981,
          5.086,
          986,
          5.457,
          1097,
          3.431,
          1102,
          2.941,
          1165,
          3.135,
          1169,
          3.491,
          1551,
          4.597,
          1569,
          4.129,
          1570,
          4.597,
          1601,
          4.597,
          1613,
          2.276,
          1614,
          1.951,
          1627,
          2.276,
          1628,
          2.276,
          1632,
          3.431,
          1778,
          1.951,
          1808,
          2.518,
          1809,
          4.349,
          1810,
          5.827,
          1811,
          5.827,
          1812,
          5.827,
          1813,
          4.597,
          1814,
          5.827,
          1815,
          2.885,
          1816,
          4.349,
          1817,
          2.885,
          1818,
          2.885,
          1819,
          2.885,
          1820,
          5.234,
          1821,
          2.885,
          1822,
          2.885,
          1823,
          2.885,
          1824,
          2.885,
          1825,
          2.885,
          1826,
          2.885,
          1827,
          2.885,
          1828,
          2.885,
          1829,
          5.234,
          1830,
          5.234,
          1831,
          5.234,
          1832,
          5.827,
          1833,
          2.885,
          1834,
          4.349,
          1835,
          2.885,
          1836,
          2.885,
          1837,
          2.885,
          1838,
          2.885,
          1839,
          2.885,
          1840,
          2.885,
          1841,
          7.185,
          1842,
          5.827,
          1843,
          2.885,
          1844,
          2.885,
          1845,
          5.234,
          1846,
          4.349,
          1847,
          4.349,
          1848,
          2.885,
          1849,
          4.349,
          1850,
          2.885,
          1851,
          2.885,
          1852,
          2.885,
          1853,
          2.885,
          1854,
          2.095,
          1855,
          2.885,
          1856,
          5.234,
          1857,
          2.885,
          1858,
          5.086,
          1859,
          4.349,
          1860,
          4.349,
          1861,
          4.349,
        ],
      ],
      ['title/components/LogoutModalComponent.html', [295, 0.41, 367, 1.126]],
      [
        'body/components/LogoutModalComponent.html',
        [
          2,
          0.098,
          3,
          0.098,
          4,
          0.074,
          6,
          0.45,
          7,
          0.921,
          10,
          0.638,
          11,
          1.449,
          20,
          0.998,
          29,
          0.671,
          32,
          0.013,
          33,
          0.496,
          34,
          0.595,
          39,
          0.385,
          40,
          1.165,
          45,
          1.328,
          68,
          1.02,
          69,
          0.586,
          77,
          0.008,
          80,
          2.982,
          84,
          2.409,
          97,
          1.792,
          98,
          0.745,
          102,
          0.243,
          103,
          0.148,
          107,
          1.465,
          116,
          0.086,
          117,
          0.039,
          140,
          3.798,
          169,
          4.401,
          178,
          1.702,
          182,
          3.485,
          183,
          3.743,
          184,
          0.008,
          198,
          2.092,
          214,
          1.07,
          218,
          1.599,
          222,
          3.271,
          235,
          1.716,
          239,
          3.398,
          263,
          3.743,
          295,
          0.689,
          296,
          1.106,
          297,
          1.567,
          298,
          1.001,
          299,
          1.225,
          303,
          1.244,
          304,
          2.502,
          305,
          0.745,
          310,
          1.86,
          313,
          2.62,
          325,
          0.796,
          326,
          1.567,
          327,
          1.373,
          328,
          2.117,
          329,
          1.225,
          330,
          1.225,
          331,
          1.001,
          332,
          1.225,
          333,
          1.07,
          334,
          1.225,
          335,
          1.07,
          336,
          1.225,
          337,
          0.969,
          338,
          1.225,
          339,
          2.014,
          340,
          1.106,
          341,
          1.225,
          342,
          1.106,
          343,
          1.225,
          344,
          1.106,
          345,
          1.225,
          346,
          1.07,
          347,
          1.106,
          348,
          1.225,
          349,
          1.07,
          350,
          1.225,
          351,
          1.106,
          352,
          1.225,
          353,
          1.418,
          354,
          1.734,
          355,
          1.07,
          356,
          1.106,
          357,
          1.225,
          358,
          1.106,
          359,
          1.07,
          360,
          1.106,
          361,
          1.676,
          362,
          1.225,
          363,
          1.106,
          364,
          1.225,
          365,
          1.035,
          366,
          1.225,
          367,
          1.791,
          368,
          2.169,
          369,
          1.106,
          370,
          1.225,
          371,
          1.106,
          372,
          1.225,
          373,
          1.225,
          374,
          1.035,
          375,
          1.225,
          376,
          1.07,
          377,
          1.225,
          378,
          1.035,
          379,
          1.225,
          380,
          1.035,
          381,
          1.183,
          382,
          1.225,
          415,
          4.065,
          418,
          1.582,
          432,
          2.643,
          435,
          2.179,
          438,
          2.647,
          449,
          1.361,
          498,
          4.13,
          499,
          2.461,
          531,
          1.582,
          532,
          3.087,
          566,
          2.066,
          573,
          2.309,
          654,
          1.268,
          725,
          3.087,
          743,
          3.485,
          882,
          3.175,
          891,
          3.535,
          897,
          5.68,
          907,
          3.175,
          908,
          5.134,
          916,
          3.175,
          928,
          1.965,
          929,
          2.179,
          930,
          5.68,
          938,
          2.461,
          961,
          4.721,
          1094,
          2.643,
          1095,
          4.497,
          1104,
          3.175,
          1105,
          3.175,
          1165,
          3.584,
          1166,
          5.181,
          1169,
          3.898,
          1187,
          2.309,
          1247,
          2.643,
          1263,
          3.175,
          1321,
          3.175,
          1350,
          3.175,
          1589,
          2.461,
          1779,
          4.727,
          1790,
          2.87,
          1862,
          6.539,
          1863,
          6.508,
          1864,
          5.153,
          1865,
          3.639,
          1866,
          3.639,
          1867,
          3.639,
          1868,
          3.639,
          1869,
          5.153,
          1870,
          5.153,
          1871,
          5.222,
          1872,
          3.639,
          1873,
          3.639,
          1874,
          3.639,
          1875,
          3.639,
          1876,
          5.153,
          1877,
          3.639,
          1878,
          5.153,
        ],
      ],
      ['title/interfaces/Message.html', [486, 2.451, 629, 1.93]],
      [
        'body/interfaces/Message.html',
        [
          0,
          0.791,
          2,
          0.096,
          3,
          0.137,
          4,
          0.073,
          6,
          0.443,
          7,
          0.91,
          8,
          1.759,
          11,
          1.268,
          28,
          1.548,
          32,
          0.013,
          34,
          0.466,
          35,
          0.677,
          39,
          0.38,
          42,
          1.629,
          45,
          0.922,
          48,
          1.554,
          52,
          2.796,
          55,
          1.439,
          61,
          1.687,
          70,
          1.312,
          77,
          0.008,
          82,
          3.759,
          84,
          1.439,
          92,
          2.03,
          97,
          1.761,
          99,
          1.246,
          102,
          0.263,
          103,
          0.145,
          107,
          1.439,
          114,
          1.554,
          116,
          0.084,
          117,
          0.038,
          118,
          2.29,
          124,
          4.008,
          126,
          2.89,
          128,
          1.27,
          144,
          1.246,
          150,
          5.133,
          151,
          0.835,
          163,
          1.495,
          175,
          3.868,
          184,
          0.008,
          206,
          1.618,
          207,
          1.495,
          211,
          1.087,
          218,
          0.684,
          228,
          1.618,
          235,
          1.687,
          282,
          2.418,
          283,
          3.049,
          298,
          0.984,
          305,
          0.732,
          387,
          1.842,
          402,
          2.269,
          404,
          2.142,
          408,
          2.418,
          418,
          2.576,
          438,
          1.837,
          447,
          2.03,
          449,
          1.337,
          464,
          3.201,
          475,
          5.045,
          482,
          2.269,
          486,
          4.958,
          491,
          4.956,
          530,
          2.269,
          531,
          2.576,
          538,
          3.697,
          540,
          4.012,
          548,
          3.697,
          614,
          2.919,
          617,
          3.442,
          629,
          2.796,
          631,
          1.618,
          704,
          4.956,
          877,
          2.03,
          1185,
          4.008,
          1219,
          4.098,
          1497,
          2.597,
          1531,
          3.697,
          1626,
          2.418,
          1780,
          2.597,
          1794,
          4.304,
          1854,
          2.597,
          1879,
          2.597,
          1880,
          2.597,
          1881,
          4.676,
          1882,
          2.269,
          1883,
          4.008,
          1884,
          5.885,
          1885,
          2.821,
          1886,
          2.821,
          1887,
          5.094,
          1888,
          2.142,
          1889,
          2.597,
          1890,
          3.697,
          1891,
          2.418,
          1892,
          2.821,
          1893,
          2.821,
          1894,
          2.821,
          1895,
          4.676,
          1896,
          2.821,
          1897,
          4.676,
          1898,
          2.821,
          1899,
          4.015,
          1900,
          2.821,
          1901,
          2.821,
          1902,
          2.821,
          1903,
          2.821,
          1904,
          4.676,
          1905,
          5.988,
          1906,
          4.676,
          1907,
          2.821,
          1908,
          2.821,
          1909,
          2.821,
          1910,
          2.821,
          1911,
          2.821,
          1912,
          2.821,
          1913,
          2.821,
          1914,
          2.821,
          1915,
          2.821,
          1916,
          2.821,
          1917,
          2.821,
          1918,
          2.821,
          1919,
          2.821,
          1920,
          4.015,
          1921,
          2.821,
          1922,
          2.821,
          1923,
          2.821,
          1924,
          4.015,
          1925,
          2.597,
          1926,
          2.821,
          1927,
          4.015,
          1928,
          2.821,
          1929,
          2.821,
          1930,
          2.821,
          1931,
          2.821,
          1932,
          2.821,
          1933,
          2.821,
        ],
      ],
      ['title/interfaces/MessageComplete.html', [629, 1.93, 1883, 2.767]],
      [
        'body/interfaces/MessageComplete.html',
        [
          0,
          0.788,
          2,
          0.096,
          3,
          0.137,
          4,
          0.072,
          6,
          0.441,
          7,
          0.907,
          8,
          1.756,
          11,
          1.266,
          28,
          1.543,
          32,
          0.013,
          34,
          0.464,
          35,
          0.675,
          39,
          0.379,
          42,
          1.628,
          45,
          0.918,
          48,
          1.548,
          52,
          2.789,
          55,
          1.433,
          61,
          1.679,
          70,
          1.308,
          77,
          0.008,
          82,
          3.755,
          84,
          1.433,
          92,
          2.022,
          97,
          1.753,
          99,
          1.241,
          102,
          0.262,
          103,
          0.145,
          107,
          1.433,
          114,
          1.548,
          116,
          0.084,
          117,
          0.038,
          118,
          2.288,
          124,
          3.999,
          126,
          2.881,
          128,
          1.266,
          144,
          1.241,
          150,
          4.79,
          151,
          0.832,
          163,
          1.489,
          175,
          3.86,
          184,
          0.008,
          206,
          1.611,
          207,
          1.489,
          211,
          1.082,
          218,
          0.681,
          228,
          1.611,
          235,
          1.679,
          282,
          3.432,
          283,
          3.04,
          298,
          0.98,
          305,
          0.729,
          387,
          1.834,
          402,
          2.26,
          404,
          2.133,
          408,
          2.408,
          418,
          2.57,
          438,
          2.326,
          447,
          2.022,
          449,
          1.332,
          464,
          3.193,
          475,
          5.039,
          482,
          2.26,
          486,
          4.955,
          491,
          4.948,
          530,
          2.26,
          531,
          2.57,
          538,
          3.685,
          540,
          3.838,
          548,
          3.685,
          614,
          3.488,
          617,
          3.432,
          629,
          2.789,
          631,
          1.611,
          704,
          5.411,
          877,
          2.022,
          1185,
          3.999,
          1219,
          4.09,
          1497,
          2.586,
          1531,
          3.685,
          1626,
          2.408,
          1780,
          2.586,
          1794,
          4.294,
          1854,
          2.586,
          1879,
          2.586,
          1880,
          2.586,
          1881,
          4.664,
          1882,
          2.26,
          1883,
          4.358,
          1884,
          5.878,
          1885,
          2.809,
          1886,
          2.809,
          1887,
          5.084,
          1888,
          2.133,
          1889,
          2.586,
          1890,
          3.685,
          1891,
          2.408,
          1892,
          2.809,
          1893,
          2.809,
          1894,
          2.809,
          1895,
          4.664,
          1896,
          2.809,
          1897,
          4.664,
          1898,
          2.809,
          1899,
          4.003,
          1900,
          2.809,
          1901,
          2.809,
          1902,
          2.809,
          1903,
          2.809,
          1904,
          4.664,
          1905,
          5.982,
          1906,
          4.664,
          1907,
          2.809,
          1908,
          2.809,
          1909,
          2.809,
          1910,
          2.809,
          1911,
          2.809,
          1912,
          2.809,
          1913,
          2.809,
          1914,
          2.809,
          1915,
          2.809,
          1916,
          2.809,
          1917,
          2.809,
          1918,
          2.809,
          1919,
          2.809,
          1920,
          4.003,
          1921,
          2.809,
          1922,
          2.809,
          1923,
          2.809,
          1924,
          4.003,
          1925,
          2.586,
          1926,
          2.809,
          1927,
          4.003,
          1928,
          2.809,
          1929,
          2.809,
          1930,
          2.809,
          1931,
          2.809,
          1932,
          2.809,
          1933,
          2.809,
        ],
      ],
      ['title/injectables/ModalsService.html', [0, 0.635, 1767, 2.971]],
      [
        'body/injectables/ModalsService.html',
        [
          0,
          0.828,
          2,
          0.08,
          3,
          0.08,
          4,
          0.06,
          6,
          0.368,
          7,
          0.796,
          8,
          1.525,
          10,
          0.551,
          11,
          1.396,
          20,
          0.496,
          24,
          2.888,
          28,
          1.799,
          29,
          0.63,
          31,
          0.551,
          32,
          0.013,
          33,
          0.526,
          34,
          0.663,
          35,
          0.559,
          39,
          0.442,
          40,
          0.673,
          42,
          0.63,
          48,
          1.935,
          49,
          1.935,
          51,
          0.968,
          68,
          1.056,
          69,
          0.858,
          70,
          1.374,
          73,
          2.527,
          76,
          1.001,
          77,
          0.007,
          78,
          1.533,
          80,
          3.206,
          84,
          2.146,
          94,
          1.888,
          96,
          3.01,
          99,
          2.062,
          100,
          3.01,
          101,
          1.347,
          102,
          0.28,
          103,
          0.121,
          106,
          1.404,
          110,
          1.294,
          115,
          1.689,
          116,
          0.07,
          117,
          0.057,
          118,
          1.863,
          127,
          1.113,
          128,
          1.807,
          144,
          1.551,
          145,
          2.146,
          151,
          1.04,
          184,
          0.007,
          187,
          1.294,
          188,
          1.782,
          206,
          1.347,
          207,
          1.244,
          211,
          0.905,
          218,
          0.57,
          222,
          1.888,
          223,
          1.154,
          268,
          2.318,
          295,
          0.535,
          337,
          1.771,
          359,
          0.875,
          367,
          1.83,
          368,
          0.905,
          390,
          2.792,
          403,
          2.012,
          404,
          1.782,
          407,
          2.404,
          418,
          3.256,
          419,
          2.012,
          433,
          4.497,
          440,
          3.36,
          463,
          1.888,
          464,
          2.404,
          470,
          3.606,
          483,
          3.009,
          513,
          2.666,
          515,
          3.775,
          531,
          2.891,
          532,
          3.795,
          552,
          2.192,
          553,
          3.651,
          573,
          1.888,
          609,
          2.1,
          614,
          2.192,
          626,
          2.012,
          631,
          2.413,
          699,
          3.233,
          743,
          2.012,
          821,
          2.825,
          877,
          1.689,
          891,
          3.96,
          973,
          4.22,
          976,
          3.606,
          1099,
          5.165,
          1107,
          2.161,
          1221,
          2.347,
          1224,
          5.803,
          1318,
          4.285,
          1734,
          4.602,
          1764,
          2.161,
          1767,
          3.233,
          1778,
          5.235,
          1779,
          2.161,
          1782,
          5.44,
          1784,
          4.999,
          1785,
          3.511,
          1813,
          2.347,
          1934,
          2.347,
          1935,
          5.165,
          1936,
          6.439,
          1937,
          5.165,
          1938,
          6.649,
          1939,
          2.976,
          1940,
          2.976,
          1941,
          3.885,
          1942,
          2.976,
          1943,
          5.165,
          1944,
          2.976,
          1945,
          2.976,
          1946,
          4.654,
          1947,
          2.976,
          1948,
          4.669,
          1949,
          3.885,
          1950,
          2.976,
          1951,
          2.976,
          1952,
          2.161,
          1953,
          2.347,
          1954,
          2.347,
          1955,
          3.511,
          1956,
          2.597,
          1957,
          2.597,
          1958,
          2.597,
          1959,
          2.597,
          1960,
          6.62,
          1961,
          4.451,
          1962,
          2.976,
          1963,
          4.451,
          1964,
          4.451,
          1965,
          4.451,
          1966,
          2.597,
          1967,
          2.597,
          1968,
          2.976,
          1969,
          2.597,
          1970,
          2.597,
          1971,
          2.597,
          1972,
          2.597,
          1973,
          2.597,
          1974,
          2.597,
          1975,
          4.654,
          1976,
          2.597,
          1977,
          2.976,
          1978,
          2.597,
          1979,
          2.597,
          1980,
          3.885,
        ],
      ],
      ['title/injectables/MonolithApiSelectorsService.html', [0, 0.635, 1981, 2.596]],
      [
        'body/injectables/MonolithApiSelectorsService.html',
        [
          0,
          0.978,
          2,
          0.108,
          3,
          0.108,
          4,
          0.081,
          6,
          0.496,
          7,
          0.985,
          11,
          1.272,
          20,
          0.668,
          24,
          2.653,
          29,
          0.504,
          31,
          0.496,
          32,
          0.013,
          33,
          0.332,
          34,
          0.366,
          35,
          0.42,
          39,
          0.607,
          43,
          2.541,
          63,
          3.2,
          68,
          1.091,
          69,
          0.644,
          70,
          2.007,
          73,
          3.852,
          76,
          2.794,
          77,
          0.008,
          80,
          2.303,
          83,
          3.128,
          84,
          1.611,
          98,
          1.128,
          99,
          1.919,
          102,
          0.306,
          103,
          0.163,
          106,
          1.888,
          107,
          1.611,
          109,
          2.162,
          111,
          2.541,
          116,
          0.094,
          117,
          0.043,
          118,
          1.177,
          125,
          1.888,
          127,
          2.06,
          128,
          0.999,
          145,
          2.731,
          151,
          1.471,
          178,
          1.139,
          184,
          0.008,
          187,
          3.385,
          188,
          2.398,
          190,
          4.808,
          191,
          4.808,
          192,
          2.975,
          193,
          3.494,
          194,
          4.808,
          195,
          3.494,
          196,
          3.494,
          197,
          3.494,
          198,
          1.692,
          199,
          3.494,
          200,
          1.888,
          202,
          3.494,
          203,
          3.494,
          204,
          3.158,
          205,
          2.541,
          208,
          3.494,
          209,
          3.158,
          210,
          3.494,
          211,
          1.217,
          212,
          4.306,
          213,
          3.494,
          214,
          2.215,
          215,
          2.707,
          216,
          2.907,
          217,
          3.3,
          218,
          0.766,
          219,
          2.273,
          220,
          2.907,
          221,
          2.062,
          222,
          2.541,
          223,
          1.553,
          224,
          3.494,
          225,
          3.494,
          226,
          3.494,
          227,
          5.921,
          228,
          3.07,
          229,
          3.494,
          230,
          3.494,
          231,
          3.494,
          232,
          3.494,
          233,
          3.494,
          234,
          3.128,
          235,
          1.888,
          236,
          3.158,
          237,
          6.696,
          238,
          2.398,
          239,
          2.273,
          240,
          1.971,
          241,
          3.494,
          242,
          3.494,
          243,
          3.494,
          244,
          5.497,
          245,
          4.808,
          246,
          2.538,
          247,
          4.808,
          248,
          3.494,
          249,
          3.494,
          1981,
          3.496,
          1982,
          3.494,
          1983,
          5.509,
          1984,
          3.494,
          1985,
          3.494,
          1986,
          4.003,
        ],
      ],
      ['title/injectables/MonolithApiService.html', [0, 0.635, 1669, 2.596]],
      [
        'body/injectables/MonolithApiService.html',
        [
          0,
          0.986,
          1,
          3.763,
          2,
          0.109,
          3,
          0.109,
          4,
          0.083,
          6,
          0.503,
          7,
          0.995,
          8,
          1.76,
          9,
          3.204,
          10,
          0.689,
          11,
          1.438,
          20,
          0.928,
          22,
          4.332,
          24,
          2.903,
          26,
          4.372,
          28,
          2.075,
          29,
          0.654,
          31,
          0.503,
          32,
          0.013,
          33,
          0.337,
          34,
          0.58,
          35,
          0.426,
          38,
          3.604,
          39,
          0.416,
          40,
          1.258,
          43,
          2.578,
          49,
          2.419,
          55,
          2.24,
          68,
          0.804,
          69,
          0.654,
          77,
          0.008,
          80,
          2.326,
          82,
          2.866,
          83,
          3.159,
          88,
          3.763,
          95,
          2.854,
          98,
          1.397,
          102,
          0.324,
          103,
          0.165,
          104,
          2.306,
          105,
          1.916,
          106,
          1.916,
          110,
          1.766,
          112,
          2.95,
          116,
          0.096,
          117,
          0.044,
          145,
          2.24,
          173,
          3.204,
          178,
          1.583,
          184,
          0.008,
          187,
          3.603,
          188,
          2.433,
          192,
          3.005,
          198,
          1.388,
          217,
          3.333,
          221,
          3.269,
          223,
          2.158,
          252,
          4.994,
          253,
          5.958,
          254,
          5.958,
          255,
          4.089,
          258,
          4.041,
          259,
          4.041,
          260,
          3.763,
          261,
          4.856,
          262,
          4.041,
          263,
          4.041,
          265,
          2.081,
          266,
          4.856,
          268,
          2.419,
          269,
          4.856,
          270,
          6.72,
          271,
          5.363,
          272,
          4.856,
          273,
          4.856,
          274,
          5.958,
          275,
          4.856,
          280,
          3.545,
          281,
          3.545,
          282,
          2.747,
          285,
          3.545,
          286,
          2.95,
          287,
          1.838,
          288,
          2.95,
          289,
          3.204,
          291,
          3.545,
          292,
          3.545,
          293,
          3.545,
          294,
          3.545,
          1669,
          3.531,
          1981,
          4.687,
          1984,
          3.545,
          1985,
          3.545,
          1987,
          3.545,
          1988,
          4.062,
          1989,
          4.062,
          1990,
          4.062,
          1991,
          4.062,
          1992,
          4.062,
          1993,
          4.062,
        ],
      ],
      ['title/modules/MonolithModule.html', [651, 1.055, 1994, 2.971]],
      [
        'body/modules/MonolithModule.html',
        [
          2,
          0.129,
          3,
          0.129,
          4,
          0.097,
          24,
          1.729,
          32,
          0.013,
          39,
          0.358,
          76,
          1.612,
          77,
          0.009,
          98,
          1.271,
          102,
          0.34,
          103,
          0.195,
          106,
          2.259,
          116,
          0.163,
          117,
          0.051,
          178,
          1.363,
          184,
          0.009,
          265,
          1.791,
          295,
          0.48,
          325,
          1.048,
          353,
          2.131,
          355,
          2.276,
          390,
          2.259,
          483,
          2.81,
          574,
          3.55,
          632,
          2.774,
          651,
          1.776,
          653,
          1.858,
          654,
          1.669,
          655,
          3.44,
          661,
          4.395,
          663,
          2.93,
          669,
          3.119,
          682,
          4.18,
          683,
          4.18,
          684,
          4.511,
          685,
          4.511,
          700,
          3.479,
          701,
          4.2,
          710,
          4.18,
          721,
          3.04,
          814,
          2.082,
          993,
          3.199,
          1074,
          4.2,
          1092,
          3.239,
          1112,
          5.235,
          1117,
          3.04,
          1548,
          3.239,
          1669,
          4.913,
          1707,
          3.04,
          1708,
          4.18,
          1743,
          4.18,
          1981,
          4.913,
          1994,
          6.14,
          1995,
          4.18,
          1996,
          4.18,
          1997,
          4.79,
          1998,
          4.18,
          1999,
          5.235,
          2000,
          4.79,
          2001,
          4.79,
          2002,
          4.79,
          2003,
          4.79,
          2004,
          4.79,
          2005,
          4.79,
          2006,
          4.79,
        ],
      ],
      ['title/injectables/MonolithService.html', [0, 0.635, 1999, 2.767]],
      [
        'body/injectables/MonolithService.html',
        [
          0,
          1.218,
          2,
          0.173,
          3,
          0.173,
          4,
          0.13,
          20,
          1.308,
          29,
          0.586,
          32,
          0.013,
          77,
          0.011,
          102,
          0.261,
          103,
          0.261,
          116,
          0.151,
          117,
          0.069,
          184,
          0.011,
          1999,
          5.023,
          2007,
          5.595,
          2008,
          6.411,
        ],
      ],
      ['title/components/NavComponent.html', [295, 0.41, 369, 1.244]],
      [
        'body/components/NavComponent.html',
        [
          2,
          0.104,
          3,
          0.104,
          4,
          0.079,
          6,
          0.479,
          7,
          0.962,
          8,
          1.386,
          10,
          0.666,
          11,
          1.474,
          20,
          0.645,
          28,
          2.033,
          29,
          0.682,
          31,
          0.479,
          32,
          0.013,
          33,
          0.554,
          34,
          0.354,
          35,
          0.405,
          39,
          0.402,
          40,
          1.216,
          45,
          1.386,
          68,
          1.323,
          69,
          1.076,
          70,
          1.386,
          77,
          0.008,
          95,
          2.795,
          98,
          0.792,
          102,
          0.252,
          103,
          0.157,
          110,
          1.681,
          116,
          0.091,
          117,
          0.042,
          128,
          1.543,
          151,
          1.257,
          178,
          1.53,
          184,
          0.008,
          198,
          2.103,
          211,
          1.176,
          214,
          1.137,
          218,
          1.613,
          277,
          1.617,
          278,
          1.75,
          295,
          0.705,
          296,
          1.176,
          297,
          1.635,
          298,
          1.065,
          299,
          1.302,
          305,
          0.792,
          310,
          1.941,
          325,
          0.846,
          326,
          1.635,
          327,
          1.433,
          328,
          2.174,
          329,
          1.302,
          330,
          1.302,
          331,
          1.065,
          332,
          1.302,
          333,
          1.137,
          334,
          1.302,
          335,
          1.137,
          336,
          1.302,
          337,
          1.03,
          338,
          1.302,
          339,
          2.082,
          340,
          1.176,
          341,
          1.302,
          342,
          1.176,
          343,
          1.302,
          344,
          1.176,
          345,
          1.302,
          346,
          1.137,
          347,
          1.176,
          348,
          1.302,
          349,
          1.137,
          350,
          1.302,
          351,
          1.176,
          352,
          1.302,
          353,
          1.481,
          354,
          1.81,
          355,
          1.137,
          356,
          1.176,
          357,
          1.302,
          358,
          1.176,
          359,
          1.137,
          360,
          1.176,
          361,
          1.75,
          362,
          1.302,
          363,
          1.176,
          364,
          1.302,
          365,
          1.1,
          366,
          1.302,
          367,
          1.065,
          368,
          2.136,
          369,
          2.033,
          370,
          1.302,
          371,
          1.176,
          372,
          2.082,
          373,
          1.302,
          374,
          1.1,
          375,
          1.302,
          376,
          1.137,
          377,
          1.302,
          378,
          1.1,
          379,
          1.302,
          380,
          1.1,
          381,
          1.258,
          382,
          1.302,
          515,
          3.054,
          553,
          2.771,
          565,
          4.244,
          566,
          3.796,
          567,
          4.879,
          568,
          4.521,
          590,
          4.244,
          608,
          3.414,
          609,
          2.537,
          680,
          3.638,
          690,
          3.907,
          725,
          3.222,
          761,
          4.829,
          980,
          4.694,
          1135,
          3.638,
          1492,
          4.694,
          1542,
          5.834,
          1858,
          4.694,
          2009,
          3.375,
          2010,
          5.379,
          2011,
          6.685,
          2012,
          6.685,
          2013,
          6.685,
          2014,
          3.868,
          2015,
          5.379,
          2016,
          3.868,
          2017,
          3.868,
          2018,
          3.868,
          2019,
          5.379,
          2020,
          3.868,
          2021,
          5.379,
          2022,
          5.379,
          2023,
          5.379,
          2024,
          3.868,
          2025,
          3.375,
          2026,
          3.868,
          2027,
          3.375,
          2028,
          3.868,
          2029,
          3.868,
          2030,
          3.868,
          2031,
          5.379,
        ],
      ],
      ['title/components/NavSearchComponent.html', [295, 0.41, 371, 1.244]],
      [
        'body/components/NavSearchComponent.html',
        [
          2,
          0.116,
          3,
          0.116,
          4,
          0.087,
          6,
          0.532,
          7,
          1.034,
          10,
          0.716,
          11,
          1.413,
          20,
          0.717,
          26,
          4.264,
          29,
          0.639,
          31,
          0.532,
          32,
          0.013,
          33,
          0.647,
          34,
          0.529,
          35,
          0.451,
          39,
          0.432,
          40,
          1.477,
          45,
          1.49,
          68,
          0.851,
          69,
          0.692,
          77,
          0.009,
          98,
          0.88,
          102,
          0.235,
          103,
          0.175,
          105,
          2.028,
          116,
          0.101,
          117,
          0.046,
          184,
          0.009,
          198,
          2.12,
          211,
          1.307,
          214,
          1.264,
          218,
          1.622,
          295,
          0.731,
          296,
          1.307,
          297,
          1.758,
          298,
          1.183,
          299,
          1.447,
          303,
          1.396,
          304,
          2.732,
          305,
          0.88,
          310,
          2.087,
          313,
          2.813,
          325,
          0.94,
          326,
          1.758,
          327,
          1.54,
          328,
          2.273,
          329,
          1.447,
          330,
          1.447,
          331,
          1.183,
          332,
          1.447,
          333,
          1.264,
          334,
          1.447,
          335,
          1.264,
          336,
          1.447,
          337,
          1.145,
          338,
          1.447,
          339,
          2.199,
          340,
          1.307,
          341,
          1.447,
          342,
          1.307,
          343,
          1.447,
          344,
          1.307,
          345,
          1.447,
          346,
          1.264,
          347,
          1.307,
          348,
          1.447,
          349,
          1.264,
          350,
          1.447,
          351,
          1.307,
          352,
          1.447,
          353,
          1.592,
          354,
          1.946,
          355,
          1.264,
          356,
          1.307,
          357,
          1.447,
          358,
          1.307,
          359,
          1.264,
          360,
          1.307,
          361,
          1.881,
          362,
          1.447,
          363,
          1.307,
          364,
          1.447,
          365,
          1.223,
          366,
          1.447,
          367,
          1.183,
          368,
          1.307,
          369,
          1.307,
          370,
          1.447,
          371,
          2.125,
          372,
          2.454,
          373,
          1.447,
          374,
          1.223,
          375,
          1.447,
          376,
          1.264,
          377,
          1.447,
          378,
          1.223,
          379,
          1.447,
          380,
          1.223,
          381,
          1.398,
          382,
          1.447,
          438,
          2.087,
          563,
          3.392,
          722,
          4.2,
          1097,
          5.513,
          1289,
          6.971,
          1631,
          4.2,
          2032,
          6.364,
          2033,
          3.752,
          2034,
          5.783,
          2035,
          5.783,
          2036,
          4.299,
          2037,
          4.299,
          2038,
          4.299,
          2039,
          4.299,
          2040,
          4.299,
          2041,
          5.783,
          2042,
          5.783,
          2043,
          5.783,
        ],
      ],
      ['title/components/NoContentComponent.html', [295, 0.41, 374, 1.164]],
      [
        'body/components/NoContentComponent.html',
        [
          2,
          0.131,
          3,
          0.131,
          4,
          0.099,
          32,
          0.013,
          33,
          0.576,
          45,
          1.619,
          77,
          0.009,
          98,
          0.998,
          102,
          0.198,
          103,
          0.198,
          116,
          0.115,
          117,
          0.052,
          120,
          5.482,
          184,
          0.009,
          198,
          2.138,
          214,
          1.433,
          218,
          1.637,
          295,
          0.762,
          296,
          1.482,
          297,
          2.113,
          298,
          1.342,
          299,
          1.641,
          305,
          0.998,
          325,
          1.066,
          326,
          1.91,
          327,
          1.673,
          328,
          2.387,
          329,
          1.641,
          330,
          1.641,
          331,
          1.342,
          332,
          1.641,
          333,
          1.433,
          334,
          1.641,
          335,
          1.433,
          336,
          1.641,
          337,
          1.298,
          338,
          1.641,
          339,
          2.339,
          340,
          1.482,
          341,
          1.641,
          342,
          1.482,
          343,
          1.641,
          344,
          1.482,
          345,
          1.641,
          346,
          1.433,
          347,
          1.482,
          348,
          1.641,
          349,
          1.433,
          350,
          1.641,
          351,
          1.482,
          352,
          1.641,
          353,
          1.729,
          354,
          2.114,
          355,
          1.433,
          356,
          1.482,
          357,
          1.641,
          358,
          1.482,
          359,
          1.433,
          360,
          1.482,
          361,
          2.043,
          362,
          1.641,
          363,
          1.482,
          364,
          1.641,
          365,
          1.387,
          366,
          1.641,
          367,
          1.342,
          368,
          1.482,
          369,
          1.482,
          370,
          1.641,
          371,
          1.482,
          372,
          1.641,
          373,
          1.641,
          374,
          2.088,
          375,
          1.641,
          376,
          1.433,
          377,
          1.641,
          378,
          1.387,
          379,
          1.641,
          380,
          1.387,
          381,
          1.585,
          382,
          1.641,
          575,
          3.753,
          743,
          4.7,
          1575,
          5.483,
          2044,
          4.254,
          2045,
          4.254,
          2046,
          4.254,
          2047,
          6.95,
          2048,
          6.95,
          2049,
          6.065,
          2050,
          6.95,
        ],
      ],
      ['title/classes/ObjectUtils.html', [117, 0.044, 1882, 2.596]],
      [
        'body/classes/ObjectUtils.html',
        [
          2,
          0.124,
          3,
          0.124,
          4,
          0.094,
          6,
          0.571,
          10,
          0.75,
          29,
          0.554,
          31,
          0.75,
          32,
          0.013,
          33,
          0.502,
          34,
          0.554,
          35,
          0.635,
          39,
          0.558,
          42,
          1.282,
          49,
          2.633,
          51,
          2.2,
          55,
          3.336,
          56,
          5.286,
          69,
          1.089,
          77,
          0.009,
          101,
          2.086,
          116,
          0.109,
          117,
          0.065,
          118,
          1.781,
          127,
          2.687,
          151,
          1.89,
          165,
          3.637,
          184,
          0.009,
          204,
          3.637,
          228,
          3.062,
          235,
          2.175,
          324,
          4.399,
          385,
          3.118,
          386,
          4.399,
          387,
          3.12,
          390,
          3.614,
          407,
          4.031,
          440,
          2.618,
          494,
          2.175,
          633,
          4.859,
          864,
          6.271,
          1397,
          4.399,
          1626,
          3.118,
          1882,
          3.844,
          1925,
          5.218,
          2051,
          5.904,
          2052,
          6.057,
          2053,
          6.057,
          2054,
          6.057,
          2055,
          4.61,
          2056,
          6.057,
          2057,
          6.057,
          2058,
          6.686,
          2059,
          6.057,
          2060,
          6.057,
          2061,
          6.057,
          2062,
          4.61,
          2063,
          4.023,
          2064,
          4.61,
          2065,
          4.023,
          2066,
          4.61,
          2067,
          4.023,
          2068,
          4.61,
          2069,
          4.023,
          2070,
          4.61,
          2071,
          4.023,
          2072,
          4.61,
          2073,
          4.023,
          2074,
          4.61,
          2075,
          4.023,
          2076,
          4.61,
          2077,
          4.023,
          2078,
          4.61,
          2079,
          4.023,
          2080,
          4.61,
          2081,
          4.023,
          2082,
          4.61,
          2083,
          4.61,
          2084,
          4.61,
          2085,
          4.61,
          2086,
          4.61,
          2087,
          4.61,
          2088,
          4.61,
          2089,
          4.61,
          2090,
          4.61,
          2091,
          4.61,
          2092,
          4.61,
          2093,
          4.61,
          2094,
          4.61,
          2095,
          4.61,
          2096,
          4.61,
          2097,
          4.61,
          2098,
          4.023,
          2099,
          4.61,
          2100,
          4.61,
        ],
      ],
      ['title/pipes/PhoneNumberPipe.html', [167, 1.126, 2101, 2.767]],
      [
        'body/pipes/PhoneNumberPipe.html',
        [
          2,
          0.135,
          3,
          0.135,
          4,
          0.102,
          10,
          0.619,
          29,
          0.457,
          31,
          0.619,
          32,
          0.013,
          33,
          0.583,
          34,
          0.457,
          35,
          0.524,
          39,
          0.595,
          42,
          1.488,
          68,
          1.264,
          69,
          1.233,
          70,
          1.645,
          77,
          0.01,
          102,
          0.203,
          103,
          0.203,
          116,
          0.118,
          117,
          0.054,
          167,
          1.936,
          184,
          0.01,
          200,
          2.358,
          223,
          1.939,
          246,
          1.87,
          303,
          1.207,
          305,
          1.023,
          423,
          3.381,
          433,
          3.381,
          438,
          2.872,
          449,
          1.87,
          513,
          2.995,
          515,
          3.993,
          794,
          3.944,
          943,
          4.586,
          970,
          3.381,
          1048,
          3.381,
          1150,
          5.846,
          1160,
          3.289,
          1320,
          4.363,
          1633,
          3.944,
          1661,
          5.548,
          1776,
          3.944,
          1890,
          3.631,
          2101,
          4.317,
          2102,
          5.571,
          2103,
          4.363,
          2104,
          6.384,
          2105,
          7.41,
          2106,
          4.999,
          2107,
          4.999,
          2108,
          7.41,
          2109,
          4.999,
          2110,
          4.999,
          2111,
          4.999,
          2112,
          4.999,
          2113,
          4.999,
          2114,
          4.999,
          2115,
          6.682,
          2116,
          4.999,
          2117,
          4.999,
          2118,
          4.999,
          2119,
          4.999,
          2120,
          4.999,
          2121,
          4.999,
          2122,
          4.363,
          2123,
          4.999,
          2124,
          4.363,
        ],
      ],
      ['title/injectables/PostMessageService.html', [0, 0.635, 482, 2.596]],
      [
        'body/injectables/PostMessageService.html',
        [
          0,
          0.774,
          2,
          0.072,
          3,
          0.11,
          4,
          0.054,
          6,
          0.33,
          7,
          0.731,
          8,
          1.971,
          10,
          0.507,
          11,
          1.399,
          20,
          0.444,
          28,
          1.7,
          29,
          0.677,
          31,
          0.821,
          32,
          0.013,
          33,
          0.55,
          34,
          0.656,
          35,
          0.695,
          39,
          0.525,
          40,
          1.364,
          42,
          1.675,
          45,
          0.686,
          48,
          1.157,
          51,
          1.963,
          52,
          3.005,
          55,
          1.647,
          61,
          1.256,
          68,
          1.195,
          69,
          0.971,
          70,
          1.055,
          77,
          0.006,
          78,
          1.372,
          82,
          3.903,
          84,
          1.647,
          92,
          2.323,
          97,
          2.015,
          99,
          1.426,
          102,
          0.227,
          103,
          0.108,
          107,
          1.072,
          114,
          1.157,
          116,
          0.063,
          117,
          0.029,
          118,
          2.145,
          124,
          4.308,
          126,
          3.175,
          128,
          1.243,
          144,
          1.426,
          150,
          4.848,
          151,
          0.622,
          163,
          1.711,
          175,
          3.349,
          184,
          0.006,
          206,
          1.205,
          207,
          1.113,
          211,
          0.809,
          218,
          0.783,
          228,
          1.851,
          235,
          1.93,
          282,
          1.801,
          283,
          3.349,
          298,
          0.733,
          305,
          0.837,
          387,
          1.372,
          402,
          2.596,
          404,
          2.451,
          408,
          2.767,
          418,
          2.769,
          438,
          1.798,
          447,
          2.323,
          449,
          0.996,
          464,
          3.44,
          475,
          5.123,
          482,
          2.596,
          486,
          5.018,
          491,
          5.207,
          530,
          2.596,
          531,
          2.884,
          538,
          4.061,
          540,
          3.903,
          548,
          4.061,
          614,
          2.754,
          617,
          3.369,
          620,
          1.801,
          629,
          1.93,
          631,
          1.205,
          704,
          5.1,
          877,
          1.512,
          1185,
          3.781,
          1219,
          4.043,
          1497,
          2.971,
          1531,
          4.061,
          1626,
          1.801,
          1780,
          2.971,
          1794,
          4.626,
          1854,
          1.934,
          1879,
          5.443,
          1880,
          1.934,
          1881,
          5.025,
          1882,
          1.69,
          1883,
          3.781,
          1884,
          6.171,
          1885,
          4.411,
          1886,
          3.228,
          1887,
          5.401,
          1888,
          2.451,
          1889,
          2.971,
          1890,
          3.619,
          1891,
          2.767,
          1892,
          3.228,
          1893,
          3.228,
          1894,
          3.228,
          1895,
          3.931,
          1896,
          2.1,
          1897,
          3.931,
          1898,
          2.1,
          1899,
          3.228,
          1900,
          2.1,
          1901,
          2.1,
          1902,
          4.411,
          1903,
          2.1,
          1904,
          5.025,
          1905,
          6.034,
          1906,
          5.025,
          1907,
          3.228,
          1908,
          2.1,
          1909,
          2.1,
          1910,
          3.228,
          1911,
          3.228,
          1912,
          2.1,
          1913,
          2.1,
          1914,
          2.1,
          1915,
          3.228,
          1916,
          2.1,
          1917,
          3.228,
          1918,
          3.931,
          1919,
          2.1,
          1920,
          3.228,
          1921,
          2.1,
          1922,
          2.1,
          1923,
          2.1,
          1924,
          3.228,
          1925,
          1.934,
          1926,
          2.1,
          1927,
          3.931,
          1928,
          2.1,
          1929,
          2.1,
          1930,
          2.1,
          1931,
          2.1,
          1932,
          3.228,
          1933,
          2.1,
          2125,
          4.091,
          2126,
          4.091,
          2127,
          4.091,
          2128,
          4.091,
          2129,
          4.091,
          2130,
          4.091,
          2131,
          4.091,
          2132,
          2.662,
          2133,
          2.662,
          2134,
          2.662,
          2135,
          2.662,
          2136,
          2.662,
          2137,
          2.662,
          2138,
          2.662,
          2139,
          2.662,
          2140,
          2.662,
          2141,
          2.662,
        ],
      ],
      ['title/components/QaComponent.html', [295, 0.41, 376, 1.203]],
      [
        'body/components/QaComponent.html',
        [
          2,
          0.093,
          3,
          0.093,
          4,
          0.07,
          6,
          0.429,
          7,
          0.89,
          10,
          0.788,
          11,
          1.453,
          20,
          0.971,
          29,
          0.677,
          31,
          0.429,
          32,
          0.013,
          33,
          0.688,
          34,
          0.642,
          35,
          0.363,
          38,
          3.614,
          39,
          0.372,
          40,
          1.125,
          42,
          1.053,
          45,
          1.282,
          55,
          2.003,
          68,
          0.985,
          69,
          0.801,
          77,
          0.007,
          98,
          0.709,
          99,
          1.734,
          102,
          0.141,
          103,
          0.141,
          116,
          0.082,
          117,
          0.037,
          167,
          1.752,
          169,
          3.365,
          184,
          0.007,
          198,
          2.083,
          214,
          1.019,
          218,
          1.591,
          228,
          2.88,
          246,
          1.295,
          268,
          2.531,
          295,
          0.755,
          296,
          1.053,
          297,
          1.513,
          298,
          0.953,
          299,
          1.166,
          303,
          1.201,
          304,
          2.434,
          305,
          0.709,
          308,
          2.687,
          310,
          1.796,
          313,
          2.562,
          325,
          0.758,
          326,
          1.513,
          327,
          1.325,
          328,
          2.07,
          329,
          1.166,
          330,
          1.166,
          331,
          0.953,
          332,
          1.166,
          333,
          1.019,
          334,
          1.166,
          335,
          1.019,
          336,
          1.166,
          337,
          0.923,
          338,
          1.96,
          339,
          1.96,
          340,
          1.053,
          341,
          1.166,
          342,
          1.053,
          343,
          1.166,
          344,
          1.053,
          345,
          1.166,
          346,
          1.019,
          347,
          1.053,
          348,
          1.166,
          349,
          1.019,
          350,
          1.166,
          351,
          1.053,
          352,
          1.166,
          353,
          1.369,
          354,
          1.675,
          355,
          1.019,
          356,
          1.053,
          357,
          1.166,
          358,
          1.053,
          359,
          1.712,
          360,
          1.053,
          361,
          1.618,
          362,
          1.166,
          363,
          1.053,
          364,
          1.166,
          365,
          0.985,
          366,
          1.166,
          367,
          0.953,
          368,
          1.053,
          369,
          1.053,
          370,
          1.166,
          371,
          1.053,
          372,
          1.166,
          373,
          1.166,
          374,
          0.985,
          375,
          1.166,
          376,
          1.872,
          377,
          2.269,
          378,
          0.985,
          379,
          1.166,
          380,
          0.985,
          381,
          1.127,
          382,
          1.166,
          540,
          2.563,
          575,
          2.687,
          580,
          3.365,
          699,
          3.614,
          891,
          3.002,
          922,
          3.925,
          1184,
          4.342,
          1538,
          4.304,
          2142,
          3.023,
          2143,
          4.975,
          2144,
          4.975,
          2145,
          6.364,
          2146,
          6.364,
          2147,
          7.018,
          2148,
          6.364,
          2149,
          6.364,
          2150,
          4.975,
          2151,
          3.464,
          2152,
          4.975,
          2153,
          3.464,
          2154,
          3.464,
          2155,
          3.464,
          2156,
          3.464,
          2157,
          5.554,
          2158,
          6.364,
          2159,
          6.364,
          2160,
          6.364,
          2161,
          6.364,
          2162,
          6.364,
          2163,
          6.364,
          2164,
          6.364,
          2165,
          6.364,
          2166,
          6.364,
          2167,
          3.464,
          2168,
          3.464,
          2169,
          3.464,
          2170,
          3.464,
          2171,
          4.975,
          2172,
          4.975,
        ],
      ],
      ['title/modules/QaModule.html', [651, 1.055, 2173, 2.971]],
      [
        'body/modules/QaModule.html',
        [
          2,
          0.149,
          3,
          0.149,
          4,
          0.113,
          32,
          0.013,
          77,
          0.01,
          102,
          0.337,
          103,
          0.225,
          116,
          0.161,
          117,
          0.06,
          178,
          1.577,
          184,
          0.01,
          265,
          2.073,
          325,
          1.212,
          335,
          2.363,
          376,
          2.363,
          574,
          3.508,
          632,
          2.967,
          651,
          1.9,
          653,
          2.15,
          654,
          1.931,
          655,
          2.614,
          661,
          4.562,
          663,
          3.212,
          669,
          3.082,
          701,
          4.606,
          814,
          2.41,
          988,
          5.434,
          993,
          3.508,
          1707,
          3.518,
          2173,
          6.111,
          2174,
          4.837,
          2175,
          4.837,
          2176,
          5.543,
          2177,
          5.543,
          2178,
          5.543,
          2179,
          5.543,
          2180,
          5.543,
        ],
      ],
      ['title/pipes/SafeHtmlPipe.html', [167, 1.126, 2181, 2.767]],
      [
        'body/pipes/SafeHtmlPipe.html',
        [
          2,
          0.142,
          3,
          0.142,
          4,
          0.107,
          10,
          0.652,
          11,
          1.18,
          29,
          0.482,
          31,
          0.652,
          32,
          0.013,
          33,
          0.598,
          34,
          0.736,
          35,
          0.552,
          39,
          0.593,
          42,
          1.679,
          52,
          2.486,
          68,
          1.307,
          69,
          1.216,
          77,
          0.01,
          102,
          0.268,
          103,
          0.214,
          116,
          0.124,
          117,
          0.057,
          144,
          1.836,
          167,
          1.984,
          184,
          0.01,
          200,
          3.113,
          223,
          2.044,
          303,
          1.272,
          305,
          1.079,
          326,
          2.297,
          513,
          3.156,
          515,
          4.417,
          578,
          3.564,
          579,
          3.156,
          634,
          3.344,
          1158,
          3.156,
          1160,
          3.4,
          1187,
          3.344,
          2181,
          4.463,
          2182,
          5.76,
          2183,
          4.599,
          2184,
          7.778,
          2185,
          5.27,
          2186,
          7.207,
          2187,
          7.207,
          2188,
          7.207,
          2189,
          7.207,
          2190,
          6.6,
          2191,
          6.6,
          2192,
          5.27,
          2193,
          5.27,
          2194,
          5.27,
          2195,
          4.599,
          2196,
          5.27,
          2197,
          4.157,
          2198,
          5.27,
          2199,
          5.27,
          2200,
          5.27,
          2201,
          5.27,
          2202,
          5.27,
        ],
      ],
      ['title/injectables/ServiceWorkerService.html', [0, 0.635, 568, 2.767]],
      [
        'body/injectables/ServiceWorkerService.html',
        [
          0,
          0.916,
          2,
          0.095,
          3,
          0.095,
          4,
          0.072,
          6,
          0.438,
          7,
          0.904,
          8,
          2.082,
          10,
          0.626,
          11,
          1.436,
          20,
          0.843,
          28,
          1.955,
          29,
          0.703,
          31,
          0.438,
          32,
          0.013,
          33,
          0.294,
          34,
          0.588,
          35,
          0.371,
          39,
          0.48,
          40,
          1.453,
          61,
          3.033,
          68,
          1.167,
          69,
          0.949,
          70,
          1.657,
          72,
          5.364,
          76,
          1.701,
          77,
          0.008,
          95,
          3.212,
          97,
          3.166,
          102,
          0.288,
          103,
          0.144,
          107,
          1.425,
          114,
          1.539,
          116,
          0.084,
          117,
          0.038,
          128,
          1.696,
          144,
          2.369,
          175,
          3.531,
          184,
          0.008,
          187,
          2.198,
          206,
          1.603,
          207,
          1.481,
          218,
          1.128,
          246,
          1.325,
          277,
          1.481,
          278,
          1.603,
          337,
          0.943,
          432,
          3.671,
          438,
          1.824,
          447,
          2.87,
          449,
          1.891,
          476,
          4.781,
          483,
          1.603,
          488,
          4.235,
          490,
          2.87,
          494,
          2.385,
          498,
          4.08,
          505,
          2.572,
          529,
          4.412,
          553,
          3.037,
          559,
          3.419,
          567,
          5.577,
          568,
          3.419,
          589,
          2.011,
          606,
          3.091,
          609,
          3.033,
          679,
          2.794,
          680,
          4.781,
          690,
          5.135,
          722,
          2.572,
          725,
          4.235,
          891,
          3.433,
          892,
          4.348,
          909,
          4.412,
          931,
          3.988,
          971,
          3.091,
          973,
          2.247,
          1091,
          3.671,
          1166,
          4.669,
          1198,
          5.611,
          1201,
          5.145,
          1206,
          3.091,
          1247,
          3.671,
          1252,
          3.091,
          1401,
          3.091,
          1765,
          5.611,
          1799,
          3.091,
          1871,
          3.091,
          1948,
          2.794,
          2203,
          6.785,
          2204,
          3.091,
          2205,
          6.429,
          2206,
          6.429,
          2207,
          6.429,
          2208,
          6.429,
          2209,
          3.541,
          2210,
          6.429,
          2211,
          5.055,
          2212,
          3.541,
          2213,
          7.07,
          2214,
          3.541,
          2215,
          3.541,
          2216,
          5.055,
          2217,
          3.541,
          2218,
          3.541,
          2219,
          3.541,
          2220,
          3.541,
          2221,
          5.055,
          2222,
          3.541,
          2223,
          3.541,
          2224,
          3.541,
          2225,
          3.541,
          2226,
          5.055,
          2227,
          5.895,
          2228,
          3.541,
          2229,
          3.541,
          2230,
          5.055,
          2231,
          5.055,
          2232,
          3.541,
          2233,
          3.541,
          2234,
          3.541,
          2235,
          3.541,
          2236,
          3.541,
          2237,
          3.541,
          2238,
          3.541,
          2239,
          3.541,
          2240,
          3.091,
          2241,
          3.541,
          2242,
          3.541,
          2243,
          3.541,
          2244,
          3.541,
          2245,
          3.541,
          2246,
          3.541,
        ],
      ],
      ['title/interfaces/Settings.html', [128, 1.021, 629, 1.93]],
      [
        'body/interfaces/Settings.html',
        [
          0,
          0.994,
          2,
          0.135,
          3,
          0.135,
          4,
          0.102,
          6,
          0.622,
          7,
          0.898,
          8,
          1.294,
          11,
          1.145,
          22,
          4.063,
          28,
          2.143,
          29,
          0.586,
          32,
          0.013,
          39,
          0.478,
          42,
          1.355,
          48,
          2.183,
          61,
          2.369,
          63,
          2.369,
          69,
          0.808,
          76,
          1.69,
          77,
          0.01,
          84,
          2.022,
          95,
          2.1,
          98,
          1.028,
          101,
          2.897,
          102,
          0.312,
          103,
          0.204,
          104,
          2.852,
          114,
          2.783,
          116,
          0.119,
          117,
          0.054,
          118,
          1.477,
          128,
          2.072,
          151,
          1.647,
          184,
          0.01,
          192,
          3.458,
          211,
          1.527,
          218,
          1.225,
          221,
          2.587,
          238,
          3.008,
          239,
          2.852,
          255,
          3.835,
          277,
          3.103,
          278,
          3.19,
          468,
          4.33,
          470,
          3.396,
          497,
          3.647,
          552,
          2.473,
          586,
          3.396,
          589,
          2.852,
          615,
          3.396,
          616,
          3.962,
          617,
          3.396,
          619,
          4.383,
          622,
          4.383,
          623,
          4.383,
          626,
          3.396,
          627,
          3.962,
          628,
          4.383,
          629,
          3.02,
          630,
          4.383,
          631,
          2.273,
          632,
          2.022,
          633,
          4.33,
          634,
          3.187,
          635,
          4.383,
          636,
          4.383,
          637,
          4.383,
          638,
          5.588,
          639,
          4.383,
          640,
          4.383,
          641,
          4.383,
          642,
          4.383,
          643,
          4.383,
          644,
          4.383,
          645,
          4.383,
          646,
          4.383,
          647,
          4.383,
          648,
          3.647,
          649,
          4.383,
          650,
          4.383,
          2247,
          5.022,
        ],
      ],
      ['title/modules/SharedModule.html', [651, 1.055, 1070, 2.596]],
      [
        'body/modules/SharedModule.html',
        [
          2,
          0.112,
          3,
          0.112,
          4,
          0.085,
          32,
          0.013,
          39,
          0.311,
          77,
          0.009,
          102,
          0.334,
          103,
          0.169,
          116,
          0.17,
          117,
          0.045,
          151,
          0.972,
          167,
          1.768,
          178,
          1.183,
          184,
          0.009,
          265,
          1.555,
          325,
          0.91,
          327,
          1.711,
          378,
          2.279,
          380,
          2.279,
          390,
          1.962,
          632,
          2.586,
          651,
          1.457,
          653,
          1.613,
          654,
          1.449,
          655,
          3.03,
          663,
          2.667,
          665,
          1.882,
          669,
          2.907,
          721,
          2.639,
          814,
          2.458,
          993,
          2.913,
          1070,
          5.429,
          1074,
          3.824,
          1092,
          2.813,
          1156,
          5.418,
          1182,
          5.418,
          1244,
          5.418,
          1264,
          5.418,
          1429,
          3.211,
          1439,
          3.63,
          1440,
          3.63,
          2101,
          5.418,
          2181,
          5.418,
          2248,
          3.63,
          2249,
          3.63,
          2250,
          3.63,
          2251,
          5.418,
          2252,
          5.418,
          2253,
          3.63,
          2254,
          4.935,
          2255,
          5.654,
          2256,
          4.159,
          2257,
          4.159,
          2258,
          4.159,
          2259,
          4.159,
          2260,
          4.159,
          2261,
          4.159,
          2262,
          4.159,
          2263,
          4.159,
          2264,
          4.159,
          2265,
          4.159,
          2266,
          4.159,
          2267,
          4.159,
          2268,
          4.159,
          2269,
          5.607,
        ],
      ],
      ['title/modules/SiteModule.html', [651, 1.055, 661, 2.323]],
      [
        'body/modules/SiteModule.html',
        [
          2,
          0.146,
          3,
          0.146,
          4,
          0.11,
          32,
          0.013,
          39,
          0.405,
          77,
          0.01,
          102,
          0.329,
          103,
          0.22,
          110,
          2.919,
          116,
          0.18,
          117,
          0.058,
          178,
          1.541,
          184,
          0.01,
          234,
          3.812,
          265,
          2.026,
          295,
          0.673,
          325,
          1.185,
          390,
          2.555,
          632,
          2.702,
          651,
          1.73,
          653,
          2.101,
          654,
          1.887,
          655,
          3.167,
          661,
          4.742,
          663,
          3.167,
          665,
          2.451,
          669,
          3.302,
          814,
          2.354,
          993,
          3.459,
          1065,
          4.934,
          1070,
          5.324,
          1071,
          5.324,
          1074,
          4.54,
          1075,
          4.727,
          1092,
          3.663,
          2270,
          4.727,
          2271,
          5.416,
          2272,
          4.727,
          2273,
          5.416,
        ],
      ],
      ['title/pipes/SortPipe.html', [167, 1.126, 2251, 2.767]],
      [
        'body/pipes/SortPipe.html',
        [
          2,
          0.143,
          3,
          0.143,
          4,
          0.108,
          10,
          0.659,
          29,
          0.487,
          31,
          0.659,
          32,
          0.013,
          33,
          0.647,
          34,
          0.487,
          35,
          0.558,
          39,
          0.496,
          42,
          1.532,
          51,
          1.73,
          68,
          1.053,
          69,
          0.856,
          77,
          0.01,
          102,
          0.216,
          103,
          0.216,
          116,
          0.126,
          117,
          0.057,
          151,
          1.551,
          167,
          1.992,
          184,
          0.01,
          200,
          2.51,
          223,
          2.575,
          303,
          1.284,
          305,
          1.089,
          427,
          5.238,
          943,
          3.977,
          1160,
          3.42,
          1270,
          5.795,
          1272,
          6.615,
          1275,
          5.795,
          1474,
          6.615,
          2251,
          4.49,
          2274,
          4.643,
          2275,
          8.227,
          2276,
          7.8,
          2277,
          7.238,
          2278,
          5.32,
          2279,
          7.58,
          2280,
          5.32,
          2281,
          6.64,
          2282,
          6.64,
          2283,
          5.32,
          2284,
          5.32,
          2285,
          5.32,
          2286,
          5.32,
          2287,
          5.32,
        ],
      ],
      ['title/pipes/StringPipe.html', [167, 1.126, 2252, 2.767]],
      [
        'body/pipes/StringPipe.html',
        [
          2,
          0.155,
          3,
          0.155,
          4,
          0.117,
          10,
          0.715,
          29,
          0.528,
          31,
          0.715,
          32,
          0.013,
          33,
          0.623,
          34,
          0.528,
          35,
          0.605,
          39,
          0.561,
          42,
          1.717,
          51,
          1.878,
          55,
          3.139,
          69,
          1.124,
          77,
          0.011,
          102,
          0.235,
          103,
          0.235,
          116,
          0.136,
          117,
          0.062,
          167,
          2.066,
          184,
          0.011,
          200,
          2.724,
          240,
          3.439,
          303,
          1.394,
          305,
          1.182,
          324,
          5.071,
          411,
          3.279,
          1158,
          4.182,
          1160,
          3.597,
          1161,
          5.039,
          1255,
          6.152,
          2252,
          4.722,
          2288,
          5.039,
          2289,
          7.506,
          2290,
          5.774,
          2291,
          5.774,
          2292,
          5.774,
        ],
      ],
      ['title/classes/StringUtils.html', [117, 0.044, 815, 2.767]],
      [
        'body/classes/StringUtils.html',
        [
          2,
          0.113,
          3,
          0.113,
          4,
          0.085,
          6,
          0.52,
          10,
          0.705,
          29,
          0.682,
          31,
          0.924,
          32,
          0.013,
          33,
          0.619,
          34,
          0.682,
          35,
          0.782,
          39,
          0.557,
          42,
          1.808,
          51,
          2.426,
          68,
          0.832,
          69,
          0.676,
          77,
          0.009,
          78,
          3.566,
          116,
          0.099,
          117,
          0.061,
          118,
          1.235,
          144,
          1.464,
          151,
          1.617,
          170,
          4.969,
          184,
          0.009,
          205,
          4.592,
          215,
          2.841,
          238,
          2.516,
          239,
          2.385,
          240,
          3.18,
          283,
          2.516,
          385,
          2.841,
          386,
          4.135,
          387,
          2.933,
          390,
          3.839,
          407,
          3.739,
          435,
          2.516,
          438,
          3.02,
          449,
          1.571,
          455,
          3.314,
          456,
          4.969,
          520,
          2.841,
          524,
          5.028,
          751,
          5.094,
          794,
          6.018,
          815,
          3.85,
          943,
          4.147,
          1134,
          3.051,
          1282,
          4.969,
          1338,
          3.666,
          1888,
          3.41,
          1889,
          4.69,
          1891,
          2.841,
          2293,
          6.658,
          2294,
          5.693,
          2295,
          5.693,
          2296,
          4.969,
          2297,
          4.969,
          2298,
          5.693,
          2299,
          4.201,
          2300,
          6.923,
          2301,
          4.201,
          2302,
          4.201,
          2303,
          4.201,
          2304,
          4.201,
          2305,
          4.201,
          2306,
          4.201,
          2307,
          5.693,
          2308,
          4.201,
          2309,
          4.201,
          2310,
          4.201,
          2311,
          4.201,
          2312,
          4.201,
          2313,
          4.201,
          2314,
          4.201,
          2315,
          5.693,
          2316,
          4.201,
          2317,
          5.693,
          2318,
          6.923,
          2319,
          4.201,
          2320,
          4.201,
          2321,
          4.201,
          2322,
          3.666,
          2323,
          4.201,
          2324,
          3.666,
          2325,
          4.201,
          2326,
          3.666,
          2327,
          4.201,
          2328,
          5.693,
          2329,
          3.666,
          2330,
          4.201,
          2331,
          4.201,
          2332,
          5.693,
          2333,
          6.458,
        ],
      ],
      ['title/pipes/TextCasePipe.html', [167, 1.126, 1429, 2.323]],
      [
        'body/pipes/TextCasePipe.html',
        [
          2,
          0.15,
          3,
          0.15,
          4,
          0.114,
          10,
          0.692,
          29,
          0.511,
          31,
          0.692,
          32,
          0.013,
          33,
          0.614,
          34,
          0.724,
          35,
          0.586,
          39,
          0.601,
          42,
          1.632,
          68,
          1.106,
          69,
          1.191,
          77,
          0.01,
          78,
          2.879,
          102,
          0.227,
          103,
          0.227,
          116,
          0.132,
          117,
          0.06,
          127,
          2.091,
          151,
          1.306,
          167,
          2.037,
          184,
          0.01,
          200,
          2.637,
          303,
          1.349,
          305,
          1.144,
          411,
          3.174,
          513,
          3.348,
          515,
          4.201,
          1158,
          4.1,
          1160,
          3.526,
          1429,
          3.887,
          1513,
          5.4,
          2334,
          5.974,
          2335,
          4.409,
          2336,
          6.73,
          2337,
          6.73,
          2338,
          6.73,
          2339,
          4.878,
          2340,
          4.409,
          2341,
          4.878,
          2342,
          5.974,
          2343,
          4.878,
          2344,
          4.878,
        ],
      ],
      ['title/pipes/TextCasePipe-1.html', [167, 0.939, 449, 1.276, 1429, 1.938]],
      [
        'body/pipes/TextCasePipe-1.html',
        [
          2,
          0.15,
          3,
          0.15,
          4,
          0.114,
          10,
          0.692,
          29,
          0.511,
          31,
          0.692,
          32,
          0.013,
          33,
          0.614,
          34,
          0.724,
          35,
          0.586,
          39,
          0.601,
          42,
          1.632,
          68,
          1.106,
          69,
          1.191,
          77,
          0.01,
          78,
          2.879,
          102,
          0.227,
          103,
          0.227,
          116,
          0.132,
          117,
          0.06,
          127,
          2.091,
          151,
          1.306,
          167,
          2.037,
          184,
          0.01,
          200,
          2.637,
          303,
          1.349,
          305,
          1.144,
          411,
          3.174,
          513,
          3.348,
          515,
          4.201,
          1158,
          4.1,
          1160,
          3.526,
          1429,
          3.887,
          1513,
          5.4,
          2335,
          4.409,
          2336,
          6.73,
          2337,
          6.73,
          2338,
          6.73,
          2339,
          4.878,
          2340,
          4.409,
          2341,
          4.878,
          2342,
          5.974,
          2343,
          4.878,
          2344,
          4.878,
          2345,
          5.974,
        ],
      ],
      ['title/injectables/UIModalService.html', [0, 0.635, 892, 2.767]],
      [
        'body/injectables/UIModalService.html',
        [
          0,
          0.834,
          2,
          0.081,
          3,
          0.081,
          4,
          0.061,
          6,
          0.372,
          7,
          0.802,
          8,
          1.641,
          10,
          0.556,
          11,
          1.359,
          20,
          0.502,
          24,
          2.905,
          28,
          1.809,
          29,
          0.611,
          31,
          0.556,
          32,
          0.013,
          33,
          0.528,
          34,
          0.65,
          35,
          0.563,
          39,
          0.444,
          40,
          0.68,
          42,
          0.637,
          48,
          1.951,
          49,
          1.951,
          51,
          0.978,
          68,
          1.062,
          69,
          0.864,
          70,
          1.383,
          73,
          2.548,
          76,
          1.012,
          77,
          0.007,
          78,
          2.312,
          80,
          3.243,
          84,
          2.562,
          94,
          1.909,
          96,
          3.035,
          99,
          2.073,
          100,
          3.035,
          101,
          1.361,
          102,
          0.289,
          103,
          0.122,
          106,
          1.419,
          107,
          1.211,
          115,
          1.708,
          116,
          0.071,
          117,
          0.058,
          118,
          1.872,
          128,
          1.845,
          144,
          1.564,
          145,
          2.16,
          151,
          0.703,
          163,
          1.258,
          184,
          0.007,
          187,
          1.308,
          206,
          1.361,
          207,
          1.258,
          211,
          0.914,
          218,
          0.576,
          222,
          1.909,
          223,
          1.167,
          268,
          2.333,
          295,
          0.538,
          337,
          1.778,
          359,
          0.885,
          367,
          1.838,
          368,
          0.914,
          390,
          2.807,
          403,
          2.034,
          404,
          1.802,
          407,
          2.423,
          418,
          3.264,
          419,
          2.034,
          440,
          3.379,
          463,
          2.848,
          464,
          2.423,
          470,
          3.63,
          483,
          2.881,
          531,
          2.902,
          532,
          3.813,
          552,
          2.21,
          553,
          3.811,
          573,
          1.909,
          609,
          2.117,
          614,
          2.21,
          626,
          2.034,
          631,
          2.429,
          654,
          1.048,
          699,
          3.259,
          743,
          2.034,
          821,
          2.848,
          877,
          1.708,
          891,
          3.981,
          892,
          3.035,
          912,
          5.193,
          928,
          1.625,
          929,
          1.802,
          973,
          4.237,
          976,
          3.63,
          1221,
          2.373,
          1318,
          4.305,
          1734,
          3.898,
          1764,
          2.185,
          1778,
          5.246,
          1779,
          4.849,
          1782,
          5.522,
          1784,
          5.022,
          1785,
          5.022,
          1813,
          2.373,
          1935,
          5.193,
          1936,
          6.342,
          1937,
          5.193,
          1941,
          2.625,
          1943,
          5.555,
          1946,
          4.684,
          1948,
          4.694,
          1949,
          3.916,
          1952,
          2.185,
          1953,
          2.373,
          1954,
          2.373,
          1955,
          3.54,
          1956,
          2.625,
          1957,
          2.625,
          1958,
          2.625,
          1959,
          2.625,
          1966,
          2.625,
          1967,
          2.625,
          1969,
          3.916,
          1970,
          2.625,
          1971,
          2.625,
          1972,
          3.916,
          1973,
          2.625,
          1974,
          2.625,
          1975,
          3.916,
          1976,
          2.625,
          1978,
          2.625,
          1979,
          2.625,
          1980,
          3.916,
          2346,
          2.373,
          2347,
          3.008,
          2348,
          5.95,
          2349,
          3.008,
          2350,
          4.487,
          2351,
          3.008,
          2352,
          3.008,
          2353,
          3.008,
          2354,
          3.008,
          2355,
          3.008,
          2356,
          2.625,
          2357,
          3.008,
          2358,
          3.008,
          2359,
          3.008,
          2360,
          4.487,
          2361,
          3.008,
          2362,
          3.008,
          2363,
          3.008,
        ],
      ],
      ['title/injectables/UIStoreService.html', [0, 0.635, 484, 2.596]],
      [
        'body/injectables/UIStoreService.html',
        [
          0,
          0.803,
          2,
          0.076,
          3,
          0.076,
          4,
          0.057,
          6,
          0.35,
          7,
          0.766,
          8,
          1.799,
          10,
          0.53,
          11,
          1.464,
          20,
          0.715,
          24,
          2.739,
          28,
          1.754,
          29,
          0.686,
          31,
          0.885,
          32,
          0.013,
          33,
          0.614,
          34,
          0.686,
          35,
          0.749,
          39,
          0.544,
          40,
          1.475,
          42,
          1.566,
          48,
          1.862,
          49,
          1.862,
          51,
          1.393,
          62,
          2.054,
          63,
          1.334,
          68,
          0.848,
          69,
          0.69,
          77,
          0.006,
          97,
          2.11,
          99,
          1.493,
          101,
          1.939,
          102,
          0.291,
          103,
          0.115,
          106,
          1.334,
          110,
          1.23,
          114,
          1.23,
          115,
          1.606,
          116,
          0.067,
          117,
          0.03,
          118,
          1.992,
          126,
          2.433,
          127,
          2.44,
          128,
          1.627,
          144,
          1.802,
          145,
          3.213,
          151,
          1.001,
          163,
          2.162,
          178,
          0.805,
          184,
          0.006,
          188,
          1.694,
          198,
          1.069,
          206,
          1.28,
          207,
          1.183,
          223,
          1.662,
          252,
          4.411,
          268,
          2.836,
          277,
          1.183,
          278,
          1.28,
          286,
          2.054,
          287,
          2.611,
          288,
          2.054,
          289,
          2.231,
          324,
          2.054,
          387,
          1.457,
          401,
          3.739,
          402,
          2.719,
          407,
          3.116,
          418,
          2.508,
          423,
          2.897,
          438,
          1.546,
          449,
          1.058,
          463,
          2.719,
          483,
          3.296,
          484,
          2.719,
          493,
          4.502,
          519,
          5.068,
          520,
          5.308,
          522,
          3.38,
          523,
          2.231,
          524,
          4.921,
          525,
          2.468,
          527,
          2.231,
          531,
          2.248,
          540,
          2.207,
          553,
          2.207,
          558,
          5.035,
          631,
          1.939,
          648,
          2.054,
          654,
          0.985,
          751,
          4.551,
          758,
          3.739,
          791,
          3.111,
          815,
          1.913,
          820,
          2.054,
          821,
          2.719,
          851,
          2.231,
          858,
          2.231,
          859,
          2.468,
          860,
          5.035,
          861,
          2.468,
          863,
          2.468,
          928,
          2.793,
          929,
          1.694,
          1048,
          2.897,
          1225,
          3.111,
          1255,
          2.231,
          1355,
          3.739,
          1453,
          4.19,
          1455,
          3.739,
          1463,
          3.739,
          1562,
          3.739,
          1582,
          3.38,
          1587,
          3.739,
          1589,
          4.832,
          1590,
          5.345,
          1623,
          2.468,
          1778,
          3.901,
          1952,
          2.054,
          2240,
          3.739,
          2296,
          3.739,
          2297,
          3.739,
          2356,
          2.468,
          2364,
          2.468,
          2365,
          4.284,
          2366,
          4.284,
          2367,
          4.284,
          2368,
          5.769,
          2369,
          4.737,
          2370,
          4.284,
          2371,
          2.828,
          2372,
          4.284,
          2373,
          2.828,
          2374,
          4.284,
          2375,
          2.828,
          2376,
          4.284,
          2377,
          2.828,
          2378,
          2.828,
          2379,
          4.284,
          2380,
          6.979,
          2381,
          2.828,
          2382,
          4.284,
          2383,
          2.828,
          2384,
          4.284,
          2385,
          6.199,
          2386,
          5.769,
          2387,
          2.828,
          2388,
          6.523,
          2389,
          4.284,
          2390,
          5.035,
          2391,
          4.284,
          2392,
          2.828,
          2393,
          4.284,
          2394,
          4.284,
          2395,
          2.828,
          2396,
          2.828,
          2397,
          2.828,
          2398,
          5.769,
          2399,
          2.828,
          2400,
          2.828,
          2401,
          2.828,
          2402,
          2.828,
          2403,
          2.828,
          2404,
          2.828,
          2405,
          2.828,
          2406,
          2.828,
          2407,
          2.828,
          2408,
          2.828,
          2409,
          2.828,
          2410,
          2.828,
          2411,
          2.828,
          2412,
          2.828,
          2413,
          4.284,
          2414,
          2.828,
          2415,
          2.828,
          2416,
          4.284,
          2417,
          2.828,
          2418,
          2.828,
        ],
      ],
      ['title/injectables/UiSelectorsService.html', [0, 0.635, 2369, 2.971]],
      [
        'body/injectables/UiSelectorsService.html',
        [
          0,
          1.092,
          2,
          0.135,
          3,
          0.135,
          4,
          0.102,
          6,
          0.619,
          7,
          1.141,
          11,
          1.514,
          20,
          0.834,
          24,
          2.826,
          29,
          0.728,
          31,
          0.619,
          32,
          0.013,
          33,
          0.415,
          34,
          0.457,
          35,
          0.524,
          42,
          1.351,
          68,
          1.55,
          69,
          1.26,
          77,
          0.01,
          102,
          0.286,
          103,
          0.203,
          106,
          2.358,
          110,
          2.173,
          115,
          2.839,
          116,
          0.118,
          117,
          0.054,
          184,
          0.01,
          188,
          2.995,
          206,
          2.262,
          207,
          2.09,
          209,
          6.547,
          211,
          1.52,
          493,
          5.382,
          891,
          3.495,
          1453,
          5.382,
          1556,
          5.846,
          2369,
          4.636,
          2390,
          5.571,
          2419,
          4.363,
          2420,
          7.41,
          2421,
          7.41,
          2422,
          6.384,
          2423,
          6.384,
          2424,
          4.999,
          2425,
          6.384,
          2426,
          4.999,
          2427,
          6.384,
          2428,
          4.999,
          2429,
          6.384,
          2430,
          4.999,
          2431,
          6.384,
          2432,
          4.999,
          2433,
          6.384,
        ],
      ],
      ['title/modules/VendorModule.html', [651, 1.055, 1071, 2.596]],
      [
        'body/modules/VendorModule.html',
        [
          2,
          0.151,
          3,
          0.151,
          4,
          0.114,
          32,
          0.013,
          77,
          0.01,
          102,
          0.332,
          103,
          0.229,
          105,
          2.654,
          116,
          0.162,
          117,
          0.06,
          184,
          0.01,
          632,
          2.265,
          651,
          1.45,
          654,
          1.961,
          665,
          3.111,
          669,
          3.111,
          673,
          6.477,
          681,
          4.439,
          814,
          2.446,
          928,
          3.039,
          929,
          3.371,
          993,
          3.541,
          1071,
          4.362,
          1107,
          4.087,
          1614,
          3.806,
          2434,
          5.627,
          2435,
          7.422,
          2436,
          7.422,
          2437,
          6.874,
          2438,
          7.422,
          2439,
          7.422,
          2440,
          7.422,
          2441,
          7.422,
          2442,
          7.422,
          2443,
          7.422,
          2444,
          7.422,
          2445,
          7.422,
          2446,
          5.627,
          2447,
          5.627,
          2448,
          5.627,
        ],
      ],
      ['title/interfaces/Window.html', [531, 1.779, 629, 1.93]],
      [
        'body/interfaces/Window.html',
        [
          2,
          0.056,
          3,
          0.091,
          4,
          0.069,
          6,
          0.259,
          7,
          0.605,
          8,
          1.559,
          10,
          0.259,
          11,
          0.875,
          20,
          0.349,
          32,
          0.013,
          33,
          0.174,
          34,
          0.39,
          35,
          0.7,
          39,
          0.572,
          42,
          1.585,
          45,
          1.098,
          55,
          0.843,
          57,
          1.652,
          61,
          1.597,
          68,
          0.969,
          69,
          0.865,
          70,
          1.482,
          76,
          1.935,
          77,
          0.005,
          80,
          2.046,
          92,
          1.189,
          95,
          0.876,
          97,
          1.031,
          99,
          1.872,
          102,
          0.199,
          103,
          0.085,
          116,
          0.049,
          117,
          0.022,
          118,
          1.439,
          125,
          0.988,
          127,
          2.15,
          128,
          0.522,
          144,
          1.18,
          151,
          1.255,
          167,
          1.479,
          184,
          0.006,
          198,
          0.522,
          205,
          1.329,
          218,
          0.401,
          219,
          1.189,
          220,
          1.521,
          228,
          0.948,
          234,
          1.922,
          235,
          2.534,
          240,
          3.834,
          246,
          2.355,
          258,
          1.521,
          259,
          1.521,
          268,
          0.91,
          295,
          0.427,
          297,
          1.029,
          303,
          0.506,
          304,
          1.415,
          306,
          1.189,
          307,
          1.189,
          308,
          1.131,
          310,
          0.756,
          313,
          0.843,
          318,
          1.189,
          325,
          0.74,
          326,
          0.637,
          328,
          0.681,
          333,
          0.616,
          394,
          2.954,
          411,
          1.922,
          418,
          1.852,
          423,
          4.399,
          433,
          1.416,
          435,
          2.931,
          438,
          1.766,
          449,
          1.83,
          452,
          2.954,
          463,
          2.148,
          464,
          1.828,
          488,
          2.028,
          490,
          1.189,
          494,
          0.988,
          513,
          1.254,
          515,
          2.779,
          531,
          1.852,
          559,
          1.416,
          565,
          4.772,
          575,
          1.131,
          589,
          2.419,
          609,
          0.988,
          629,
          1.597,
          632,
          0.843,
          633,
          1.416,
          651,
          0.54,
          665,
          1.532,
          686,
          1.652,
          690,
          2.459,
          814,
          0.91,
          873,
          1.827,
          917,
          5.83,
          943,
          2.028,
          945,
          1.521,
          953,
          1.652,
          970,
          4.091,
          996,
          6.723,
          999,
          1.827,
          1004,
          5.28,
          1006,
          1.827,
          1020,
          2.954,
          1032,
          1.827,
          1034,
          3.361,
          1048,
          2.289,
          1063,
          1.827,
          1126,
          2.671,
          1141,
          1.652,
          1145,
          2.954,
          1150,
          2.671,
          1165,
          2.028,
          1169,
          1.254,
          1185,
          1.416,
          1187,
          1.329,
          1216,
          1.827,
          1246,
          5.27,
          1247,
          1.521,
          1277,
          1.827,
          1300,
          2.671,
          1301,
          1.652,
          1303,
          3.361,
          1308,
          1.827,
          1324,
          2.954,
          1326,
          1.827,
          1328,
          1.827,
          1333,
          4.689,
          1344,
          2.954,
          1347,
          1.329,
          1371,
          1.827,
          1393,
          5.28,
          1397,
          1.521,
          1399,
          1.827,
          1447,
          1.827,
          1504,
          2.289,
          1589,
          1.416,
          1790,
          1.652,
          1888,
          2.028,
          1891,
          1.416,
          1960,
          1.827,
          2058,
          2.954,
          2115,
          1.827,
          2195,
          1.827,
          2197,
          1.652,
          2254,
          1.827,
          2449,
          1.827,
          2450,
          4.894,
          2451,
          2.094,
          2452,
          2.094,
          2453,
          2.094,
          2454,
          2.094,
          2455,
          1.827,
          2456,
          2.094,
          2457,
          2.954,
          2458,
          2.094,
          2459,
          2.094,
          2460,
          2.094,
          2461,
          2.094,
          2462,
          2.094,
          2463,
          2.094,
          2464,
          2.094,
          2465,
          2.094,
          2466,
          2.094,
          2467,
          2.094,
          2468,
          2.094,
          2469,
          2.094,
          2470,
          2.094,
          2471,
          2.094,
          2472,
          2.094,
          2473,
          2.094,
          2474,
          2.094,
          2475,
          2.094,
          2476,
          2.094,
          2477,
          2.094,
          2478,
          2.094,
          2479,
          2.094,
          2480,
          7.078,
          2481,
          2.094,
          2482,
          3.385,
          2483,
          2.094,
          2484,
          3.385,
          2485,
          2.094,
          2486,
          2.094,
          2487,
          2.094,
          2488,
          2.094,
          2489,
          2.094,
          2490,
          6.05,
          2491,
          4.894,
          2492,
          4.689,
          2493,
          3.385,
          2494,
          3.385,
          2495,
          2.094,
          2496,
          2.094,
          2497,
          2.094,
          2498,
          2.094,
          2499,
          4.894,
          2500,
          2.094,
          2501,
          2.094,
          2502,
          2.094,
          2503,
          3.385,
          2504,
          3.385,
          2505,
          2.094,
          2506,
          2.094,
          2507,
          2.094,
          2508,
          2.094,
          2509,
          2.094,
          2510,
          2.094,
          2511,
          2.094,
          2512,
          2.094,
          2513,
          2.094,
          2514,
          2.094,
          2515,
          2.094,
          2516,
          4.261,
          2517,
          3.385,
          2518,
          2.094,
          2519,
          2.094,
          2520,
          2.094,
          2521,
          2.094,
          2522,
          4.261,
          2523,
          3.385,
          2524,
          1.827,
          2525,
          2.094,
          2526,
          4.261,
          2527,
          4.261,
          2528,
          3.385,
          2529,
          2.094,
          2530,
          3.385,
          2531,
          1.827,
          2532,
          2.094,
          2533,
          2.094,
          2534,
          2.094,
          2535,
          2.094,
          2536,
          2.094,
          2537,
          2.094,
          2538,
          2.094,
          2539,
          2.094,
          2540,
          2.094,
          2541,
          2.094,
          2542,
          2.094,
          2543,
          2.094,
          2544,
          5.373,
          2545,
          4.894,
          2546,
          3.385,
          2547,
          3.385,
          2548,
          3.385,
          2549,
          3.385,
          2550,
          3.385,
          2551,
          2.094,
          2552,
          2.094,
          2553,
          3.385,
          2554,
          2.094,
          2555,
          3.385,
          2556,
          2.094,
          2557,
          2.094,
          2558,
          2.094,
          2559,
          3.385,
          2560,
          2.094,
          2561,
          2.094,
          2562,
          2.094,
          2563,
          2.094,
          2564,
          2.094,
          2565,
          2.094,
          2566,
          2.094,
          2567,
          2.094,
          2568,
          1.827,
          2569,
          4.894,
          2570,
          2.094,
          2571,
          2.094,
          2572,
          2.094,
          2573,
          2.094,
          2574,
          2.094,
          2575,
          3.385,
          2576,
          4.261,
          2577,
          2.094,
          2578,
          2.094,
          2579,
          2.094,
          2580,
          2.094,
          2581,
          2.094,
          2582,
          4.261,
          2583,
          3.385,
          2584,
          1.827,
          2585,
          2.094,
          2586,
          2.094,
          2587,
          2.094,
          2588,
          3.385,
          2589,
          6.297,
          2590,
          3.385,
          2591,
          3.385,
          2592,
          3.385,
          2593,
          2.094,
          2594,
          2.094,
          2595,
          2.094,
          2596,
          5.748,
          2597,
          2.094,
          2598,
          2.094,
          2599,
          2.094,
          2600,
          2.094,
          2601,
          2.094,
          2602,
          2.094,
          2603,
          2.094,
          2604,
          2.094,
          2605,
          2.094,
          2606,
          2.094,
          2607,
          2.094,
          2608,
          2.094,
          2609,
          2.094,
          2610,
          2.094,
          2611,
          2.094,
          2612,
          2.094,
          2613,
          2.094,
          2614,
          2.094,
          2615,
          2.094,
          2616,
          2.094,
          2617,
          4.261,
          2618,
          3.385,
          2619,
          4.261,
          2620,
          4.261,
          2621,
          2.094,
          2622,
          2.094,
          2623,
          2.094,
          2624,
          2.094,
          2625,
          2.094,
          2626,
          2.094,
          2627,
          2.094,
          2628,
          3.385,
          2629,
          2.094,
          2630,
          2.094,
          2631,
          3.385,
          2632,
          2.094,
          2633,
          3.385,
          2634,
          2.094,
          2635,
          3.385,
          2636,
          2.094,
          2637,
          3.385,
          2638,
          2.094,
          2639,
          3.385,
          2640,
          2.094,
          2641,
          3.385,
          2642,
          2.094,
          2643,
          2.094,
          2644,
          4.261,
          2645,
          3.385,
          2646,
          3.385,
          2647,
          4.261,
          2648,
          2.094,
          2649,
          4.894,
          2650,
          2.094,
          2651,
          4.894,
          2652,
          2.094,
          2653,
          2.094,
          2654,
          2.094,
          2655,
          2.094,
          2656,
          2.094,
          2657,
          2.094,
          2658,
          2.094,
          2659,
          1.827,
          2660,
          2.094,
          2661,
          2.094,
          2662,
          3.385,
          2663,
          3.385,
          2664,
          2.094,
          2665,
          4.894,
          2666,
          4.894,
          2667,
          4.894,
          2668,
          4.894,
          2669,
          2.094,
          2670,
          4.894,
          2671,
          2.094,
          2672,
          3.385,
          2673,
          2.094,
          2674,
          2.094,
          2675,
          2.094,
          2676,
          2.094,
        ],
      ],
      ['title/changelog.html', [490, 1.938, 586, 2.308, 2677, 3.413]],
      [
        'body/changelog.html',
        [
          3,
          0.152,
          4,
          0.115,
          24,
          2.041,
          32,
          0.01,
          33,
          0.469,
          61,
          2.668,
          72,
          4.462,
          77,
          0.01,
          85,
          4.376,
          92,
          3.915,
          99,
          2.592,
          125,
          3.653,
          144,
          1.971,
          178,
          1.609,
          184,
          0.01,
          216,
          4.108,
          218,
          1.083,
          287,
          2.56,
          295,
          0.746,
          665,
          3.366,
          692,
          4.462,
          821,
          3.59,
          872,
          4.462,
          928,
          4.415,
          1220,
          4.462,
          1295,
          4.108,
          1538,
          5.369,
          1888,
          4.638,
          2049,
          4.936,
          2678,
          5.656,
          2679,
          6.018,
          2680,
          6.492,
          2681,
          5.656,
          2682,
          5.656,
          2683,
          7.134,
          2684,
          4.936,
          2685,
          4.936,
          2686,
          4.936,
          2687,
          5.656,
          2688,
          5.656,
          2689,
          6.928,
          2690,
          5.656,
          2691,
          4.936,
          2692,
          4.936,
          2693,
          5.656,
          2694,
          4.936,
          2695,
          6.895,
          2696,
          6.895,
          2697,
          5.656,
          2698,
          4.936,
          2699,
          4.936,
          2700,
          5.656,
          2701,
          6.492,
          2702,
          5.656,
        ],
      ],
      ['title/coverage.html', [2703, 4.88]],
      [
        'body/coverage.html',
        [
          0,
          1.219,
          1,
          1.833,
          4,
          0.055,
          5,
          2.365,
          28,
          0.824,
          32,
          0.013,
          34,
          0.248,
          43,
          2.632,
          77,
          0.006,
          80,
          1.133,
          112,
          1.968,
          117,
          0.061,
          128,
          0.676,
          144,
          0.944,
          167,
          1.983,
          184,
          0.006,
          185,
          1.968,
          186,
          3.62,
          187,
          1.178,
          198,
          1.035,
          214,
          1.22,
          250,
          1.833,
          251,
          2.365,
          277,
          1.734,
          295,
          0.806,
          296,
          0.824,
          297,
          1.261,
          300,
          2.365,
          301,
          2.138,
          302,
          2.365,
          327,
          1.105,
          331,
          0.746,
          333,
          0.797,
          335,
          0.797,
          337,
          0.722,
          340,
          0.824,
          342,
          0.824,
          344,
          0.824,
          346,
          0.797,
          349,
          0.797,
          351,
          0.824,
          353,
          1.142,
          355,
          0.797,
          356,
          0.824,
          358,
          0.824,
          360,
          0.824,
          363,
          0.824,
          365,
          0.771,
          367,
          0.746,
          369,
          0.824,
          371,
          0.824,
          374,
          0.771,
          376,
          0.797,
          378,
          0.771,
          380,
          0.771,
          383,
          2.138,
          384,
          2.365,
          385,
          5.233,
          402,
          1.72,
          435,
          5.128,
          467,
          1.968,
          468,
          3.817,
          469,
          2.138,
          482,
          1.72,
          484,
          1.72,
          486,
          1.623,
          494,
          1.956,
          531,
          1.178,
          560,
          2.365,
          566,
          1.539,
          568,
          1.833,
          574,
          2.595,
          607,
          1.968,
          615,
          1.833,
          616,
          3.974,
          627,
          2.138,
          629,
          2.662,
          664,
          2.365,
          684,
          1.968,
          685,
          1.968,
          698,
          1.968,
          702,
          3.272,
          744,
          1.968,
          791,
          5.32,
          815,
          1.833,
          880,
          2.365,
          892,
          1.833,
          963,
          3.62,
          995,
          2.365,
          1017,
          2.365,
          1072,
          3.62,
          1073,
          2.365,
          1088,
          2.138,
          1093,
          2.365,
          1094,
          3.659,
          1115,
          1.623,
          1116,
          1.968,
          1117,
          2.632,
          1124,
          2.365,
          1156,
          1.833,
          1157,
          2.365,
          1164,
          2.365,
          1182,
          1.833,
          1183,
          2.365,
          1209,
          1.968,
          1210,
          2.365,
          1244,
          1.833,
          1245,
          2.365,
          1264,
          1.833,
          1265,
          2.365,
          1294,
          2.365,
          1311,
          2.365,
          1315,
          2.138,
          1316,
          2.138,
          1386,
          2.365,
          1429,
          2.355,
          1435,
          2.138,
          1437,
          2.138,
          1445,
          3.272,
          1446,
          2.365,
          1504,
          2.805,
          1519,
          2.365,
          1540,
          2.365,
          1547,
          2.365,
          1662,
          2.138,
          1663,
          2.365,
          1669,
          1.72,
          1720,
          2.365,
          1721,
          2.365,
          1763,
          2.365,
          1767,
          1.968,
          1800,
          2.365,
          1801,
          2.365,
          1804,
          2.365,
          1805,
          2.365,
          1808,
          2.365,
          1862,
          2.365,
          1879,
          3.659,
          1880,
          3.659,
          1882,
          1.72,
          1883,
          1.833,
          1934,
          2.138,
          1952,
          1.968,
          1981,
          1.72,
          1982,
          3.62,
          1987,
          2.365,
          1999,
          1.833,
          2007,
          2.365,
          2009,
          4.397,
          2025,
          2.365,
          2027,
          2.365,
          2032,
          2.365,
          2033,
          2.365,
          2044,
          2.365,
          2045,
          2.365,
          2046,
          2.365,
          2051,
          6.393,
          2063,
          2.365,
          2065,
          2.365,
          2067,
          2.365,
          2069,
          2.365,
          2071,
          2.365,
          2073,
          2.365,
          2075,
          2.365,
          2077,
          2.365,
          2079,
          2.365,
          2081,
          2.365,
          2101,
          1.833,
          2102,
          2.365,
          2103,
          2.365,
          2122,
          2.365,
          2124,
          2.365,
          2142,
          2.365,
          2181,
          1.833,
          2182,
          2.365,
          2183,
          2.365,
          2203,
          2.365,
          2204,
          2.365,
          2251,
          1.833,
          2252,
          1.833,
          2253,
          2.365,
          2269,
          2.365,
          2274,
          2.365,
          2288,
          2.365,
          2293,
          4.397,
          2322,
          2.365,
          2324,
          2.365,
          2329,
          2.365,
          2334,
          3.62,
          2335,
          4.452,
          2340,
          3.272,
          2345,
          3.62,
          2346,
          2.138,
          2364,
          2.365,
          2369,
          1.968,
          2419,
          2.365,
          2449,
          4.926,
          2455,
          3.62,
          2457,
          2.365,
          2703,
          2.365,
          2704,
          2.71,
          2705,
          2.71,
          2706,
          2.71,
          2707,
          7.359,
          2708,
          8.481,
          2709,
          5.038,
          2710,
          2.71,
          2711,
          2.71,
          2712,
          2.71,
          2713,
          2.71,
          2714,
          6.083,
          2715,
          2.71,
          2716,
          5.038,
          2717,
          2.71,
          2718,
          4.148,
          2719,
          4.148,
          2720,
          2.71,
          2721,
          2.71,
          2722,
          2.71,
          2723,
          2.71,
          2724,
          2.71,
          2725,
          2.71,
          2726,
          4.148,
          2727,
          2.71,
          2728,
          2.71,
          2729,
          2.71,
          2730,
          2.71,
          2731,
          2.71,
          2732,
          2.71,
          2733,
          2.71,
          2734,
          2.71,
          2735,
          2.71,
          2736,
          2.71,
          2737,
          2.71,
          2738,
          2.71,
          2739,
          6.083,
          2740,
          4.148,
          2741,
          4.148,
          2742,
          2.71,
          2743,
          2.71,
          2744,
          2.71,
          2745,
          2.71,
          2746,
          2.71,
          2747,
          2.71,
          2748,
          2.71,
          2749,
          2.71,
          2750,
          2.71,
          2751,
          2.71,
          2752,
          2.71,
          2753,
          6.676,
          2754,
          2.71,
          2755,
          2.71,
          2756,
          2.71,
          2757,
          2.71,
          2758,
          5.038,
          2759,
          5.038,
          2760,
          4.148,
          2761,
          4.148,
          2762,
          5.038,
          2763,
          4.148,
          2764,
          2.71,
          2765,
          2.71,
          2766,
          3.62,
          2767,
          2.71,
          2768,
          4.148,
          2769,
          2.71,
          2770,
          2.71,
          2771,
          3.62,
          2772,
          2.71,
          2773,
          4.148,
          2774,
          2.71,
          2775,
          2.71,
          2776,
          2.71,
          2777,
          2.71,
          2778,
          5.038,
          2779,
          2.71,
          2780,
          2.71,
          2781,
          2.71,
        ],
      ],
      ['title/dependencies.html', [653, 1.909, 2782, 2.978]],
      [
        'body/dependencies.html',
        [
          32,
          0.013,
          45,
          1.354,
          77,
          0.01,
          85,
          3.334,
          103,
          0.214,
          105,
          2.478,
          106,
          2.478,
          107,
          2.114,
          109,
          2.837,
          184,
          0.01,
          260,
          3.552,
          347,
          2.188,
          471,
          3.552,
          578,
          4.867,
          579,
          3.945,
          607,
          3.815,
          653,
          2.037,
          654,
          2.295,
          665,
          2.981,
          679,
          4.144,
          680,
          3.552,
          738,
          4.584,
          739,
          4.584,
          740,
          5.749,
          814,
          2.284,
          928,
          2.837,
          929,
          3.146,
          1103,
          4.144,
          1107,
          3.815,
          1120,
          4.18,
          1121,
          3.552,
          1126,
          4.144,
          1347,
          3.334,
          1397,
          3.815,
          1432,
          4.567,
          1433,
          4.584,
          1614,
          3.552,
          1617,
          4.144,
          2531,
          4.584,
          2701,
          4.584,
          2783,
          5.253,
          2784,
          6.587,
          2785,
          5.253,
          2786,
          8.39,
          2787,
          5.253,
          2788,
          6.587,
          2789,
          5.253,
          2790,
          5.253,
          2791,
          5.253,
          2792,
          5.253,
          2793,
          5.253,
          2794,
          6.587,
          2795,
          5.253,
          2796,
          5.253,
          2797,
          5.253,
          2798,
          5.253,
          2799,
          7.196,
          2800,
          5.253,
          2801,
          5.253,
          2802,
          5.253,
          2803,
          5.253,
          2804,
          5.253,
          2805,
          4.584,
          2806,
          5.253,
          2807,
          5.253,
          2808,
          5.253,
          2809,
          5.253,
          2810,
          5.253,
          2811,
          5.253,
          2812,
          5.253,
          2813,
          5.253,
          2814,
          5.253,
          2815,
          5.253,
          2816,
          5.253,
          2817,
          5.253,
          2818,
          5.253,
        ],
      ],
      ['title/miscellaneous/enumerations.html', [1143, 3.883, 2819, 2.166]],
      [
        'body/miscellaneous/enumerations.html',
        [
          6,
          0.722,
          24,
          2.536,
          32,
          0.013,
          42,
          1.487,
          69,
          1.345,
          77,
          0.011,
          101,
          3.18,
          184,
          0.011,
          187,
          3.402,
          468,
          3.946,
          469,
          5.543,
          483,
          3.18,
          501,
          5.543,
          502,
          6.132,
          503,
          6.132,
          504,
          6.132,
          614,
          3.461,
          744,
          4.238,
          760,
          5.543,
          761,
          4.459,
          816,
          6.132,
          1116,
          4.238,
          1117,
          3.703,
          1131,
          5.103,
          1143,
          4.603,
          1548,
          4.752,
          2819,
          3.703,
          2820,
          7.826,
          2821,
          7.027,
          2822,
          5.093,
          2823,
          5.835,
          2824,
          7.027,
          2825,
          5.835,
          2826,
          5.835,
          2827,
          7.027,
          2828,
          5.835,
        ],
      ],
      ['title/miscellaneous/functions.html', [494, 2.322, 2819, 2.166]],
      [
        'body/miscellaneous/functions.html',
        [
          6,
          0.782,
          31,
          0.911,
          32,
          0.012,
          33,
          0.611,
          35,
          0.772,
          77,
          0.011,
          145,
          2.964,
          184,
          0.011,
          494,
          2.978,
          573,
          5.096,
          633,
          5.271,
          684,
          5.347,
          685,
          5.347,
          2766,
          5.51,
          2771,
          5.51,
          2819,
          4.007,
          2829,
          6.313,
          2830,
          6.313,
          2831,
          6.313,
          2832,
          6.313,
        ],
      ],
      ['title/index.html', [6, 0.423, 490, 1.938, 586, 2.308]],
      [
        'body/index.html',
        [
          2,
          0.137,
          4,
          0.144,
          7,
          0.909,
          24,
          1.289,
          32,
          0.013,
          35,
          0.374,
          48,
          1.553,
          52,
          2.794,
          61,
          1.685,
          63,
          1.685,
          70,
          0.921,
          76,
          1.994,
          77,
          0.008,
          85,
          3.228,
          92,
          2.028,
          95,
          2.964,
          98,
          0.731,
          99,
          2.542,
          102,
          0.263,
          110,
          2.211,
          116,
          0.12,
          128,
          0.891,
          163,
          2.477,
          169,
          3.44,
          184,
          0.009,
          207,
          1.493,
          212,
          3.228,
          215,
          3.44,
          217,
          2.139,
          218,
          1.518,
          219,
          3.363,
          221,
          2.62,
          223,
          1.385,
          228,
          1.616,
          234,
          2.028,
          235,
          1.685,
          260,
          4.006,
          277,
          2.699,
          287,
          3.087,
          295,
          0.51,
          321,
          3.117,
          326,
          1.086,
          395,
          2.818,
          419,
          2.416,
          457,
          6.717,
          472,
          2.818,
          474,
          2.818,
          490,
          2.888,
          494,
          1.685,
          546,
          2.818,
          547,
          3.117,
          574,
          1.84,
          575,
          3.486,
          607,
          2.594,
          609,
          1.685,
          631,
          2.302,
          634,
          2.267,
          651,
          1.758,
          653,
          1.973,
          654,
          2.064,
          665,
          3.483,
          669,
          1.616,
          680,
          2.416,
          691,
          3.117,
          692,
          5.381,
          700,
          4.302,
          701,
          3.44,
          705,
          5.381,
          711,
          3.117,
          725,
          2.139,
          769,
          4.439,
          872,
          2.818,
          928,
          3.94,
          938,
          2.416,
          1091,
          3.694,
          1134,
          2.594,
          1149,
          2.594,
          1219,
          3.228,
          1220,
          2.818,
          1246,
          4.012,
          1295,
          2.594,
          1318,
          2.416,
          1411,
          2.594,
          1471,
          3.117,
          1538,
          3.44,
          1582,
          2.818,
          1625,
          3.117,
          1642,
          5.633,
          1662,
          4.012,
          1707,
          3.759,
          1744,
          3.117,
          1776,
          2.818,
          1782,
          2.594,
          1888,
          2.139,
          2098,
          4.439,
          2157,
          3.117,
          2197,
          2.818,
          2326,
          3.117,
          2492,
          3.117,
          2524,
          3.117,
          2584,
          3.117,
          2659,
          3.117,
          2679,
          5.633,
          2680,
          5.953,
          2683,
          6.717,
          2684,
          5.169,
          2685,
          3.117,
          2686,
          3.117,
          2689,
          6.188,
          2691,
          4.439,
          2692,
          4.439,
          2694,
          3.117,
          2698,
          5.633,
          2699,
          4.439,
          2707,
          3.117,
          2782,
          4.439,
          2805,
          3.117,
          2833,
          3.572,
          2834,
          3.572,
          2835,
          3.572,
          2836,
          3.572,
          2837,
          3.572,
          2838,
          3.572,
          2839,
          5.923,
          2840,
          5.086,
          2841,
          3.572,
          2842,
          3.572,
          2843,
          3.572,
          2844,
          3.572,
          2845,
          5.923,
          2846,
          5.086,
          2847,
          7.787,
          2848,
          3.572,
          2849,
          5.086,
          2850,
          3.572,
          2851,
          3.572,
          2852,
          5.923,
          2853,
          3.572,
          2854,
          3.572,
          2855,
          5.923,
          2856,
          3.572,
          2857,
          3.572,
          2858,
          6.821,
          2859,
          3.572,
          2860,
          3.572,
          2861,
          3.572,
          2862,
          3.572,
          2863,
          3.572,
          2864,
          5.923,
          2865,
          5.086,
          2866,
          3.572,
          2867,
          3.572,
          2868,
          3.572,
          2869,
          3.572,
          2870,
          3.572,
          2871,
          3.572,
          2872,
          3.572,
          2873,
          3.572,
          2874,
          3.572,
          2875,
          3.572,
          2876,
          3.572,
          2877,
          3.572,
          2878,
          3.572,
          2879,
          3.572,
          2880,
          3.572,
          2881,
          3.572,
          2882,
          5.086,
          2883,
          3.572,
          2884,
          3.572,
          2885,
          3.572,
          2886,
          3.572,
          2887,
          3.572,
          2888,
          3.572,
          2889,
          3.572,
          2890,
          3.572,
          2891,
          3.572,
          2892,
          5.923,
          2893,
          5.086,
          2894,
          3.572,
          2895,
          5.086,
          2896,
          3.572,
          2897,
          3.572,
          2898,
          3.572,
          2899,
          3.572,
          2900,
          3.572,
          2901,
          3.572,
          2902,
          3.572,
          2903,
          6.454,
          2904,
          3.572,
          2905,
          3.572,
          2906,
          5.086,
          2907,
          3.572,
          2908,
          3.572,
          2909,
          3.572,
          2910,
          3.572,
          2911,
          3.572,
          2912,
          3.572,
          2913,
          3.572,
          2914,
          3.572,
          2915,
          3.572,
          2916,
          3.572,
          2917,
          3.572,
        ],
      ],
      ['title/modules.html', [651, 1.441]],
      [
        'body/modules.html',
        [
          32,
          0.011,
          77,
          0.011,
          161,
          7.386,
          184,
          0.011,
          579,
          5.069,
          609,
          2.822,
          651,
          1.542,
          652,
          4.046,
          661,
          3.397,
          731,
          4.345,
          988,
          4.046,
          1065,
          4.046,
          1070,
          3.797,
          1071,
          3.797,
          1112,
          4.046,
          1425,
          4.046,
          1738,
          4.345,
          1994,
          4.345,
          2173,
          4.345,
          2918,
          8.463,
          2919,
          8.493,
          2920,
          5.983,
        ],
      ],
      ['title/overview.html', [2921, 4.88]],
      [
        'body/overview.html',
        [
          0,
          0.552,
          28,
          1.795,
          32,
          0.013,
          77,
          0.008,
          116,
          0.084,
          117,
          0.038,
          167,
          0.978,
          178,
          1.011,
          184,
          0.008,
          265,
          1.329,
          295,
          0.356,
          325,
          0.777,
          327,
          0.946,
          331,
          2.163,
          333,
          2.142,
          335,
          1.737,
          344,
          2.214,
          346,
          2.142,
          349,
          2.142,
          353,
          1.772,
          355,
          1.737,
          365,
          2.118,
          374,
          2.118,
          376,
          1.737,
          378,
          2.072,
          380,
          2.072,
          449,
          1.329,
          629,
          1.676,
          632,
          1.43,
          651,
          1.306,
          652,
          5.516,
          653,
          1.378,
          654,
          1.238,
          655,
          1.676,
          656,
          3.101,
          657,
          3.101,
          658,
          3.101,
          659,
          3.101,
          660,
          3.101,
          661,
          4.461,
          662,
          4.676,
          663,
          2.39,
          731,
          4.944,
          732,
          3.101,
          865,
          2.803,
          914,
          2.803,
          970,
          2.403,
          988,
          4.786,
          989,
          3.101,
          990,
          3.101,
          991,
          3.101,
          1048,
          2.403,
          1065,
          5.433,
          1066,
          3.101,
          1068,
          3.101,
          1069,
          3.101,
          1070,
          5.393,
          1071,
          4.726,
          1112,
          4.604,
          1113,
          3.101,
          1114,
          3.101,
          1115,
          3.537,
          1149,
          3.68,
          1156,
          4.926,
          1182,
          4.926,
          1244,
          4.926,
          1264,
          4.926,
          1425,
          5.398,
          1426,
          3.101,
          1427,
          3.101,
          1428,
          3.101,
          1429,
          3.353,
          1669,
          3.748,
          1738,
          5.408,
          1739,
          3.101,
          1740,
          3.101,
          1981,
          3.748,
          1994,
          5.868,
          1995,
          3.101,
          1996,
          3.101,
          1998,
          3.101,
          1999,
          3.994,
          2101,
          4.926,
          2173,
          5.583,
          2174,
          3.101,
          2175,
          3.101,
          2181,
          4.926,
          2248,
          3.101,
          2249,
          3.101,
          2250,
          3.101,
          2251,
          4.926,
          2252,
          4.926,
          2270,
          3.101,
          2272,
          3.101,
          2568,
          3.101,
          2921,
          3.101,
          2922,
          3.553,
        ],
      ],
      ['title/miscellaneous/typealiases.html', [2819, 2.166, 2923, 4.923]],
      [
        'body/miscellaneous/typealiases.html',
        [
          6,
          0.711,
          32,
          0.013,
          34,
          0.525,
          49,
          3.384,
          70,
          1.794,
          77,
          0.01,
          184,
          0.01,
          187,
          3.026,
          222,
          4.417,
          223,
          2.7,
          337,
          1.854,
          367,
          1.916,
          532,
          4.169,
          589,
          3.262,
          631,
          3.15,
          744,
          4.172,
          766,
          6.536,
          891,
          3.823,
          973,
          4.417,
          976,
          4.707,
          1225,
          4.172,
          1232,
          4.532,
          1315,
          4.532,
          1316,
          5.491,
          1343,
          6.536,
          1345,
          5.013,
          1347,
          3.646,
          1361,
          5.013,
          1362,
          5.013,
          1764,
          5.055,
          1934,
          4.532,
          1953,
          5.491,
          1954,
          5.491,
          1955,
          6.141,
          2346,
          4.532,
          2819,
          3.646,
          2822,
          5.013,
          2924,
          5.744,
          2925,
          5.744,
          2926,
          5.744,
          2927,
          5.744,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 32,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 435,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'components/ChartsComponent.html': {},
            'components/CounterComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'classes/StringUtils.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['0.10.1', { _index: 2798, title: {}, body: { 'dependencies.html': {} } }],
      ['0.8.26', { _index: 2818, title: {}, body: { 'dependencies.html': {} } }],
      ['0/1', { _index: 2708, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 2714, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 2739, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 2715, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 2709, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 2719, title: {}, body: { 'coverage.html': {} } }],
      ['0/9', { _index: 2742, title: {}, body: { 'coverage.html': {} } }],
      ['00:00:12', { _index: 1248, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      [
        '1',
        {
          _index: 449,
          title: { 'components/HomeComponent-1.html': {}, 'pipes/TextCasePipe-1.html': {} },
          body: {
            'classes/ApiUtils.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/DebouncePipe.html': {},
            'components/HomeComponent-1.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'overview.html': {},
          },
        },
      ],
      ['1$1', { _index: 2628, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['1.11.0', { _index: 2803, title: {}, body: { 'dependencies.html': {} } }],
      ['1.5.2', { _index: 2681, title: {}, body: { 'changelog.html': {} } }],
      ['1.7.2', { _index: 2804, title: {}, body: { 'dependencies.html': {} } }],
      ['1/1', { _index: 2753, title: {}, body: { 'coverage.html': {} } }],
      ['1/14', { _index: 2733, title: {}, body: { 'coverage.html': {} } }],
      ['1/4', { _index: 2706, title: {}, body: { 'coverage.html': {} } }],
      ['1/5', { _index: 2718, title: {}, body: { 'coverage.html': {} } }],
      [
        '10',
        {
          _index: 1048,
          title: {},
          body: {
            'components/ChartsComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        '100',
        {
          _index: 791,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        '1000',
        {
          _index: 971,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['1000).pipe(startwith(0', { _index: 1180, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['1000000', { _index: 2511, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        '10000000',
        {
          _index: 1892,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['1024px', { _index: 1964, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['11/13', { _index: 2759, title: {}, body: { 'coverage.html': {} } }],
      ['11/14', { _index: 2752, title: {}, body: { 'coverage.html': {} } }],
      ['11/24', { _index: 2737, title: {}, body: { 'coverage.html': {} } }],
      ['11/41', { _index: 2728, title: {}, body: { 'coverage.html': {} } }],
      [
        '12',
        {
          _index: 914,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'pipes/DurationPipe.html': {}, 'overview.html': {} },
        },
      ],
      [
        '120',
        {
          _index: 930,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['13/17', { _index: 2749, title: {}, body: { 'coverage.html': {} } }],
      ['14', { _index: 2124, title: {}, body: { 'pipes/PhoneNumberPipe.html': {}, 'coverage.html': {} } }],
      ['16', { _index: 2589, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['18', { _index: 2568, title: {}, body: { 'interfaces/Window.html': {}, 'overview.html': {} } }],
      ['19.0.0', { _index: 2799, title: {}, body: { 'dependencies.html': {} } }],
      [
        '2',
        {
          _index: 970,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/ContextService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'interfaces/Window.html': {},
            'overview.html': {},
          },
        },
      ],
      ['2.4.1', { _index: 2807, title: {}, body: { 'dependencies.html': {} } }],
      ['2.5.0', { _index: 2816, title: {}, body: { 'dependencies.html': {} } }],
      ['2.5.7', { _index: 2802, title: {}, body: { 'dependencies.html': {} } }],
      ['2/14', { _index: 2744, title: {}, body: { 'coverage.html': {} } }],
      ['2/2', { _index: 2773, title: {}, body: { 'coverage.html': {} } }],
      ['2/4', { _index: 2750, title: {}, body: { 'coverage.html': {} } }],
      ['2/5', { _index: 2723, title: {}, body: { 'coverage.html': {} } }],
      ['2/6', { _index: 2713, title: {}, body: { 'coverage.html': {} } }],
      ['20', { _index: 963, title: {}, body: { 'injectables/AuthService.html': {}, 'coverage.html': {} } }],
      ['200', { _index: 1421, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['21', { _index: 1339, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['21/42', { _index: 2721, title: {}, body: { 'coverage.html': {} } }],
      ['23', { _index: 2922, title: {}, body: { 'overview.html': {} } }],
      ['24', { _index: 1253, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['25', { _index: 2705, title: {}, body: { 'coverage.html': {} } }],
      ['26', { _index: 2727, title: {}, body: { 'coverage.html': {} } }],
      [
        '3',
        {
          _index: 1150,
          title: {},
          body: {
            'injectables/ContextService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['3.3.1', { _index: 2792, title: {}, body: { 'dependencies.html': {} } }],
      ['3/3', { _index: 2774, title: {}, body: { 'coverage.html': {} } }],
      ['3/4', { _index: 2757, title: {}, body: { 'coverage.html': {} } }],
      ['3/8', { _index: 2711, title: {}, body: { 'coverage.html': {} } }],
      ['300', { _index: 1208, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['300m', { _index: 1188, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['33', { _index: 2712, title: {}, body: { 'coverage.html': {} } }],
      ['34', { _index: 2730, title: {}, body: { 'coverage.html': {} } }],
      ['37', { _index: 2710, title: {}, body: { 'coverage.html': {} } }],
      [
        '4',
        {
          _index: 1149,
          title: {},
          body: {
            'injectables/ContextService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      ['4.1.3', { _index: 2800, title: {}, body: { 'dependencies.html': {} } }],
      ['4.17.11', { _index: 2806, title: {}, body: { 'dependencies.html': {} } }],
      ['4.5.0', { _index: 2813, title: {}, body: { 'dependencies.html': {} } }],
      ['4.9.4', { _index: 2811, title: {}, body: { 'dependencies.html': {} } }],
      ['4/6', { _index: 2741, title: {}, body: { 'coverage.html': {} } }],
      ['4/8', { _index: 2717, title: {}, body: { 'coverage.html': {} } }],
      ['40', { _index: 2722, title: {}, body: { 'coverage.html': {} } }],
      ['401', { _index: 136, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['403', { _index: 137, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['404', { _index: 2047, title: {}, body: { 'components/NoContentComponent.html': {} } }],
      ['43', { _index: 2724, title: {}, body: { 'coverage.html': {} } }],
      ['45', { _index: 2736, title: {}, body: { 'coverage.html': {} } }],
      ['480px', { _index: 1963, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['5', { _index: 925, title: {}, body: { 'injectables/AuthService.html': {}, 'components/ChartsComponent.html': {} } }],
      ['5.0.3', { _index: 2808, title: {}, body: { 'dependencies.html': {} } }],
      ['5/7', { _index: 2770, title: {}, body: { 'coverage.html': {} } }],
      ['5/8', { _index: 2720, title: {}, body: { 'coverage.html': {} } }],
      ['50', { _index: 2716, title: {}, body: { 'coverage.html': {} } }],
      ['52db93b73884', { _index: 1532, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['6', { _index: 2622, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['6.0.1', { _index: 2794, title: {}, body: { 'dependencies.html': {} } }],
      ['6.3.3', { _index: 2812, title: {}, body: { 'dependencies.html': {} } }],
      ['6/7', { _index: 2755, title: {}, body: { 'coverage.html': {} } }],
      [
        '60',
        {
          _index: 1252,
          title: {},
          body: { 'pipes/DurationPipe.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['600', { _index: 2566, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['62', { _index: 2329, title: {}, body: { 'classes/StringUtils.html': {}, 'coverage.html': {} } }],
      ['66', { _index: 2740, title: {}, body: { 'coverage.html': {} } }],
      ['7', { _index: 2122, title: {}, body: { 'pipes/PhoneNumberPipe.html': {}, 'coverage.html': {} } }],
      ['7.0.0', { _index: 2786, title: {}, body: { 'dependencies.html': {} } }],
      ['7.0.1', { _index: 2784, title: {}, body: { 'dependencies.html': {} } }],
      ['7.0.2', { _index: 2788, title: {}, body: { 'dependencies.html': {} } }],
      ['7/16', { _index: 2725, title: {}, body: { 'coverage.html': {} } }],
      ['7/7', { _index: 2775, title: {}, body: { 'coverage.html': {} } }],
      ['71', { _index: 2769, title: {}, body: { 'coverage.html': {} } }],
      ['720px', { _index: 1961, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['75', { _index: 2756, title: {}, body: { 'coverage.html': {} } }],
      ['76', { _index: 2748, title: {}, body: { 'coverage.html': {} } }],
      ['78', { _index: 2751, title: {}, body: { 'coverage.html': {} } }],
      ['81', { _index: 2760, title: {}, body: { 'coverage.html': {} } }],
      ['84', { _index: 2758, title: {}, body: { 'coverage.html': {} } }],
      ['85', { _index: 2754, title: {}, body: { 'coverage.html': {} } }],
      ['9/11', { _index: 2761, title: {}, body: { 'coverage.html': {} } }],
      ['9/26', { _index: 2731, title: {}, body: { 'coverage.html': {} } }],
      ['90', { _index: 1965, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['9]/g', { _index: 2111, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['9]/gi', { _index: 1285, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['__karma__', { _index: 2779, title: {}, body: { 'coverage.html': {} } }],
      ['_apiurl', { _index: 745, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['_data', { _index: 2667, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['_sanit', { _index: 2193, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['_token', { _index: 746, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['_ui', { _index: 747, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['_usernam', { _index: 748, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['a.i', { _index: 1043, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['a[objprop', { _index: 2281, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      [
        'accept',
        {
          _index: 1886,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['accessor', { _index: 759, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'action',
        {
          _index: 573,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/HomeComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['actioncr', { _index: 2763, title: {}, body: { 'coverage.html': {} } }],
      [
        'activ',
        {
          _index: 1497,
          title: {},
          body: {
            'components/GridStatusBarComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'activatedrout',
        {
          _index: 564,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['actual', { _index: 1870, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      [
        'actual_compon',
        {
          _index: 382,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['ad', { _index: 2313, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['adapt', { _index: 2767, title: {}, body: { 'coverage.html': {} } }],
      [
        'add',
        {
          _index: 163,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/ContextService.html': {},
            'pipes/DurationPipe.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'index.html': {},
          },
        },
      ],
      ['add/chang', { _index: 2873, title: {}, body: { 'index.html': {} } }],
      ['addit', { _index: 876, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['addmetadata', { _index: 2125, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'addmetadata(msg',
        {
          _index: 1932,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'address',
        {
          _index: 1629,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['adjust', { _index: 1341, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'afterviewinit',
        {
          _index: 1300,
          title: {},
          body: {
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'ag',
        {
          _index: 1432,
          title: {},
          body: {
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['again', { _index: 1856, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['against', { _index: 585, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['aggridmodul', { _index: 1431, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['aggridmodule.withcomponents([gridtemplaterenderercompon', { _index: 1444, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['aggridng2', { _index: 1478, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'aginit',
        {
          _index: 1454,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'components/GridTemplateRendererComponent.html': {} },
        },
      ],
      [
        'aginit(param',
        {
          _index: 1461,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'components/GridTemplateRendererComponent.html': {} },
        },
      ],
      ['alias', { _index: 2924, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      [
        'allow',
        {
          _index: 1185,
          title: {},
          body: {
            'pipes/DebouncePipe.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'alloweddomain',
        {
          _index: 1887,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['along', { _index: 1413, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'alreadi',
        {
          _index: 559,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['alway', { _index: 583, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['amount', { _index: 2303, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['analyz', { _index: 2859, title: {}, body: { 'index.html': {} } }],
      [
        'angular',
        {
          _index: 665,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      ['angular.json', { _index: 2908, title: {}, body: { 'index.html': {} } }],
      ['angular/anim', { _index: 2785, title: {}, body: { 'dependencies.html': {} } }],
      ['angular/cdk', { _index: 2787, title: {}, body: { 'dependencies.html': {} } }],
      [
        'angular/common',
        {
          _index: 814,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'components/LoginComponent.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'angular/common/http',
        {
          _index: 104,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AuthService.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      ['angular/compil', { _index: 2789, title: {}, body: { 'dependencies.html': {} } }],
      [
        'angular/cor',
        {
          _index: 103,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['angular/el', { _index: 2790, title: {}, body: { 'dependencies.html': {} } }],
      [
        'angular/form',
        {
          _index: 1614,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
            'modules/VendorModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['angular/http', { _index: 2791, title: {}, body: { 'dependencies.html': {} } }],
      [
        'angular/materi',
        {
          _index: 1107,
          title: {},
          body: {
            'components/ConfirmationModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'modules/VendorModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'angular/platform',
        {
          _index: 578,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'angular/rout',
        {
          _index: 105,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/HeaderComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavSearchComponent.html': {},
            'modules/VendorModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'angular/servic',
        {
          _index: 679,
          title: {},
          body: { 'modules/AppModule.html': {}, 'injectables/ServiceWorkerService.html': {}, 'dependencies.html': {} },
        },
      ],
      ['angularstart', { _index: 2678, title: {}, body: { 'changelog.html': {} } }],
      ['animationdur', { _index: 2565, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['animationen', { _index: 2563, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['aot', { _index: 2851, title: {}, body: { 'index.html': {} } }],
      [
        'api',
        {
          _index: 98,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Settings.html': {},
            'index.html': {},
          },
        },
      ],
      ['api.act', { _index: 113, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'injectables/ApiService.html': {} } }],
      ['api.http.base.servic', { _index: 279, title: {}, body: { 'injectables/ApiService.html': {} } }],
      [
        'api.map',
        {
          _index: 281,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      [
        'api.selectors.servic',
        {
          _index: 280,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['api/logerror', { _index: 1392, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'apihttpservic',
        {
          _index: 1,
          title: { 'injectables/ApiHttpService.html': {} },
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/MonolithApiService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apimap',
        {
          _index: 43,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apimap.us',
        {
          _index: 270,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['apiprop', { _index: 2820, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      [
        'apireduc',
        {
          _index: 685,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/MonolithModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['apireducer(st', { _index: 2831, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'apiselectorsservic',
        {
          _index: 185,
          title: { 'injectables/ApiSelectorsService.html': {} },
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/ApiService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'apiservic',
        {
          _index: 250,
          title: { 'injectables/ApiService.html': {} },
          body: {
            'injectables/ApiService.html': {},
            'injectables/AuthService.html': {},
            'components/HomeComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apistatecompon',
        {
          _index: 296,
          title: { 'components/ApiStateComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apistoreact',
        {
          _index: 112,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/MonolithApiService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'apiurl',
        {
          _index: 760,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['apiurl(valu', { _index: 837, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'apiutil',
        {
          _index: 383,
          title: { 'classes/ApiUtils.html': {} },
          body: { 'classes/ApiUtils.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'app',
        {
          _index: 218,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      ['app.compon', { _index: 688, title: {}, body: { 'modules/AppModule.html': {}, 'modules/AppServerModule.html': {} } }],
      ['app.component.html', { _index: 561, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['app.modul', { _index: 741, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      ['app.rout', { _index: 689, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['app.routes.t', { _index: 576, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'app.set',
        {
          _index: 114,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['app.settings.t', { _index: 2872, title: {}, body: { 'index.html': {} } }],
      [
        'app_compon',
        {
          _index: 702,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/ComponentsModule.html': {}, 'coverage.html': {} },
        },
      ],
      ['app_initi', { _index: 672, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['app_mod', { _index: 1073, title: {}, body: { 'modules/ComponentsModule.html': {}, 'coverage.html': {} } }],
      ['app_pipes_direct', { _index: 2269, title: {}, body: { 'modules/SharedModule.html': {}, 'coverage.html': {} } }],
      ['appcomm', { _index: 2394, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'appcommsservic',
        {
          _index: 467,
          title: { 'injectables/AppCommsService.html': {} },
          body: { 'injectables/AppCommsService.html': {}, 'components/AppComponent.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'appcompon',
        {
          _index: 331,
          title: { 'components/AppComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'appconfigservic',
        {
          _index: 615,
          title: { 'injectables/AppConfigService.html': {} },
          body: {
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'interfaces/Settings.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['appear', { _index: 2492, title: {}, body: { 'interfaces/Window.html': {}, 'index.html': {} } }],
      [
        'append',
        {
          _index: 455,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      ['appfocu', { _index: 1298, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      [
        "appfocus]'},{'nam",
        {
          _index: 379,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['appfocus]="fals', { _index: 1299, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      [
        'appfullscreen',
        {
          _index: 381,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'appid',
        {
          _index: 704,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['appinit', { _index: 719, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['appinit(set', { _index: 726, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['appkey', { _index: 636, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['appl', { _index: 2157, title: {}, body: { 'components/QaComponent.html': {}, 'index.html': {} } }],
      ['appli', { _index: 1781, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      [
        'applic',
        {
          _index: 1401,
          title: {},
          body: { 'injectables/GlobalErrorHandler.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['application/angular', { _index: 1395, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['application/x', { _index: 1415, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'appmodul',
        {
          _index: 652,
          title: { 'modules/AppModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['appprop', { _index: 27, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['approach', { _index: 2905, title: {}, body: { 'index.html': {} } }],
      [
        'appservermodul',
        {
          _index: 731,
          title: { 'modules/AppServerModule.html': {} },
          body: { 'modules/AppServerModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      [
        'appset',
        {
          _index: 28,
          title: { 'injectables/AppSettings.html': {} },
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['appsetting[appkey', { _index: 638, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['appsettingsprop', { _index: 816, title: {}, body: { 'injectables/AppSettings.html': {}, 'miscellaneous/enumerations.html': {} } }],
      ['appsettingsupd', { _index: 618, title: {}, body: { 'injectables/AppConfigService.html': {} } }],
      [
        'appsettingsupdate(set',
        { _index: 622, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      [
        'appstor',
        {
          _index: 115,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      ['appstore.apimap', { _index: 44, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['appstore.apist', { _index: 315, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['appstore.root', { _index: 201, title: {}, body: { 'injectables/ApiSelectorsService.html': {} } }],
      ['appstore.ui', { _index: 2380, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['architect', { _index: 2909, title: {}, body: { 'index.html': {} } }],
      ['area', { _index: 2115, title: {}, body: { 'pipes/PhoneNumberPipe.html': {}, 'interfaces/Window.html': {} } }],
      ['arg', { _index: 424, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['argument', { _index: 399, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['arial', { _index: 2519, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['arr', { _index: 1275, title: {}, body: { 'pipes/FilterPipe.html': {}, 'pipes/SortPipe.html': {} } }],
      ['arr.filter(elem', { _index: 1286, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'array',
        {
          _index: 228,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'pipes/CountPipe.html': {},
            'pipes/FilterPipe.html': {},
            'components/GridStatusBarComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['array.from(srcarray', { _index: 466, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['array.isarray(record', { _index: 414, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'array.isarray(status',
        {
          _index: 231,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['array.isarray(valu', { _index: 1161, title: {}, body: { 'pipes/CountPipe.html': {}, 'pipes/StringPipe.html': {} } }],
      ['arraynew', { _index: 2279, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['arraynew.revers', { _index: 2287, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['arraynew.sort', { _index: 2286, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['arraynew.sort(sortasc', { _index: 2284, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['arraynew.sort(sortdesc', { _index: 2285, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['artifact', { _index: 2690, title: {}, body: { 'changelog.html': {} } }],
      ['asc', { _index: 2275, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['ask', { _index: 2216, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['asset', { _index: 2882, title: {}, body: { 'index.html': {} } }],
      ['assets/scripts/canvasjs.min.j', { _index: 2458, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'attach',
        {
          _index: 1296,
          title: {},
          body: {
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LaunchModalComponent.html': {},
          },
        },
      ],
      [
        'auth',
        {
          _index: 608,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/NavComponent.html': {},
          },
        },
      ],
      [
        'authent',
        {
          _index: 60,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'components/AppComponent.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['authguard', { _index: 866, title: { 'guards/AuthGuard.html': {} }, body: { 'guards/AuthGuard.html': {} } }],
      ['authreq', { _index: 1759, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      [
        'authservic',
        {
          _index: 566,
          title: { 'injectables/AuthService.html': {} },
          body: {
            'components/AppComponent.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'auto',
        {
          _index: 1347,
          title: {},
          body: {
            'directives/FullScreenDirective.html': {},
            'components/HomeComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Window.html': {},
            'dependencies.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'automat',
        {
          _index: 1295,
          title: {},
          body: {
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'autounsubscrib',
        {
          _index: 1616,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/LaunchModalComponent.html': {} },
        },
      ],
      [
        'avail',
        {
          _index: 609,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
            'modules.html': {},
          },
        },
      ],
      ['axi', { _index: 2499, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['axisi', { _index: 2597, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['axisx', { _index: 2586, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'b',
        {
          _index: 427,
          title: {},
          body: { 'classes/ApiUtils.html': {}, 'components/ChartsComponent.html': {}, 'pipes/SortPipe.html': {} },
        },
      ],
      ['b.i', { _index: 1044, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['b[objprop', { _index: 2282, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['back', { _index: 170, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'classes/StringUtils.html': {} } }],
      [
        'bar',
        {
          _index: 1447,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'interfaces/Window.html': {} },
        },
      ],
      [
        "bar'},{'nam",
        {
          _index: 348,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['bar.compon', { _index: 1438, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['bar.component.html', { _index: 1449, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.scss', { _index: 1448, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.t', { _index: 1446, title: {}, body: { 'components/GridStatusBarComponent.html': {}, 'coverage.html': {} } }],
      ['bar.component.ts:12', { _index: 1484, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:13', { _index: 1482, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:14', { _index: 1483, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:16', { _index: 1479, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:17', { _index: 1481, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:18', { _index: 1485, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:20', { _index: 1460, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:24', { _index: 1465, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:33', { _index: 1464, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:60', { _index: 1462, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:65', { _index: 1475, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:68', { _index: 1473, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:76', { _index: 1470, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['bar.component.ts:91', { _index: 1467, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'bar/grid',
        {
          _index: 1437,
          title: {},
          body: { 'modules/GridModule.html': {}, 'components/GridStatusBarComponent.html': {}, 'coverage.html': {} },
        },
      ],
      ['barrel', { _index: 2906, title: {}, body: { 'index.html': {} } }],
      [
        'base',
        {
          _index: 283,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/ContextService.html': {},
            'pipes/FilterPipe.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      ['base64', { _index: 2307, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'be',
        {
          _index: 57,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/DesktopUtils.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['bearer', { _index: 1750, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      [
        'befor',
        {
          _index: 205,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'modules/AppModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/StringUtils.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['begin', { _index: 406, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['behavior', { _index: 119, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'behaviorsubject',
        {
          _index: 1948,
          title: {},
          body: {
            'injectables/ModalsService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['behaviorsubject(fals', { _index: 2221, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        'behaviorsubject(nul',
        {
          _index: 1949,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'below',
        {
          _index: 1321,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      [
        'between',
        {
          _index: 472,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'injectables/AuthService.html': {}, 'index.html': {} },
        },
      ],
      ['blackberri', { _index: 2165, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['blank', { _index: 2107, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['bodi', { _index: 162, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['boilerpl', { _index: 2914, title: {}, body: { 'index.html': {} } }],
      [
        'boolean',
        {
          _index: 268,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'guards/AuthGuard.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/QaComponent.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['boostrap', { _index: 2391, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'bootstrap',
        {
          _index: 654,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'components/LogoutModalComponent.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'modules/VendorModule.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'bootstrap/ng',
        {
          _index: 929,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'modules/VendorModule.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'bottom',
        {
          _index: 1233,
          title: {},
          body: { 'classes/DesktopUtils.html': {}, 'directives/FullScreenDirective.html': {} },
        },
      ],
      [
        'break',
        {
          _index: 433,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/ModalsService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['brows', { _index: 2919, title: {}, body: { 'modules.html': {} } }],
      [
        'browser',
        {
          _index: 579,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'injectables/AuthService.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'dependencies.html': {},
            'modules.html': {},
          },
        },
      ],
      ['browser/anim', { _index: 668, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['browseranimationsmodul', { _index: 667, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['browsermodul', { _index: 666, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['browsermodule.withservertransit', { _index: 703, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['bubbl', { _index: 2469, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['buffer', { _index: 968, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'bug',
        {
          _index: 259,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['build', { _index: 2689, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['built', { _index: 2584, title: {}, body: { 'interfaces/Window.html': {}, 'index.html': {} } }],
      ['bundl', { _index: 2858, title: {}, body: { 'index.html': {} } }],
      ['button', { _index: 1775, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['bypass', { _index: 588, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'cach',
        {
          _index: 9,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      ['cacheclear', { _index: 12, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['calc', { _index: 1374, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['calcheight', { _index: 1327, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['calcul', { _index: 2643, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'call',
        {
          _index: 217,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'index.html': {},
          },
        },
      ],
      ['callback', { _index: 921, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'camelcas',
        {
          _index: 627,
          title: {},
          body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {}, 'coverage.html': {} },
        },
      ],
      ['camelcase(key', { _index: 637, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['canactiv', { _index: 868, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['cancel', { _index: 1111, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      ['canvasj', { _index: 2450, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['canvasjs.chart', { _index: 2512, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'canvasjs.chartdataseriesopt',
        { _index: 1020, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } },
      ],
      ['canvasjs.chartlabelformatt', { _index: 1012, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'capit',
        {
          _index: 2340,
          title: {},
          body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {}, 'coverage.html': {} },
        },
      ],
      ['capitalize(valu', { _index: 2342, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      [
        'case',
        {
          _index: 515,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['case.pip', { _index: 1440, title: {}, body: { 'modules/GridModule.html': {}, 'modules/SharedModule.html': {} } }],
      [
        'case.pipe.t',
        {
          _index: 2335,
          title: {},
          body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {}, 'coverage.html': {} },
        },
      ],
      ['case.pipe.ts:9', { _index: 2339, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      [
        'catch',
        {
          _index: 851,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'classes/DesktopUtils.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['catch((err', { _index: 646, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['catcherror', { _index: 108, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['catcherror(error', { _index: 134, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['cd', { _index: 2844, title: {}, body: { 'index.html': {} } }],
      ['cell', { _index: 1638, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['celltemplatedelet', { _index: 1621, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['celltemplatephon', { _index: 1619, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['chanc', { _index: 896, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'chang',
        {
          _index: 287,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIStoreService.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'changedetect',
        {
          _index: 306,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/CounterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'changedetectionstrategi',
        {
          _index: 318,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/CounterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'changedetectionstrategy.onpush',
        {
          _index: 307,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/CounterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['changedetector', { _index: 1200, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      [
        'changedetectorref',
        {
          _index: 1197,
          title: {},
          body: { 'pipes/DebouncePipe.html': {}, 'components/GridStatusBarComponent.html': {} },
        },
      ],
      ['changelog', { _index: 2677, title: { 'changelog.html': {} }, body: {} }],
      ['char', { _index: 2331, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'charact',
        {
          _index: 794,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      ['charnewindex', { _index: 2333, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['charshift', { _index: 2295, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['charshift(str', { _index: 2299, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['charslist.length', { _index: 2332, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['chart', { _index: 996, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } }],
      [
        "chart'},{'nam",
        {
          _index: 334,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['chart.chartdata', { _index: 2668, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['chart.charttooltipitem', { _index: 2666, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['chart.compon', { _index: 994, title: {}, body: { 'modules/ChartModule.html': {} } }],
      ['chart.component.html', { _index: 2459, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['chart.component.scss', { _index: 2460, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['chart.j', { _index: 2528, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'chartcompon',
        {
          _index: 333,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['chartinit', { _index: 2538, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'chartmodul',
        {
          _index: 988,
          title: { 'modules/ChartModule.html': {} },
          body: {
            'modules/ChartModule.html': {},
            'modules/QaModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['chartoptionscr', { _index: 2554, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        "charts'},{'nam",
        {
          _index: 336,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['charts.component.html', { _index: 998, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['charts.component.scss', { _index: 997, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'chartscompon',
        {
          _index: 335,
          title: { 'components/ChartsComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['chartsrc', { _index: 2457, title: {}, body: { 'interfaces/Window.html': {}, 'coverage.html': {} } }],
      [
        'check',
        {
          _index: 61,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      ['checkinterv', { _index: 2205, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        'class',
        {
          _index: 117,
          title: {
            'classes/ApiUtils.html': {},
            'classes/DesktopUtils.html': {},
            'classes/ObjectUtils.html': {},
            'classes/StringUtils.html': {},
          },
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['clean', { _index: 1277, title: {}, body: { 'pipes/FilterPipe.html': {}, 'interfaces/Window.html': {} } }],
      ['cleanup', { _index: 2053, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['cleanup(obj', { _index: 2054, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        'clear',
        {
          _index: 38,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/MonolithApiService.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['cleartimeout(this.sessiontim', { _index: 962, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['cleartimeout(this.timeouthandl', { _index: 1203, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['cli', { _index: 2680, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      [
        'click',
        {
          _index: 1575,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/NoContentComponent.html': {},
          },
        },
      ],
      ['clickabl', { _index: 2113, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['clipboard', { _index: 1215, title: {}, body: { 'classes/DesktopUtils.html': {}, 'components/HomeComponent-1.html': {} } }],
      ['clone', { _index: 2098, title: {}, body: { 'classes/ObjectUtils.html': {}, 'index.html': {} } }],
      ['clonedeep', { _index: 2081, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['clonedeep(obj', { _index: 2097, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        'close',
        {
          _index: 532,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'components/HeaderComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['cluster_appmodul', { _index: 656, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } }],
      ['cluster_appmodule_bootstrap', { _index: 659, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } }],
      ['cluster_appmodule_declar', { _index: 657, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } }],
      ['cluster_appmodule_import', { _index: 658, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } }],
      ['cluster_appmodule_provid', { _index: 660, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } }],
      ['cluster_appservermodul', { _index: 732, title: {}, body: { 'modules/AppServerModule.html': {}, 'overview.html': {} } }],
      ['cluster_appservermodule_bootstrap', { _index: 734, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      ['cluster_appservermodule_import', { _index: 733, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      ['cluster_chartmodul', { _index: 989, title: {}, body: { 'modules/ChartModule.html': {}, 'overview.html': {} } }],
      ['cluster_chartmodule_declar', { _index: 990, title: {}, body: { 'modules/ChartModule.html': {}, 'overview.html': {} } }],
      ['cluster_chartmodule_export', { _index: 991, title: {}, body: { 'modules/ChartModule.html': {}, 'overview.html': {} } }],
      ['cluster_componentsmodul', { _index: 1066, title: {}, body: { 'modules/ComponentsModule.html': {}, 'overview.html': {} } }],
      ['cluster_componentsmodule_declar', { _index: 1067, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['cluster_componentsmodule_export', { _index: 1069, title: {}, body: { 'modules/ComponentsModule.html': {}, 'overview.html': {} } }],
      ['cluster_componentsmodule_import', { _index: 1068, title: {}, body: { 'modules/ComponentsModule.html': {}, 'overview.html': {} } }],
      ['cluster_contextmodul', { _index: 1113, title: {}, body: { 'modules/ContextModule.html': {}, 'overview.html': {} } }],
      ['cluster_contextmodule_provid', { _index: 1114, title: {}, body: { 'modules/ContextModule.html': {}, 'overview.html': {} } }],
      ['cluster_gridmodul', { _index: 1426, title: {}, body: { 'modules/GridModule.html': {}, 'overview.html': {} } }],
      ['cluster_gridmodule_declar', { _index: 1427, title: {}, body: { 'modules/GridModule.html': {}, 'overview.html': {} } }],
      ['cluster_gridmodule_export', { _index: 1428, title: {}, body: { 'modules/GridModule.html': {}, 'overview.html': {} } }],
      ['cluster_homemodul', { _index: 1739, title: {}, body: { 'modules/HomeModule.html': {}, 'overview.html': {} } }],
      ['cluster_homemodule_declar', { _index: 1740, title: {}, body: { 'modules/HomeModule.html': {}, 'overview.html': {} } }],
      ['cluster_homemodule_import', { _index: 1741, title: {}, body: { 'modules/HomeModule.html': {} } }],
      ['cluster_monolithmodul', { _index: 1995, title: {}, body: { 'modules/MonolithModule.html': {}, 'overview.html': {} } }],
      ['cluster_monolithmodule_declar', { _index: 1996, title: {}, body: { 'modules/MonolithModule.html': {}, 'overview.html': {} } }],
      ['cluster_monolithmodule_import', { _index: 1997, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      ['cluster_monolithmodule_provid', { _index: 1998, title: {}, body: { 'modules/MonolithModule.html': {}, 'overview.html': {} } }],
      ['cluster_qamodul', { _index: 2174, title: {}, body: { 'modules/QaModule.html': {}, 'overview.html': {} } }],
      ['cluster_qamodule_declar', { _index: 2175, title: {}, body: { 'modules/QaModule.html': {}, 'overview.html': {} } }],
      ['cluster_qamodule_import', { _index: 2176, title: {}, body: { 'modules/QaModule.html': {} } }],
      ['cluster_sharedmodul', { _index: 2248, title: {}, body: { 'modules/SharedModule.html': {}, 'overview.html': {} } }],
      ['cluster_sharedmodule_declar', { _index: 2249, title: {}, body: { 'modules/SharedModule.html': {}, 'overview.html': {} } }],
      ['cluster_sharedmodule_export', { _index: 2250, title: {}, body: { 'modules/SharedModule.html': {}, 'overview.html': {} } }],
      ['cluster_sitemodul', { _index: 2270, title: {}, body: { 'modules/SiteModule.html': {}, 'overview.html': {} } }],
      ['cluster_sitemodule_export', { _index: 2272, title: {}, body: { 'modules/SiteModule.html': {}, 'overview.html': {} } }],
      ['cluster_sitemodule_import', { _index: 2271, title: {}, body: { 'modules/SiteModule.html': {} } }],
      ['code', { _index: 1220, title: {}, body: { 'classes/DesktopUtils.html': {}, 'changelog.html': {}, 'index.html': {} } }],
      ['col.colid', { _index: 1507, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['col.rowgroupindex', { _index: 1508, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['colid', { _index: 1472, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['collect', { _index: 56, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'classes/ObjectUtils.html': {} } }],
      ['color', { _index: 2480, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['colorgradi', { _index: 2483, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['colorschem', { _index: 2514, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['colorscustom', { _index: 2484, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['colorset', { _index: 2482, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'column',
        {
          _index: 1504,
          title: {},
          body: {
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['column.rowgroupindex', { _index: 1501, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['columnapi', { _index: 1480, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'combinelatest',
        {
          _index: 194,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'combinelatest(statusesnew).pip',
        {
          _index: 232,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['come', { _index: 1718, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['comm', { _index: 569, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['command', { _index: 2867, title: {}, body: { 'index.html': {} } }],
      [
        'commonmodul',
        {
          _index: 993,
          title: {},
          body: {
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
          },
        },
      ],
      [
        'comms.service.t',
        {
          _index: 469,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'coverage.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['comms.service.ts:100', { _index: 492, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['comms.service.ts:23', { _index: 485, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['comms.service.ts:30', { _index: 489, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['comms.service.ts:78', { _index: 487, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['comms.service.ts:87', { _index: 495, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['commsdis', { _index: 477, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['commsen', { _index: 478, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'commun',
        {
          _index: 471,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'compani',
        {
          _index: 1630,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['compat', { _index: 2879, title: {}, body: { 'index.html': {} } }],
      ['compil', { _index: 2916, title: {}, body: { 'index.html': {} } }],
      [
        'complet',
        {
          _index: 1653,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'compon',
        {
          _index: 295,
          title: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/SiteModule.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'coverage.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'component_templ',
        {
          _index: 329,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'componentsmodul',
        {
          _index: 1065,
          title: { 'modules/ComponentsModule.html': {} },
          body: {
            'modules/ComponentsModule.html': {},
            'modules/SiteModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['composit', { _index: 2860, title: {}, body: { 'index.html': {} } }],
      ['config', { _index: 724, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['config.json', { _index: 2889, title: {}, body: { 'index.html': {} } }],
      ['config.loadenvset', { _index: 730, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'config.service.t',
        {
          _index: 616,
          title: {},
          body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {}, 'coverage.html': {} },
        },
      ],
      ['config.service.ts:10', { _index: 2247, title: {}, body: { 'interfaces/Settings.html': {} } }],
      ['config.service.ts:18', { _index: 621, title: {}, body: { 'injectables/AppConfigService.html': {} } }],
      ['config.service.ts:25', { _index: 624, title: {}, body: { 'injectables/AppConfigService.html': {} } }],
      ['config.service.ts:44', { _index: 625, title: {}, body: { 'injectables/AppConfigService.html': {} } }],
      ['config/env', { _index: 696, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['configur', { _index: 954, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'confirm',
        {
          _index: 338,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'confirmationmodalcompon',
        {
          _index: 337,
          title: { 'components/ConfirmationModalComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'consol',
        {
          _index: 288,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        "console.error('error",
        { _index: 647, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      [
        "console.error('messag",
        {
          _index: 1931,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'console.error(camelcase(key',
        { _index: 640, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      ['console.error(err', { _index: 2418, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['console.error(error', { _index: 1400, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ["console.log('apiurl", { _index: 838, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ["console.log('do", { _index: 1729, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ["console.log('error", { _index: 958, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        "console.log('mod",
        {
          _index: 1955,
          title: {},
          body: {
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ["console.log('onrowupd", { _index: 1716, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ["console.log('onstatechang", { _index: 1711, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ["console.log('refresh", { _index: 957, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ["console.log('set", { _index: 960, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ["console.log('tim", { _index: 965, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['console.log(err', { _index: 852, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['console.log(json.parse(json.stringify(storeapi.api', { _index: 290, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['console.log(json.parse(json.stringify(storeapi.ui', { _index: 2404, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['console.log(opt', { _index: 2603, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['console.log(params.valu', { _index: 1636, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['console.log(row', { _index: 1649, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['console.log(test', { _index: 1635, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'console.log(this.http',
        {
          _index: 292,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['console.log(v', { _index: 1062, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['console.log(valu', { _index: 1647, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ["console.warn('copi", { _index: 1242, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ["console.warn('improp", { _index: 2675, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["console.warn('successfulli", { _index: 1422, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ["console.warn('us", { _index: 2245, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['console.warn(json.parse(json.stringify(storeapi', { _index: 1993, title: {}, body: { 'injectables/MonolithApiService.html': {} } }],
      ['console.warn(this.search', { _index: 2039, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      [
        'const',
        {
          _index: 151,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/FilterPipe.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/HomeComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'components/NavComponent.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'pipes/SortPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'constructor',
        {
          _index: 20,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['constructor(@inject(platform_id', { _index: 844, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'constructor(api',
        {
          _index: 1568,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['constructor(auth', { _index: 2014, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['constructor(authservic', { _index: 1815, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['constructor(contextmenuservic', { _index: 1127, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['constructor(dialogref', { _index: 1098, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      [
        'constructor(el',
        {
          _index: 1302,
          title: {},
          body: { 'directives/FocusDirective.html': {}, 'directives/FullScreenDirective.html': {} },
        },
      ],
      ['constructor(http', { _index: 890, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['constructor(httpsvc', { _index: 21, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['constructor(menu', { _index: 1724, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['constructor(messag', { _index: 481, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['constructor(mod', { _index: 1766, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['constructor(modalservic', { _index: 2347, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['constructor(platformid', { _index: 762, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'constructor(priv',
        {
          _index: 211,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/ContextService.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FocusDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      ['constructor(protect', { _index: 2192, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['constructor(publ', { _index: 1108, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      ['constructor(ref', { _index: 1459, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'constructor(rout',
        {
          _index: 563,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/NavSearchComponent.html': {},
          },
        },
      ],
      [
        'constructor(set',
        {
          _index: 620,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'constructor(stor',
        {
          _index: 188,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      ['constructor(sw', { _index: 2209, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['contain', { _index: 2834, title: {}, body: { 'index.html': {} } }],
      [
        'content',
        {
          _index: 120,
          title: {},
          body: { 'injectables/ApiHttpService.html': {}, 'components/NoContentComponent.html': {} },
        },
      ],
      [
        "content'},{'nam",
        {
          _index: 375,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['content.component.t', { _index: 2046, title: {}, body: { 'components/NoContentComponent.html': {}, 'coverage.html': {} } }],
      ['content/no', { _index: 2045, title: {}, body: { 'components/NoContentComponent.html': {}, 'coverage.html': {} } }],
      [
        'context',
        {
          _index: 356,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['contextact', { _index: 1557, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['contextaction(valu', { _index: 1572, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'contextmenu',
        {
          _index: 1121,
          title: {},
          body: {
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['contextmenu($ev', { _index: 1672, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'contextmenucompon',
        {
          _index: 1139,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'components/HomeContextMenuComponent.html': {} },
        },
      ],
      [
        'contextmenulist',
        {
          _index: 1131,
          title: {},
          body: {
            'injectables/ContextService.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['contextmenumodul', { _index: 1119, title: {}, body: { 'modules/ContextModule.html': {} } }],
      ['contextmenumodule.forroot', { _index: 1123, title: {}, body: { 'modules/ContextModule.html': {} } }],
      ['contextmenuservic', { _index: 1128, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'contextmodul',
        {
          _index: 1112,
          title: { 'modules/ContextModule.html': {} },
          body: {
            'modules/ContextModule.html': {},
            'modules/MonolithModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'contextservic',
        {
          _index: 1115,
          title: { 'injectables/ContextService.html': {} },
          body: {
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['contextsvc', { _index: 1670, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'continu',
        {
          _index: 897,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['controlsdropdown', { _index: 1699, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'convert',
        {
          _index: 1255,
          title: {},
          body: { 'pipes/DurationPipe.html': {}, 'pipes/StringPipe.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['cool', { _index: 1730, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      [
        'copi',
        {
          _index: 1214,
          title: {},
          body: {
            'classes/DesktopUtils.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
          },
        },
      ],
      ['copytoclipboard', { _index: 1211, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['copytoclipboard(text', { _index: 1212, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['copywithhead', { _index: 1639, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['core', { _index: 2801, title: {}, body: { 'dependencies.html': {} } }],
      ['correct', { _index: 2868, title: {}, body: { 'index.html': {} } }],
      [
        'count',
        {
          _index: 263,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'pipes/CountPipe.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      [
        'countdown',
        {
          _index: 907,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      [
        'counter',
        {
          _index: 1166,
          title: {},
          body: {
            'components/CounterComponent.html': {},
            'pipes/DurationPipe.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        "counter'},{'nam",
        {
          _index: 341,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['counter.component.html', { _index: 1168, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['counter.component.scss', { _index: 1167, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['counter/counter.compon', { _index: 1090, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      [
        'countercompon',
        {
          _index: 340,
          title: { 'components/CounterComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'countpip',
        {
          _index: 1156,
          title: { 'pipes/CountPipe.html': {} },
          body: {
            'pipes/CountPipe.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['countsperag', { _index: 1005, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['coverag', { _index: 2703, title: { 'coverage.html': {} }, body: { 'coverage.html': {} } }],
      [
        'creat',
        {
          _index: 235,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'create/upd',
        {
          _index: 1599,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['createent', { _index: 2764, title: {}, body: { 'coverage.html': {} } }],
      [
        'createselector',
        {
          _index: 191,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'css',
        {
          _index: 1780,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['currenc', { _index: 2672, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['currencypip', { _index: 2255, title: {}, body: { 'modules/SharedModule.html': {} } }],
      [
        'current',
        {
          _index: 440,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'directives/FullScreenDirective.html': {},
            'components/HomeComponent.html': {},
            'components/HomeContextMenuComponent.html': {},
            'injectables/ModalsService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['current[key', { _index: 2093, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['currentvalu', { _index: 1191, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['cursor', { _index: 2577, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['custom', { _index: 1393, title: {}, body: { 'injectables/GlobalErrorHandler.html': {}, 'interfaces/Window.html': {} } }],
      ['customcolor', { _index: 2546, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['d', { _index: 1144, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['dashboard', { _index: 980, title: {}, body: { 'injectables/AuthService.html': {}, 'components/NavComponent.html': {} } }],
      [
        'data',
        {
          _index: 80,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['data).pip', { _index: 148, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'injectables/AuthService.html': {} } }],
      ['data.foreach(elem', { _index: 1035, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ["data/login.json').pip", { _index: 947, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'dataalt',
        {
          _index: 1779,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['datagrid', { _index: 1743, title: {}, body: { 'modules/HomeModule.html': {}, 'modules/MonolithModule.html': {} } }],
      ['datagrid.st', { _index: 1710, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['datagridmodul', { _index: 1744, title: {}, body: { 'modules/HomeModule.html': {}, 'index.html': {} } }],
      ['datagroup', { _index: 2891, title: {}, body: { 'index.html': {} } }],
      ['datalabel', { _index: 2658, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['datanew', { _index: 152, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['datapoint', { _index: 999, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } }],
      ['datapoints.push(transferstotal[key', { _index: 1041, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['datapoints.sort((a', { _index: 1042, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['datapointscount', { _index: 1000, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['datapointstopf', { _index: 1001, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['datapointstransferstot', { _index: 1002, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['dataseri', { _index: 2579, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['date', { _index: 1032, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } }],
      ['datepip', { _index: 2254, title: {}, body: { 'modules/SharedModule.html': {}, 'interfaces/Window.html': {} } }],
      ['day', { _index: 1250, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      [
        'de',
        {
          _index: 523,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['debounc', { _index: 1184, title: {}, body: { 'pipes/DebouncePipe.html': {}, 'components/QaComponent.html': {} } }],
      [
        'debouncepip',
        {
          _index: 1182,
          title: { 'pipes/DebouncePipe.html': {} },
          body: {
            'pipes/DebouncePipe.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['debouncetim', { _index: 1189, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['decim', { _index: 2664, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'declar',
        {
          _index: 632,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'overview.html': {},
          },
        },
      ],
      ['decod', { _index: 2310, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'decor',
        {
          _index: 1103,
          title: {},
          body: {
            'components/ConfirmationModalComponent.html': {},
            'components/HomeContextMenuComponent.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'default',
        {
          _index: 68,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'pipes/SortPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['defaultsdeep', { _index: 2455, title: {}, body: { 'interfaces/Window.html': {}, 'coverage.html': {} } }],
      ['defaultsdeep(this.opt', { _index: 2604, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'defin',
        {
          _index: 29,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      [
        'delet',
        {
          _index: 49,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['deletestor', { _index: 14, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['deletestore(url', { _index: 41, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['dep', { _index: 720, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'depend',
        {
          _index: 653,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'components/LaunchModalComponent.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'dependencies.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      ['deploy', { _index: 2864, title: {}, body: { 'index.html': {} } }],
      ['deployloc', { _index: 2866, title: {}, body: { 'index.html': {} } }],
      ['desc', { _index: 2277, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      [
        'descript',
        {
          _index: 51,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/ContextService.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['desktop', { _index: 388, title: {}, body: { 'classes/ApiUtils.html': {}, 'classes/DesktopUtils.html': {} } }],
      [
        'desktoputil',
        {
          _index: 1209,
          title: { 'classes/DesktopUtils.html': {} },
          body: { 'classes/DesktopUtils.html': {}, 'components/HomeComponent-1.html': {}, 'coverage.html': {} },
        },
      ],
      ['desktoputils.copytoclipboard(users[0].phon', { _index: 1715, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['detail', { _index: 322, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['determin', { _index: 984, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['dev', { _index: 872, title: {}, body: { 'guards/AuthGuard.html': {}, 'changelog.html': {}, 'index.html': {} } }],
      ['dev/prototyp', { _index: 874, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['develop', { _index: 2682, title: {}, body: { 'changelog.html': {} } }],
      ['devkit/cor', { _index: 2783, title: {}, body: { 'dependencies.html': {} } }],
      ['dial', { _index: 1732, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['dialog', { _index: 1224, title: {}, body: { 'classes/DesktopUtils.html': {}, 'injectables/ModalsService.html': {} } }],
      ['dialogref', { _index: 1096, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      ['dict', { _index: 421, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['dict[recordcurrentkey', { _index: 441, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['dict[recordid', { _index: 429, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['dictionari', { _index: 416, title: {}, body: { 'classes/ApiUtils.html': {}, 'components/GridStatusBarComponent.html': {} } }],
      ['diffblu', { _index: 2646, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffbluestr', { _index: 2651, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffbluestr.length', { _index: 2657, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffgreen', { _index: 2645, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffgreenstr', { _index: 2649, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffgreenstr.length', { _index: 2656, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffr', { _index: 2644, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffredstr', { _index: 2647, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['diffredstr.length', { _index: 2655, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['digit', { _index: 2654, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'direct',
        {
          _index: 327,
          title: { 'directives/FocusDirective.html': {}, 'directives/FullScreenDirective.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['directives/focus.direct', { _index: 2268, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['directives/ful', { _index: 2266, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['directive|pipe|service|class|guard|interface|enum|modul', { _index: 2688, title: {}, body: { 'changelog.html': {} } }],
      ['directli', { _index: 780, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['directori', { _index: 2692, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['dirti', { _index: 694, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'disabl',
        {
          _index: 488,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'modules/AppModule.html': {},
            'directives/FocusDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'dismiss',
        {
          _index: 976,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['dismissreason', { _index: 975, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'display',
        {
          _index: 1350,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['dist', { _index: 2691, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['div', { _index: 2509, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['doc', { _index: 2862, title: {}, body: { 'index.html': {} } }],
      [
        'docoolstuff',
        {
          _index: 1558,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeContextMenuComponent.html': {} },
        },
      ],
      ['docoolstuff(test', { _index: 1576, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'document',
        {
          _index: 607,
          title: {},
          body: { 'components/AppComponent.html': {}, 'coverage.html': {}, 'dependencies.html': {}, 'index.html': {} },
        },
      ],
      [
        'document).getelementbyid(id',
        {
          _index: 1912,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'document).getelementbyid(id).contentwindow',
        {
          _index: 1913,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'document).getelementbyid(id).contentwindow.postmessage(this.addmetadata(messag',
        {
          _index: 1914,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['document.body.appendchild(textarea', { _index: 1236, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['document.body.clientheight', { _index: 1385, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['document.body.removechild(textarea', { _index: 1243, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ["document.createelement('script", { _index: 2532, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["document.createelement('textarea", { _index: 1229, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['document.documentelement.clientheight', { _index: 1384, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ["document.execcommand('copi", { _index: 1238, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['document.head.appendchild(script', { _index: 2537, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['document.querycommandsupport', { _index: 1227, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ["document.querycommandsupported('copi", { _index: 1228, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      [
        "doesn't",
        {
          _index: 159,
          title: {},
          body: { 'injectables/ApiHttpService.html': {}, 'components/HomeComponent.html': {} },
        },
      ],
      [
        'dom',
        {
          _index: 298,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'domain',
        {
          _index: 475,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'guards/AuthGuard.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['domsanit', { _index: 2190, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      [
        "don't",
        {
          _index: 262,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/AuthService.html': {},
            'components/GridStatusBarComponent.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      ['done', { _index: 434, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['doubl', { _index: 967, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['doughnut', { _index: 2477, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'down',
        {
          _index: 415,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'components/HomeComponent.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      [
        'drop',
        {
          _index: 408,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'pipes/DurationPipe.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['dropdown', { _index: 2021, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['due', { _index: 1399, title: {}, body: { 'injectables/GlobalErrorHandler.html': {}, 'interfaces/Window.html': {} } }],
      [
        'durat',
        {
          _index: 926,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/CounterComponent.html': {},
            'pipes/DurationPipe.html': {},
          },
        },
      ],
      [
        'durationpip',
        {
          _index: 1244,
          title: { 'pipes/DurationPipe.html': {} },
          body: {
            'pipes/DurationPipe.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['dynam', { _index: 2531, title: {}, body: { 'interfaces/Window.html': {}, 'dependencies.html': {} } }],
      ['e', { _index: 2581, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['e.dataseries.vis', { _index: 2582, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['e.g', { _index: 2623, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['e0f', { _index: 2624, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['e2', { _index: 2698, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['easi', { _index: 417, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['easier', { _index: 1278, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['edg', { _index: 1235, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      [
        'edit',
        {
          _index: 1594,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['ee00ff', { _index: 2625, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'el',
        {
          _index: 1305,
          title: {},
          body: { 'directives/FocusDirective.html': {}, 'directives/FullScreenDirective.html': {} },
        },
      ],
      ['elem', { _index: 1325, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['elem.d', { _index: 1036, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['elem.hasownproperty(objprop', { _index: 1288, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['elem.nam', { _index: 1038, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['elem.transf', { _index: 1040, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'element',
        {
          _index: 45,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'elementref',
        {
          _index: 1303,
          title: {},
          body: {
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['elimin', { _index: 1398, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'email',
        {
          _index: 1631,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/NavSearchComponent.html': {},
          },
        },
      ],
      [
        'embed',
        {
          _index: 1531,
          title: {},
          body: {
            'components/GridTemplateRendererComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['emit', { _index: 1786, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['empti', { _index: 2058, title: {}, body: { 'classes/ObjectUtils.html': {}, 'interfaces/Window.html': {} } }],
      ['en', { _index: 2670, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'enabl',
        {
          _index: 690,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['enable/dis', { _index: 2871, title: {}, body: { 'index.html': {} } }],
      ['enableprodmod', { _index: 670, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['encod', { _index: 2306, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'end',
        {
          _index: 125,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
          },
        },
      ],
      [
        'end_multiscreen',
        {
          _index: 504,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['endblu', { _index: 2641, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['endcolor', { _index: 2620, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['endcolor.length', { _index: 2629, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['endcolor.replace(/(.)/g', { _index: 2630, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['endgreen', { _index: 2639, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'endpoint',
        {
          _index: 83,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/AppComponent.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      ['endr', { _index: 2637, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['endsess', { _index: 15, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['endsession(error', { _index: 58, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['engin', { _index: 2796, title: {}, body: { 'dependencies.html': {} } }],
      ['ensur', { _index: 2653, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['enter', { _index: 1861, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['enterpris', { _index: 1433, title: {}, body: { 'modules/GridModule.html': {}, 'dependencies.html': {} } }],
      ['entir', { _index: 2856, title: {}, body: { 'index.html': {} } }],
      ['entri', { _index: 2494, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'entrycompon',
        {
          _index: 721,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/SharedModule.html': {},
          },
        },
      ],
      ['entrypoint', { _index: 687, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'enum',
        {
          _index: 501,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'enumer',
        {
          _index: 1143,
          title: { 'miscellaneous/enumerations.html': {} },
          body: { 'injectables/ContextService.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'env',
        {
          _index: 278,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/GridModule.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'environ',
        {
          _index: 277,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/GridModule.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
            'index.html': {},
          },
        },
      ],
      ['environment.endpoints.apiurl', { _index: 284, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['environment.endpoints.authlogin', { _index: 952, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['environment.endpoints.authtokenrefresh', { _index: 919, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['environment.prod.t', { _index: 2870, title: {}, body: { 'index.html': {} } }],
      [
        'environment.properties.appnam',
        {
          _index: 606,
          title: {},
          body: { 'components/AppComponent.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['environment.properties.appname.length', { _index: 788, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['environment.settings.enableappcomm', { _index: 592, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'environment.settings.enableauth',
        {
          _index: 611,
          title: {},
          body: { 'components/AppComponent.html': {}, 'guards/AuthGuard.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'environment.settings.enableservicework',
        {
          _index: 590,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'components/NavComponent.html': {},
          },
        },
      ],
      [
        'environment.settings.obfusc',
        {
          _index: 522,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['environment.settings.preloadrout', { _index: 709, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['environment.state.uistoreblacklist.indexof(key', { _index: 2412, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['environment.t', { _index: 2869, title: {}, body: { 'index.html': {} } }],
      [
        'err',
        {
          _index: 648,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'error',
        {
          _index: 63,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/LoginComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIStoreService.html': {},
            'index.html': {},
          },
        },
      ],
      ['error(`invalid', { _index: 2202, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      [
        'error.errormsg',
        {
          _index: 138,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['error.statu', { _index: 135, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['error.statustext', { _index: 1853, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['errorapi', { _index: 1810, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['errorhandl', { _index: 671, title: {}, body: { 'modules/AppModule.html': {}, 'injectables/GlobalErrorHandler.html': {} } }],
      ['errorhid', { _index: 312, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['errorlogapi', { _index: 1391, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['errormsg', { _index: 1402, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['escap', { _index: 2324, title: {}, body: { 'classes/StringUtils.html': {}, 'coverage.html': {} } }],
      ['etc', { _index: 2659, title: {}, body: { 'interfaces/Window.html': {}, 'index.html': {} } }],
      ['even', { _index: 584, title: {}, body: { 'components/AppComponent.html': {}, 'components/HomeComponent.html': {} } }],
      [
        'event',
        {
          _index: 540,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/ContextService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'event.data',
        {
          _index: 1921,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'event.data.appid',
        {
          _index: 1923,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'event.data.typ',
        {
          _index: 1922,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['event.preventdefault', { _index: 1154, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['event.stoppropag', { _index: 1155, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['eventemitt', { _index: 1773, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['everyth', { _index: 2289, title: {}, body: { 'pipes/StringPipe.html': {} } }],
      ['ex', { _index: 1241, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['except', { _index: 1239, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['exclud', { _index: 1287, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['execut', { _index: 2696, title: {}, body: { 'changelog.html': {} } }],
      [
        'exist',
        {
          _index: 404,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'pipes/FilterPipe.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      [
        'expir',
        {
          _index: 183,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AuthService.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      ['expirationsecond', { _index: 911, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'export',
        {
          _index: 116,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
            'overview.html': {},
          },
        },
      ],
      ['exporten', { _index: 2564, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'extend',
        {
          _index: 282,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'fail',
        {
          _index: 62,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppCommsService.html': {},
            'classes/DesktopUtils.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'fals',
        {
          _index: 70,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'components/NavComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['faster', { _index: 691, title: {}, body: { 'modules/AppModule.html': {}, 'index.html': {} } }],
      ['favicon.ico', { _index: 2884, title: {}, body: { 'index.html': {} } }],
      [
        'fb',
        {
          _index: 1569,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['fff', { _index: 2614, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'field',
        {
          _index: 1468,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'components/HomeComponent.html': {} },
        },
      ],
      [
        'figur',
        {
          _index: 248,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'file',
        {
          _index: 4,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'coverage.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'filter',
        {
          _index: 580,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'pipes/FilterPipe.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['filter(ev', { _index: 595, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['filter(rout', { _index: 600, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['filter.field', { _index: 1516, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['filter.filt', { _index: 1518, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['filter.typ', { _index: 1517, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['filterfruit', { _index: 2145, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['filterfruitmor', { _index: 2146, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['filterglob', { _index: 1664, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'filterpip',
        {
          _index: 1264,
          title: { 'pipes/FilterPipe.html': {} },
          body: {
            'pipes/FilterPipe.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'final',
        {
          _index: 236,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/DesktopUtils.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
          },
        },
      ],
      ['fire', { _index: 507, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'first',
        {
          _index: 722,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'components/NavSearchComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        'fix',
        {
          _index: 258,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'classes/DesktopUtils.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'fixt',
        {
          _index: 253,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['flag', { _index: 2693, title: {}, body: { 'changelog.html': {} } }],
      ['focu', { _index: 1297, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      [
        'focusdirect',
        {
          _index: 378,
          title: { 'directives/FocusDirective.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['folder', { _index: 2852, title: {}, body: { 'index.html': {} } }],
      ['follow', { _index: 2913, title: {}, body: { 'index.html': {} } }],
      ['followup', { _index: 1736, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['fontcolor', { _index: 2574, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['fontfamili', { _index: 2516, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['fontsiz', { _index: 2522, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['fontweight', { _index: 2523, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['footer', { _index: 1312, title: {}, body: { 'components/FooterComponent.html': {} } }],
      [
        "footer'},{'nam",
        {
          _index: 343,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['footer.component.html', { _index: 1313, title: {}, body: { 'components/FooterComponent.html': {} } }],
      [
        'footercompon',
        {
          _index: 342,
          title: { 'components/FooterComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'form',
        {
          _index: 1102,
          title: {},
          body: {
            'components/ConfirmationModalComponent.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'format',
        {
          _index: 1246,
          title: {},
          body: { 'pipes/DurationPipe.html': {}, 'interfaces/Window.html': {}, 'index.html': {} },
        },
      ],
      ['formatcurr', { _index: 2453, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatcurrency(number(tooltipitem.ylabel', { _index: 2673, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatd', { _index: 2451, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatdata', { _index: 2661, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatdata(opt', { _index: 2660, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatdatalabel', { _index: 2486, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatdate(number(tooltipitem.ylabel', { _index: 2671, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatnumb', { _index: 2452, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatnumber(number(tooltipitem.ylabel', { _index: 2669, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatperc', { _index: 2454, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatpercent(number(tooltipitem.ylabel', { _index: 2674, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatt', { _index: 2596, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formattooltip', { _index: 1006, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } }],
      ['formattooltip(v', { _index: 1011, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['formattooltiptitl', { _index: 2485, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatxlabel', { _index: 2487, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['formatylabel', { _index: 2488, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'formbuild',
        {
          _index: 1570,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'formgroup',
        {
          _index: 1601,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'formmain',
        {
          _index: 1551,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['formsmodul', { _index: 2435, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['forown', { _index: 2063, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['forown(curr', { _index: 2084, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        'forroot',
        {
          _index: 1092,
          title: {},
          body: {
            'modules/ComponentsModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
          },
        },
      ],
      [
        'found',
        {
          _index: 94,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['frame', { _index: 1003, title: {}, body: { 'components/ChartsComponent.html': {}, 'pipes/DebouncePipe.html': {} } }],
      ['front', { _index: 456, title: {}, body: { 'classes/ApiUtils.html': {}, 'classes/StringUtils.html': {} } }],
      ['fruit', { _index: 2147, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['fruit.nam', { _index: 2172, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['fruitsmor', { _index: 2148, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['fsa', { _index: 2815, title: {}, body: { 'dependencies.html': {} } }],
      [
        'full',
        {
          _index: 1318,
          title: {},
          body: {
            'directives/FullScreenDirective.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'index.html': {},
          },
        },
      ],
      ['fullnam', { _index: 1267, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['fullscreen', { _index: 1698, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'fullscreendirect',
        {
          _index: 380,
          title: { 'directives/FullScreenDirective.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'function',
        {
          _index: 494,
          title: { 'miscellaneous/functions.html': {} },
          body: {
            'injectables/AppCommsService.html': {},
            'modules/AppModule.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/HomeComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
          },
        },
      ],
      ['function(valu', { _index: 2085, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['further', { _index: 2700, title: {}, body: { 'changelog.html': {} } }],
      ['g', { _index: 2854, title: {}, body: { 'index.html': {} } }],
      [
        'gener',
        {
          _index: 1888,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'classes/StringUtils.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'get',
        {
          _index: 586,
          title: { 'changelog.html': {}, 'index.html': {} },
          body: {
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      [
        'get(environment.endpoints.envconfig',
        { _index: 642, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      ['get(url', { _index: 64, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['getapiurl', { _index: 804, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['getcolorscheme(startcolor', { _index: 2621, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'getstatuses(status',
        {
          _index: 229,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['getstor', { _index: 16, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['getstore(url', { _index: 74, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['getter/sett', { _index: 818, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['gettoken', { _index: 800, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['getui', { _index: 796, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['getusernam', { _index: 808, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['git', { _index: 2840, title: {}, body: { 'index.html': {} } }],
      ['github', { _index: 2849, title: {}, body: { 'index.html': {} } }],
      ['give', { _index: 895, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'global',
        {
          _index: 234,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'modules/AppModule.html': {},
            'modules/ComponentsModule.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'modules/SiteModule.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'globalerrorhandl',
        {
          _index: 698,
          title: { 'injectables/GlobalErrorHandler.html': {} },
          body: { 'modules/AppModule.html': {}, 'injectables/GlobalErrorHandler.html': {}, 'coverage.html': {} },
        },
      ],
      ['go', { _index: 2049, title: {}, body: { 'components/NoContentComponent.html': {}, 'changelog.html': {} } }],
      [
        'gracefulli',
        {
          _index: 525,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['gradient', { _index: 2555, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['graph', { _index: 2920, title: {}, body: { 'modules.html': {} } }],
      ['greater', { _index: 1874, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['green', { _index: 1646, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'grid',
        {
          _index: 347,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        "grid'},{'nam",
        {
          _index: 345,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['grid.component.t', { _index: 1477, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['grid/grid.compon', { _index: 1434, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['gridcolumnapi', { _index: 1450, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'gridcompon',
        {
          _index: 344,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['gridcontextmenu', { _index: 1559, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['gridcontextmenu(param', { _index: 1578, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['gridfilt', { _index: 1451, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['gridfilterterm', { _index: 1552, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['gridgroup', { _index: 1452, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'gridmodul',
        {
          _index: 1425,
          title: { 'modules/GridModule.html': {} },
          body: {
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['gridopt', { _index: 1553, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['gridrowsselect', { _index: 1554, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'gridstat',
        {
          _index: 1453,
          title: {},
          body: {
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      ['gridstate.sorts[0].colid', { _index: 1512, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['gridstate.sorts[0].sort', { _index: 1514, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'gridstatechang',
        {
          _index: 1455,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      [
        'gridstatechange(gridst',
        {
          _index: 1463,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['gridstatesav', { _index: 1560, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['gridstatesave(gridst', { _index: 1580, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'gridstatusbarcompon',
        {
          _index: 346,
          title: { 'components/GridStatusBarComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'gridtemplaterenderercompon',
        {
          _index: 349,
          title: { 'components/GridTemplateRendererComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['group', { _index: 1471, title: {}, body: { 'components/GridStatusBarComponent.html': {}, 'index.html': {} } }],
      ['group.colid', { _index: 1515, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['grouping/filtering/sorting/etc', { _index: 1685, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'guard',
        {
          _index: 865,
          title: { 'guards/AuthGuard.html': {} },
          body: { 'guards/AuthGuard.html': {}, 'overview.html': {} },
        },
      ],
      ['handl', { _index: 715, title: {}, body: { 'modules/AppModule.html': {}, 'directives/FullScreenDirective.html': {} } }],
      ['handleerror', { _index: 1387, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['handleerror(error', { _index: 1389, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['handler', { _index: 1394, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['haslogin', { _index: 1830, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['hasprop', { _index: 1273, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['hassw', { _index: 2011, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['hasupd', { _index: 2012, title: {}, body: { 'components/NavComponent.html': {} } }],
      [
        'header',
        {
          _index: 1411,
          title: {},
          body: {
            'injectables/GlobalErrorHandler.html': {},
            'components/HeaderComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        "header'},{'nam",
        {
          _index: 352,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['header.component.html', { _index: 1541, title: {}, body: { 'components/HeaderComponent.html': {} } }],
      [
        'headercompon',
        {
          _index: 351,
          title: { 'components/HeaderComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['height', { _index: 1326, title: {}, body: { 'directives/FullScreenDirective.html': {}, 'interfaces/Window.html': {} } }],
      [
        'held',
        {
          _index: 266,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['help', { _index: 2701, title: {}, body: { 'changelog.html': {}, 'dependencies.html': {} } }],
      [
        'helper',
        {
          _index: 386,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'classes/DesktopUtils.html': {},
            'classes/ObjectUtils.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      ['helvetica', { _index: 2517, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'here',
        {
          _index: 743,
          title: {},
          body: {
            'modules/AppServerModule.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/NoContentComponent.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['hex', { _index: 2619, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'hidden',
        {
          _index: 1345,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['hide', { _index: 2490, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['hit', { _index: 1875, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      [
        'hold',
        {
          _index: 97,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'home',
        {
          _index: 1548,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        "home'},{'nam",
        {
          _index: 354,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['home.compon', { _index: 1746, title: {}, body: { 'modules/HomeModule.html': {} } }],
      [
        'home.component.html',
        {
          _index: 1550,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'home.component.scss',
        {
          _index: 1549,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['home.rout', { _index: 1745, title: {}, body: { 'modules/HomeModule.html': {} } }],
      [
        'homecompon',
        {
          _index: 353,
          title: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'homecontextmenucompon',
        {
          _index: 355,
          title: { 'components/HomeContextMenuComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'homemodul',
        {
          _index: 1738,
          title: { 'modules/HomeModule.html': {} },
          body: { 'modules/HomeModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      ['homepag', { _index: 2050, title: {}, body: { 'components/NoContentComponent.html': {} } }],
      ['hostlisten', { _index: 1334, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ["hostlistener('window:res", { _index: 1363, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['hour', { _index: 1254, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['hoursstr', { _index: 1256, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['hover', { _index: 2493, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'html',
        {
          _index: 326,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['html.pipe', { _index: 2261, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['html.pipe.t', { _index: 2183, title: {}, body: { 'pipes/SafeHtmlPipe.html': {}, 'coverage.html': {} } }],
      ['html.pipe.ts:11', { _index: 2185, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      [
        'http',
        {
          _index: 221,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Settings.html': {},
            'index.html': {},
          },
        },
      ],
      ['http.onreadystatechang', { _index: 1418, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ["http.open('post", { _index: 1407, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['http.readyst', { _index: 1419, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['http.send(param', { _index: 1423, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ["http.setrequestheader('cont", { _index: 1414, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['http.statu', { _index: 1420, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['http://127.0.0.1:8080', { _index: 2853, title: {}, body: { 'index.html': {} } }],
      ['http://localhost:4200', { _index: 2686, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['http_interceptor', { _index: 677, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'httpclient',
        {
          _index: 22,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AuthService.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      ['httpclientmodul', { _index: 676, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['httpevent', { _index: 1757, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ['httphandler', { _index: 1754, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ['httpinterceptor', { _index: 1758, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      [
        'httpinterceptorservic',
        {
          _index: 662,
          title: { 'interceptors/HttpInterceptorService.html': {} },
          body: { 'modules/AppModule.html': {}, 'interceptors/HttpInterceptorService.html': {}, 'overview.html': {} },
        },
      ],
      ['httprequest', { _index: 1752, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ['https://blog.angularindepth.com/easi', { _index: 1530, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['https://github.com/angular/angular', { _index: 2850, title: {}, body: { 'index.html': {} } }],
      [
        'https://github.com/angular/angular/issues/20970',
        { _index: 2235, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } },
      ],
      ['https://github.com/jerrolkrause/angular', { _index: 2841, title: {}, body: { 'index.html': {} } }],
      ['https://jerrolkrause.github.io/angular', { _index: 2837, title: {}, body: { 'index.html': {} } }],
      ['https://marketplace.visualstudio.com/items?itemname=eg2.tslint', { _index: 2896, title: {}, body: { 'index.html': {} } }],
      ['https://marketplace.visualstudio.com/items?itemname=esbenp.pretti', { _index: 2894, title: {}, body: { 'index.html': {} } }],
      [
        'https://marketplace.visualstudio.com/items?itemname=madskristensen.javascriptpretti',
        { _index: 2899, title: {}, body: { 'index.html': {} } },
      ],
      [
        'https://marketplace.visualstudio.com/items?itemname=madskristensen.webanalyz',
        { _index: 2902, title: {}, body: { 'index.html': {} } },
      ],
      ['https://stackoverflow.com/questions/18515254/recurs', { _index: 2059, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['httpsvc', { _index: 36, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['icellrendererangularcomp', { _index: 1520, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['icellrendererparam', { _index: 1523, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['icon', { _index: 1642, title: {}, body: { 'components/HomeComponent.html': {}, 'index.html': {} } }],
      [
        'id',
        {
          _index: 126,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'identifi',
        {
          _index: 402,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'ie',
        {
          _index: 1219,
          title: {},
          body: {
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'index.html': {},
          },
        },
      ],
      ['ierrorapi', { _index: 1820, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'ifram',
        {
          _index: 1904,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['immedi', { _index: 2229, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['immut', { _index: 462, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'implement',
        {
          _index: 303,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'guards/AuthGuard.html': {},
            'components/ChartsComponent.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavSearchComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['implicit', { _index: 1533, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      [
        'import',
        {
          _index: 102,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'includ',
        {
          _index: 1091,
          title: {},
          body: {
            'modules/ComponentsModule.html': {},
            'pipes/FilterPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'incom',
        {
          _index: 1926,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'index',
        {
          _index: 6,
          title: { 'index.html': {} },
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'classes/DesktopUtils.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['index.html', { _index: 2874, title: {}, body: { 'index.html': {} } }],
      ['index.t', { _index: 2907, title: {}, body: { 'index.html': {} } }],
      ['indexestodelet', { _index: 437, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['indexestodelete.foreach(num', { _index: 460, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['indexestodelete.push(i', { _index: 446, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['indexlabel', { _index: 2610, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['indexlabelfontcolor', { _index: 2613, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['indexlabelfonts', { _index: 2612, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'individu',
        {
          _index: 242,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'info',
        {
          _index: 2,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['inform', { _index: 1412, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'inherit',
        {
          _index: 1361,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['init', { _index: 1145, title: {}, body: { 'injectables/ContextService.html': {}, 'interfaces/Window.html': {} } }],
      [
        'initi',
        {
          _index: 589,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'interfaces/Window.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['initialst', { _index: 2772, title: {}, body: { 'coverage.html': {} } }],
      [
        'inject',
        {
          _index: 0,
          title: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'injectables/ContextService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/MonolithService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/MonolithService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['inject(mat_dialog_data', { _index: 1109, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      [
        'input',
        {
          _index: 240,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['insert', { _index: 93, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['insid', { _index: 2496, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['instal', { _index: 2845, title: {}, body: { 'index.html': {} } }],
      [
        'instanc',
        {
          _index: 463,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['instanceof', { _index: 596, title: {}, body: { 'components/AppComponent.html': {}, 'injectables/AuthService.html': {} } }],
      ['instanti', { _index: 2397, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['instead', { _index: 2099, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['interact', { _index: 389, title: {}, body: { 'classes/ApiUtils.html': {}, 'classes/DesktopUtils.html': {} } }],
      ['interapp', { _index: 510, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['intercept', { _index: 1748, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ['intercept(req', { _index: 1751, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      [
        'interceptor',
        {
          _index: 697,
          title: { 'interceptors/HttpInterceptorService.html': {} },
          body: { 'modules/AppModule.html': {}, 'interceptors/HttpInterceptorService.html': {} },
        },
      ],
      [
        'interfac',
        {
          _index: 629,
          title: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'interfaces/Settings.html': {},
            'interfaces/Window.html': {},
          },
          body: {
            'injectables/AppConfigService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['intern', { _index: 1403, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'interv',
        {
          _index: 1247,
          title: {},
          body: {
            'pipes/DurationPipe.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['interval(1000).subscrib', { _index: 1873, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['invalid', { _index: 1855, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['isarray', { _index: 2077, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isarray(curr', { _index: 2095, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['isbrows', { _index: 749, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['isbutton', { _index: 1777, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      [
        'isedit',
        {
          _index: 1555,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['isempti', { _index: 2073, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isempty(prune(valu', { _index: 2092, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['isempty(valu', { _index: 2090, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['isload', { _index: 2515, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['islogin', { _index: 1829, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ["isn't", { _index: 1625, title: {}, body: { 'components/HomeComponent.html': {}, 'index.html': {} } }],
      ['isnan', { _index: 2069, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isnan(valu', { _index: 2088, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['isnul', { _index: 2067, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isnull(valu', { _index: 2087, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['isobject', { _index: 2075, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isobject(valu', { _index: 2091, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        'isopen',
        {
          _index: 1542,
          title: {},
          body: { 'components/HeaderComponent.html': {}, 'components/NavComponent.html': {} },
        },
      ],
      ['isplatformbrows', { _index: 813, title: {}, body: { 'injectables/AppSettings.html': {}, 'components/LoginComponent.html': {} } }],
      ['isplatformbrowser(this.platformid', { _index: 786, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['isstr', { _index: 2071, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isstring(valu', { _index: 2089, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['issu', { _index: 2233, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['isundefin', { _index: 2065, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['isundefined(valu', { _index: 2086, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["it'", { _index: 1322, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'item',
        {
          _index: 450,
          title: {},
          body: { 'classes/ApiUtils.html': {}, 'injectables/ContextService.html': {}, 'pipes/FilterPipe.html': {} },
        },
      ],
      ['item[0].nam', { _index: 1733, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['itemclick', { _index: 2580, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['iter', { _index: 409, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['iusag', { _index: 2848, title: {}, body: { 'index.html': {} } }],
      ['javascript', { _index: 2060, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['john', { _index: 1266, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'js',
        {
          _index: 1397,
          title: {},
          body: {
            'injectables/GlobalErrorHandler.html': {},
            'classes/ObjectUtils.html': {},
            'interfaces/Window.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'json',
        {
          _index: 324,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/StringPipe.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['json.parse(json.stringify(obj', { _index: 2100, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        'json.parse(str',
        {
          _index: 527,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'json.stringify(st',
        {
          _index: 858,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['json.stringify(valu', { _index: 2291, title: {}, body: { 'pipes/StringPipe.html': {} } }],
      ['json/javascript', { _index: 2052, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['juser', { _index: 1840, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['karma', { _index: 2697, title: {}, body: { 'changelog.html': {} } }],
      ['keep', { _index: 430, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'key',
        {
          _index: 101,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'components/GridStatusBarComponent.html': {},
            'injectables/ModalsService.html': {},
            'classes/ObjectUtils.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'keybi',
        {
          _index: 195,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['keyof', { _index: 817, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['kiwi', { _index: 2159, title: {}, body: { 'components/QaComponent.html': {} } }],
      [
        'known',
        {
          _index: 1794,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['label', { _index: 1004, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } }],
      ['labelfontfamili', { _index: 2591, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['labelfonts', { _index: 2590, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['labelformatt', { _index: 2592, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['last', { _index: 2042, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['later', { _index: 1737, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      [
        'latest',
        {
          _index: 2240,
          title: {},
          body: { 'injectables/ServiceWorkerService.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      [
        'launch',
        {
          _index: 359,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['launchlogoutmod', { _index: 887, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'launchmodalcompon',
        {
          _index: 358,
          title: { 'components/LaunchModalComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['launchmodalsuccess', { _index: 2150, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['launchmodalsuccess(ev', { _index: 2152, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['launchmodalwork', { _index: 2149, title: {}, body: { 'components/QaComponent.html': {} } }],
      [
        'layout',
        {
          _index: 361,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'layoutmaincompon',
        {
          _index: 360,
          title: { 'components/LayoutMainComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'layoutsinglecompon',
        {
          _index: 363,
          title: { 'components/LayoutSingleComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'lazi',
        {
          _index: 700,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'index.html': {},
          },
        },
      ],
      ['lazymodul', { _index: 2910, title: {}, body: { 'index.html': {} } }],
      ['lead', { _index: 1262, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['leav', { _index: 2503, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['left', { _index: 451, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['leftov', { _index: 2094, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['legaci', { _index: 1837, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'legend',
        {
          _index: 325,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'interfaces/Window.html': {},
            'overview.html': {},
          },
        },
      ],
      ['legendtext', { _index: 2615, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['length', { _index: 2318, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['letter', { _index: 2317, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['level', { _index: 1728, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      [
        'lg',
        {
          _index: 973,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        'lib',
        {
          _index: 1707,
          title: {},
          body: {
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'index.html': {},
          },
        },
      ],
      ['librari', { _index: 2903, title: {}, body: { 'index.html': {} } }],
      ['licens', { _index: 1441, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['licensemanag', { _index: 1442, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['licensemanager.setlicensekey(environment.licenses.aggrid', { _index: 1443, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['light2', { _index: 2572, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['line', { _index: 873, title: {}, body: { 'guards/AuthGuard.html': {}, 'interfaces/Window.html': {} } }],
      [
        'link',
        {
          _index: 1776,
          title: {},
          body: { 'components/LaunchModalComponent.html': {}, 'pipes/PhoneNumberPipe.html': {}, 'index.html': {} },
        },
      ],
      ['lint', { _index: 2895, title: {}, body: { 'index.html': {} } }],
      [
        'list',
        {
          _index: 1946,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'listen',
        {
          _index: 491,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['listenformessag', { _index: 2126, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'listenformessages(alloweddomain',
        {
          _index: 1894,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['listento', { _index: 511, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'liter',
        {
          _index: 96,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ContextService.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['live', { _index: 473, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'load',
        {
          _index: 76,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'directives/FocusDirective.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'modules/HomeModule.html': {},
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['loadenvset', { _index: 619, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['loader', { _index: 740, title: {}, body: { 'modules/AppServerModule.html': {}, 'dependencies.html': {} } }],
      [
        'loaderror',
        {
          _index: 237,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['loan', { _index: 2041, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['local', { _index: 769, title: {}, body: { 'injectables/AppSettings.html': {}, 'index.html': {} } }],
      ['localprop', { _index: 750, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'localstorag',
        {
          _index: 519,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppSettings.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['localstorage/sessionstorag', { _index: 822, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['locat', { _index: 53, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'injectables/AppSettings.html': {} } }],
      ['lodash', { _index: 2805, title: {}, body: { 'dependencies.html': {}, 'index.html': {} } }],
      [
        'log',
        {
          _index: 140,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      ['loganberri', { _index: 2161, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['logerror', { _index: 1424, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['logerror(errormsg', { _index: 1404, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['loggedout', { _index: 986, title: {}, body: { 'injectables/AuthService.html': {}, 'components/LoginComponent.html': {} } }],
      [
        'login',
        {
          _index: 610,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        "login'},{'nam",
        {
          _index: 366,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['login(data', { _index: 898, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['login.component.html', { _index: 1809, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'logincompon',
        {
          _index: 365,
          title: { 'components/LoginComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['logo', { _index: 2875, title: {}, body: { 'index.html': {} } }],
      [
        'logout',
        {
          _index: 368,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['logout(showlogoutmessag', { _index: 900, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['logoutmod', { _index: 881, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'logoutmodalcompon',
        {
          _index: 367,
          title: { 'components/LogoutModalComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'injectables/UIModalService.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['logouttim', { _index: 1863, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      [
        'long',
        {
          _index: 916,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['look', { _index: 768, title: {}, body: { 'injectables/AppSettings.html': {}, 'pipes/FilterPipe.html': {} } }],
      [
        'loop',
        {
          _index: 238,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppConfigService.html': {},
            'components/GridStatusBarComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'interfaces/Settings.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      ['lower', { _index: 2338, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      [
        'main',
        {
          _index: 686,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'components/LayoutMainComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        "main'},{'nam",
        {
          _index: 362,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['main.compon', { _index: 1082, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['main.component.html', { _index: 1802, title: {}, body: { 'components/LayoutMainComponent.html': {} } }],
      ['main.component.t', { _index: 1801, title: {}, body: { 'components/LayoutMainComponent.html': {}, 'coverage.html': {} } }],
      ['main.component.ts:7', { _index: 1803, title: {}, body: { 'components/LayoutMainComponent.html': {} } }],
      [
        'make',
        {
          _index: 48,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AuthService.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FullScreenDirective.html': {},
            'components/HomeComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'index.html': {},
          },
        },
      ],
      ['makeclick', { _index: 2105, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ["man'", { _index: 2877, title: {}, body: { 'index.html': {} } }],
      [
        'manag',
        {
          _index: 470,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/ModalsService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['mangostein', { _index: 2162, title: {}, body: { 'components/QaComponent.html': {} } }],
      [
        'mani',
        {
          _index: 432,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      ['manifest.json', { _index: 2881, title: {}, body: { 'index.html': {} } }],
      ['manipul', { _index: 2294, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['manual', { _index: 1358, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'map',
        {
          _index: 109,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'components/AppComponent.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['map((r', { _index: 149, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['map((respons', { _index: 948, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['map(r', { _index: 131, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['map(rout', { _index: 598, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'map(statu',
        {
          _index: 233,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['mapchartdata', { _index: 2605, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'mapped/sourc',
        {
          _index: 197,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['mapped[0].datapoints.length', { _index: 1047, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['mapped[0].datapoints.revers', { _index: 1049, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['marionberri', { _index: 2160, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['master', { _index: 2904, title: {}, body: { 'index.html': {} } }],
      ['masterpage/footer/footer.compon', { _index: 1079, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['masterpage/header/header.compon', { _index: 1080, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['masterpage/main/layout', { _index: 1081, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['masterpage/nav/nav.compon', { _index: 1085, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['masterpage/nav/search/nav', { _index: 1086, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['masterpage/single/layout', { _index: 1083, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['mat_dialog_data', { _index: 1106, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      ['matbuttonmodul', { _index: 2443, title: {}, body: { 'modules/VendorModule.html': {} } }],
      [
        'match',
        {
          _index: 184,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['matdialog', { _index: 1938, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['matdialogmodul', { _index: 2444, title: {}, body: { 'modules/VendorModule.html': {} } }],
      [
        'matdialogref',
        {
          _index: 1099,
          title: {},
          body: { 'components/ConfirmationModalComponent.html': {}, 'injectables/ModalsService.html': {} },
        },
      ],
      ['materi', { _index: 2448, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['matexpansionmodul', { _index: 2445, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['matformfieldmodul', { _index: 2440, title: {}, body: { 'modules/VendorModule.html': {} } }],
      [
        'math.floor(math.random',
        {
          _index: 1891,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'classes/StringUtils.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'math.floor(this.elem.nativeelement.getboundingclientrect().height',
        { _index: 1382, title: {}, body: { 'directives/FullScreenDirective.html': {} } },
      ],
      ['math.floor(valu', { _index: 1251, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      [
        'math.round(this.elem.nativeelement.getboundingclientrect().top',
        { _index: 1369, title: {}, body: { 'directives/FullScreenDirective.html': {} } },
      ],
      ['maticonmodul', { _index: 2438, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['matinputmodul', { _index: 2441, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['matmenumodul', { _index: 2439, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['matrix', { _index: 939, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['matselectmodul', { _index: 2442, title: {}, body: { 'modules/VendorModule.html': {} } }],
      [
        'memoiz',
        {
          _index: 208,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['memori', { _index: 781, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'menu',
        {
          _index: 1135,
          title: {},
          body: {
            'injectables/ContextService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/NavComponent.html': {},
          },
        },
      ],
      [
        "menu'},{'nam",
        {
          _index: 357,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['menu.compon', { _index: 2004, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      ['menu.component.html', { _index: 1723, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['menu.component.scss', { _index: 1722, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['menu.component.t', { _index: 1721, title: {}, body: { 'components/HomeContextMenuComponent.html': {}, 'coverage.html': {} } }],
      ['menu.component.ts:13', { _index: 1725, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['menu.component.ts:17', { _index: 1727, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['menu.component.ts:21', { _index: 1726, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['menu.list', { _index: 1148, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['menu.list.t', { _index: 2824, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      ['menu.module.t', { _index: 1118, title: {}, body: { 'modules/ContextModule.html': {} } }],
      ['menu.servic', { _index: 1122, title: {}, body: { 'modules/ContextModule.html': {} } }],
      ['menu.service.t', { _index: 1124, title: {}, body: { 'injectables/ContextService.html': {}, 'coverage.html': {} } }],
      ['menu.service.ts:24', { _index: 1140, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['menu.service.ts:34', { _index: 1133, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['menu.service.ts:7', { _index: 1129, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'menu/context',
        {
          _index: 1117,
          title: {},
          body: {
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/MonolithModule.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['menuitemdef', { _index: 1615, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['menuref', { _index: 1125, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['mergemap', { _index: 581, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['mergemap(rout', { _index: 602, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'messag',
        {
          _index: 486,
          title: { 'interfaces/Message.html': {} },
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['message.ev', { _index: 514, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['message.payload', { _index: 517, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['message.servic', { _index: 500, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'message.service.t',
        {
          _index: 1880,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['message.service.ts:106', { _index: 2134, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:124', { _index: 2132, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:22', { _index: 2140, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:24', { _index: 2141, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:26', { _index: 2139, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:28', { _index: 2131, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:36', { _index: 2133, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:58', { _index: 2138, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:69', { _index: 2136, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:83', { _index: 2135, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      ['message.service.ts:98', { _index: 2137, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'messageact',
        {
          _index: 502,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['messageactions.end_multiscreen', { _index: 533, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['messageactions.resync_ui', { _index: 516, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'messagecomplet',
        {
          _index: 1883,
          title: { 'interfaces/MessageComplete.html': {} },
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'messageev',
        {
          _index: 1918,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['messagereceiv', { _index: 2127, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'messagereceived(ev',
        {
          _index: 1917,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'messagetarget',
        {
          _index: 1910,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'metadata',
        {
          _index: 305,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
          },
        },
      ],
      [
        'method',
        {
          _index: 10,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'minut',
        {
          _index: 931,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'pipes/DurationPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      ['minutesstr', { _index: 1258, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      [
        'miscellan',
        {
          _index: 2819,
          title: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['miss', { _index: 2048, title: {}, body: { 'components/NoContentComponent.html': {} } }],
      ['mobil', { _index: 2022, title: {}, body: { 'components/NavComponent.html': {} } }],
      [
        'modal',
        {
          _index: 891,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UiSelectorsService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        "modal'},{'nam",
        {
          _index: 339,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['modal.afterclosed().subscribe(reason', { _index: 1791, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modal.compon', { _index: 1077, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      [
        'modal.component.html',
        {
          _index: 1095,
          title: {},
          body: { 'components/ConfirmationModalComponent.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      [
        'modal.component.t',
        {
          _index: 1094,
          title: {},
          body: {
            'components/ConfirmationModalComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'modal.component.ts:10',
        {
          _index: 1104,
          title: {},
          body: { 'components/ConfirmationModalComponent.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['modal.component.ts:11', { _index: 1867, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['modal.component.ts:13', { _index: 1868, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['modal.component.ts:14', { _index: 1864, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['modal.component.ts:15', { _index: 1101, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      ['modal.component.ts:18', { _index: 1866, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['modal.component.ts:34', { _index: 1865, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['modal.component.ts:48', { _index: 1768, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modal.component.ts:52', { _index: 1770, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modal.component.ts:58', { _index: 1771, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modal.component.ts:79', { _index: 1769, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modal.component.ts:9', { _index: 1100, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      [
        'modal.data',
        {
          _index: 1969,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['modal.dataalt', { _index: 2360, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      [
        'modal.opt',
        {
          _index: 1967,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'modal.result.then',
        {
          _index: 1979,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['modal.s', { _index: 1962, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      [
        'modal/launch',
        {
          _index: 1088,
          title: {},
          body: {
            'modules/ComponentsModule.html': {},
            'components/LaunchModalComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'modaldur',
        {
          _index: 882,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['modalelem', { _index: 1797, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modalelem.result.then((reason', { _index: 1798, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      [
        'modalid',
        {
          _index: 1943,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'modallist',
        {
          _index: 1935,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['modalpop', { _index: 2206, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        'modalref',
        {
          _index: 1936,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['modalref.componentinstance.data', { _index: 2359, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['modalref.componentinstance.dataalt', { _index: 2361, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['modals/confirmation/confirm', { _index: 1076, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['modals/logout/logout', { _index: 1078, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['modals/modals.servic', { _index: 1774, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['modalservic', { _index: 2350, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      [
        'modalsservic',
        {
          _index: 1767,
          title: { 'injectables/ModalsService.html': {} },
          body: {
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['mode', { _index: 693, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'model',
        {
          _index: 192,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppConfigService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      ['models.envset', { _index: 623, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      [
        'models.us',
        {
          _index: 271,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      [
        'modifi',
        {
          _index: 204,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/ObjectUtils.html': {},
          },
        },
      ],
      [
        'modul',
        {
          _index: 651,
          title: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'modules.html': {},
          },
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['modulemaploadermodul', { _index: 737, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      [
        'modulewithprovid',
        {
          _index: 1074,
          title: {},
          body: {
            'modules/ComponentsModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
          },
        },
      ],
      ['monolith', { _index: 2031, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['monolith.rout', { _index: 2001, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      [
        'monolith.stor',
        {
          _index: 1985,
          title: {},
          body: { 'injectables/MonolithApiSelectorsService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      [
        'monolithapiselectorsservic',
        {
          _index: 1981,
          title: { 'injectables/MonolithApiSelectorsService.html': {} },
          body: {
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'monolithapiservic',
        {
          _index: 1669,
          title: { 'injectables/MonolithApiService.html': {} },
          body: {
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'monolithmodul',
        {
          _index: 1994,
          title: { 'modules/MonolithModule.html': {} },
          body: { 'modules/MonolithModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      [
        'monolithservic',
        {
          _index: 1999,
          title: { 'injectables/MonolithService.html': {} },
          body: {
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'monolithstor',
        {
          _index: 1984,
          title: {},
          body: { 'injectables/MonolithApiSelectorsService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['monolithstore.root', { _index: 1986, title: {}, body: { 'injectables/MonolithApiSelectorsService.html': {} } }],
      [
        'more',
        {
          _index: 216,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'changelog.html': {},
          },
        },
      ],
      ['mous', { _index: 1136, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'mouseev',
        {
          _index: 1132,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['ms', { _index: 1234, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      [
        'msg',
        {
          _index: 1927,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['much', { _index: 1337, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['multi', { _index: 557, title: {}, body: { 'injectables/AppCommsService.html': {}, 'modules/AppModule.html': {} } }],
      [
        'multipl',
        {
          _index: 220,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'multiscreen',
        {
          _index: 493,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      ['multiscreenst', { _index: 479, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['multiscreentoggl', { _index: 2365, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['multiscreentoggle(multiscreen', { _index: 2372, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['n', { _index: 2328, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'name',
        {
          _index: 33,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['nan', { _index: 2057, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['nativ', { _index: 160, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'nav',
        {
          _index: 372,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        "nav'},{'nam",
        {
          _index: 370,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['nav.component.html', { _index: 2010, title: {}, body: { 'components/NavComponent.html': {} } }],
      [
        'navcompon',
        {
          _index: 369,
          title: { 'components/NavComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['navig', { _index: 2685, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['navigationend', { _index: 577, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'navsearchcompon',
        {
          _index: 371,
          title: { 'components/NavSearchComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'need',
        {
          _index: 219,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'pipes/DebouncePipe.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['needkey', { _index: 1406, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['nest', { _index: 420, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['neue', { _index: 2518, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'new',
        {
          _index: 144,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'modules/AppModule.html': {},
            'pipes/DebouncePipe.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['newrecord', { _index: 412, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['next', { _index: 1753, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ['next.handle(authreq', { _index: 1762, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      [
        'ng',
        {
          _index: 928,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'modules/VendorModule.html': {},
            'changelog.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'ngafterviewinit',
        {
          _index: 1301,
          title: {},
          body: {
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'ngbactivemod',
        {
          _index: 1105,
          title: {},
          body: { 'components/ConfirmationModalComponent.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      ['ngbmodal', { _index: 2348, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['ngbmodalref', { _index: 912, title: {}, body: { 'injectables/AuthService.html': {}, 'injectables/UIModalService.html': {} } }],
      ['ngbmodul', { _index: 2437, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['ngbmodule.forroot', { _index: 2446, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['ngbootstrap', { _index: 2447, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['ngbtabchangeev', { _index: 2386, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['ngfactori', { _index: 739, title: {}, body: { 'modules/AppServerModule.html': {}, 'dependencies.html': {} } }],
      [
        'ngmodul',
        {
          _index: 669,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'index.html': {},
          },
        },
      ],
      ['ngonchang', { _index: 1328, title: {}, body: { 'directives/FullScreenDirective.html': {}, 'interfaces/Window.html': {} } }],
      [
        'ngondestroy',
        {
          _index: 1169,
          title: {},
          body: {
            'components/CounterComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'ngoninit',
        {
          _index: 313,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['ngrx', { _index: 711, title: {}, body: { 'modules/AppModule.html': {}, 'index.html': {} } }],
      ['ngrx/entiti', { _index: 2793, title: {}, body: { 'dependencies.html': {} } }],
      [
        'ngrx/store',
        {
          _index: 106,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'modules/AppModule.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['ngsw', { _index: 2888, title: {}, body: { 'index.html': {} } }],
      ['nguniversal/express', { _index: 2795, title: {}, body: { 'dependencies.html': {} } }],
      ['nguniversal/modul', { _index: 738, title: {}, body: { 'modules/AppServerModule.html': {}, 'dependencies.html': {} } }],
      [
        'ngx',
        {
          _index: 1120,
          title: {},
          body: {
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'ngzone',
        {
          _index: 1198,
          title: {},
          body: { 'pipes/DebouncePipe.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      [
        'nocontentcompon',
        {
          _index: 374,
          title: { 'components/NoContentComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['node', { _index: 2809, title: {}, body: { 'dependencies.html': {} } }],
      ['node_modules/libnam', { _index: 2917, title: {}, body: { 'index.html': {} } }],
      [
        'non',
        {
          _index: 699,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/ModalsService.html': {},
            'components/QaComponent.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['none', { _index: 2504, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['nopreload', { _index: 675, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['norefresh', { _index: 977, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['normal', { _index: 2524, title: {}, body: { 'interfaces/Window.html': {}, 'index.html': {} } }],
      ['notat', { _index: 940, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['note', { _index: 2900, title: {}, body: { 'index.html': {} } }],
      [
        'notifi',
        {
          _index: 529,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      [
        'now',
        {
          _index: 443,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'pipes/DurationPipe.html': {},
            'injectables/GlobalErrorHandler.html': {},
          },
        },
      ],
      ['npm', { _index: 2847, title: {}, body: { 'index.html': {} } }],
      [
        'null',
        {
          _index: 127,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 438,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'directives/FullScreenDirective.html': {},
            'components/HomeComponent-1.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'components/NavSearchComponent.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['number).trim().slice(0', { _index: 2123, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['number.length', { _index: 2119, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['number.pip', { _index: 2263, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['number.pipe.t', { _index: 2103, title: {}, body: { 'pipes/PhoneNumberPipe.html': {}, 'coverage.html': {} } }],
      ['number.pipe.ts:8', { _index: 2106, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['number.slice(0', { _index: 2120, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['number.slice(3', { _index: 2121, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['obfus', { _index: 793, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'obfusc',
        {
          _index: 524,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['obfuscateadd', { _index: 2296, title: {}, body: { 'classes/StringUtils.html': {}, 'injectables/UIStoreService.html': {} } }],
      ['obfuscateadd(str', { _index: 2374, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['obfuscateadd(v', { _index: 2304, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['obfuscateremov', { _index: 2297, title: {}, body: { 'classes/StringUtils.html': {}, 'injectables/UIStoreService.html': {} } }],
      ['obfuscateremove(str', { _index: 2376, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['obfuscateremove(v', { _index: 2308, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['obfusci', { _index: 2414, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['obfusuc', { _index: 2399, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['obj', { _index: 864, title: {}, body: { 'injectables/AppSettings.html': {}, 'classes/ObjectUtils.html': {} } }],
      [
        'object',
        {
          _index: 55,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'pipes/CountPipe.html': {},
            'pipes/FilterPipe.html': {},
            'components/HomeComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/MonolithApiService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/StringPipe.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['object.keys(dict).foreach(key', { _index: 458, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['object.keys(dict).length', { _index: 453, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'object.keys(modal).length',
        {
          _index: 1959,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'object.keys(settings).foreach(key',
        { _index: 630, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      ['object.keys(value).length', { _index: 1163, title: {}, body: { 'pipes/CountPipe.html': {} } }],
      [
        'objectutil',
        {
          _index: 1882,
          title: { 'classes/ObjectUtils.html': {} },
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'objectutils.sanitize(event.data',
        {
          _index: 1928,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'objectutils.sanitize(msg',
        {
          _index: 1933,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['objprop', { _index: 1272, title: {}, body: { 'pipes/FilterPipe.html': {}, 'pipes/SortPipe.html': {} } }],
      ['obser', { _index: 1869, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      [
        'observ',
        {
          _index: 73,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'components/CounterComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['occur', { _index: 320, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['of(error', { _index: 143, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['of(this.cache[url', { _index: 123, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'offset',
        {
          _index: 1338,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'classes/StringUtils.html': {} },
        },
      ],
      ['offsetamount', { _index: 2300, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['offsetbottom', { _index: 1329, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['offsettop', { _index: 1330, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'on',
        {
          _index: 215,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/StringUtils.html': {},
            'index.html': {},
          },
        },
      ],
      ['onchang', { _index: 1324, title: {}, body: { 'directives/FullScreenDirective.html': {}, 'interfaces/Window.html': {} } }],
      [
        'onclos',
        {
          _index: 1937,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'ondestroy',
        {
          _index: 1165,
          title: {},
          body: {
            'components/CounterComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['onfilterglob', { _index: 1665, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['onfilterglobal(searchterm', { _index: 1677, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'oninit',
        {
          _index: 304,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/CounterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['onlin', { _index: 2836, title: {}, body: { 'index.html': {} } }],
      ['onlogin', { _index: 1814, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['onres', { _index: 1364, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['onrowsselect', { _index: 1666, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['onrowsselected(us', { _index: 1681, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['onrowupd', { _index: 1667, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['onstatechang', { _index: 1668, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['onsubmit', { _index: 1857, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['onsuccess', { _index: 1795, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      [
        'open',
        {
          _index: 553,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'injectables/ContextService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'open(modalid',
        {
          _index: 1941,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['open(nam', { _index: 1130, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'openmod',
        {
          _index: 1765,
          title: {},
          body: { 'components/LaunchModalComponent.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      [
        'oper',
        {
          _index: 165,
          title: {},
          body: { 'injectables/ApiHttpService.html': {}, 'classes/ApiUtils.html': {}, 'classes/ObjectUtils.html': {} },
        },
      ],
      [
        'option',
        {
          _index: 35,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
          },
        },
      ],
      ['option.format', { _index: 2663, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['option.pip', { _index: 2662, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['orang', { _index: 2158, title: {}, body: { 'components/QaComponent.html': {} } }],
      [
        'origin',
        {
          _index: 1626,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'otherwis',
        {
          _index: 464,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'pipes/FilterPipe.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'out',
        {
          _index: 178,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'injectables/UIStoreService.html': {},
            'changelog.html': {},
            'overview.html': {},
          },
        },
      ],
      ['outdat', { _index: 2246, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        'output',
        {
          _index: 286,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['outstand', { _index: 454, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['over', { _index: 452, title: {}, body: { 'classes/ApiUtils.html': {}, 'interfaces/Window.html': {} } }],
      [
        'overflow',
        {
          _index: 1343,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['overflowi', { _index: 1332, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['overflowx', { _index: 1331, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'overlay',
        {
          _index: 1362,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['overrid', { _index: 1371, title: {}, body: { 'directives/FullScreenDirective.html': {}, 'interfaces/Window.html': {} } }],
      ['overview', { _index: 2921, title: { 'overview.html': {} }, body: { 'overview.html': {} } }],
      ['packag', { _index: 2782, title: { 'dependencies.html': {} }, body: { 'index.html': {} } }],
      ['package.json', { _index: 2865, title: {}, body: { 'index.html': {} } }],
      [
        'pad',
        {
          _index: 751,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['pad(val', { _index: 2311, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'page',
        {
          _index: 575,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'classes/DesktopUtils.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'pane',
        {
          _index: 1595,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'param',
        {
          _index: 118,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'injectables/ContextService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'paramet',
        {
          _index: 31,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ["params)['ngtempl", { _index: 1537, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['params.context.this.contextaction(params.valu', { _index: 1645, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['params.data', { _index: 1534, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['params.node.data', { _index: 1637, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['params.sess', { _index: 1834, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'parent',
        {
          _index: 530,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['pars', { _index: 2056, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['parseint(endcolor.substr(0', { _index: 2638, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['parseint(endcolor.substr(2', { _index: 2640, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['parseint(endcolor.substr(4', { _index: 2642, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['parseint(startcolor.substr(0', { _index: 2632, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['parseint(startcolor.substr(2', { _index: 2634, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['parseint(startcolor.substr(4', { _index: 2636, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['partial', { _index: 2478, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['pascal', { _index: 2336, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      [
        'pass',
        {
          _index: 84,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AuthService.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['password', { _index: 1841, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['past', { _index: 1640, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['patch', { _index: 156, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'path',
        {
          _index: 546,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'classes/DesktopUtils.html': {}, 'index.html': {} },
        },
      ],
      [
        'payload',
        {
          _index: 150,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppCommsService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['peach', { _index: 2163, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['pear', { _index: 2164, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['per', { _index: 2510, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['percent', { _index: 1333, title: {}, body: { 'directives/FullScreenDirective.html': {}, 'interfaces/Window.html': {} } }],
      [
        'perform',
        {
          _index: 403,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'components/AppComponent.html': {},
            'components/HomeComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      [
        'persist',
        {
          _index: 1778,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['phase', { _index: 875, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      [
        'phone',
        {
          _index: 1633,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'pipes/PhoneNumberPipe.html': {},
          },
        },
      ],
      [
        'phonenumb',
        {
          _index: 1661,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'pipes/PhoneNumberPipe.html': {},
          },
        },
      ],
      [
        'phonenumberpip',
        {
          _index: 2101,
          title: { 'pipes/PhoneNumberPipe.html': {} },
          body: {
            'pipes/PhoneNumberPipe.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['pie', { _index: 2476, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['pin', { _index: 2886, title: {}, body: { 'index.html': {} } }],
      [
        'pipe',
        {
          _index: 167,
          title: {
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
          },
          body: {
            'injectables/ApiHttpService.html': {},
            'components/AppComponent.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'modules/SharedModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['pipes/count.pip', { _index: 2264, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/debounce.pip', { _index: 2257, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/duration.pip', { _index: 2265, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/filter.pip', { _index: 2256, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/phon', { _index: 2262, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/saf', { _index: 2260, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/sort.pip', { _index: 2259, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/string.pip', { _index: 2258, title: {}, body: { 'modules/SharedModule.html': {} } }],
      ['pipes/text', { _index: 1439, title: {}, body: { 'modules/GridModule.html': {}, 'modules/SharedModule.html': {} } }],
      [
        'pipetransform',
        {
          _index: 1160,
          title: {},
          body: {
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
          },
        },
      ],
      ['plain', { _index: 1396, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['platform_id', { _index: 812, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['platformid', { _index: 764, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'pleas',
        {
          _index: 139,
          title: {},
          body: { 'injectables/ApiHttpService.html': {}, 'components/LoginComponent.html': {} },
        },
      ],
      ['plugin', { _index: 2549, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'point',
        {
          _index: 953,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'pipes/DebouncePipe.html': {}, 'interfaces/Window.html': {} },
        },
      ],
      ['pointer', { _index: 2578, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['poll', { _index: 2213, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['pollforupd', { _index: 2208, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['poor', { _index: 2876, title: {}, body: { 'index.html': {} } }],
      [
        'pop',
        {
          _index: 909,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['posit', { _index: 1323, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'post',
        {
          _index: 82,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'postmessag',
        {
          _index: 1884,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'postmessagelisten',
        {
          _index: 1885,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'postmessageservic',
        {
          _index: 482,
          title: { 'injectables/PostMessageService.html': {} },
          body: {
            'injectables/AppCommsService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['postmessagetoifram', { _index: 2128, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'postmessagetoiframe(id',
        {
          _index: 1911,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['postmessagetopar', { _index: 2129, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'postmessagetoparent(messag',
        {
          _index: 1907,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['postmessagetowindow', { _index: 2130, title: {}, body: { 'injectables/PostMessageService.html': {} } }],
      [
        'postmessagetowindow(refer',
        {
          _index: 1915,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['poststor', { _index: 17, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['poststore(url', { _index: 79, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['preloadallmodul', { _index: 674, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['preloadingstrategi', { _index: 708, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['prepend', { _index: 2314, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'present',
        {
          _index: 552,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/HomeComponent.html': {},
            'injectables/ModalsService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['prettier', { _index: 2855, title: {}, body: { 'index.html': {} } }],
      [
        'prevent',
        {
          _index: 1221,
          title: {},
          body: {
            'classes/DesktopUtils.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['previou', { _index: 2541, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'primari',
        {
          _index: 100,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'components/AppComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['primarykey', { _index: 1701, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'privat',
        {
          _index: 8,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['prod', { _index: 692, title: {}, body: { 'modules/AppModule.html': {}, 'changelog.html': {}, 'index.html': {} } }],
      ['product', { _index: 2694, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      ['programmat', { _index: 2393, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['project', { _index: 2679, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      [
        'promis',
        {
          _index: 626,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/ModalsService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['promise(resolv', { _index: 728, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['promise.resolv', { _index: 650, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      [
        'prop',
        {
          _index: 255,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'pipes/FilterPipe.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      ['proper', { _index: 1410, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'properti',
        {
          _index: 7,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['properties/primari', { _index: 2827, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      ['propget', { _index: 753, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['propget(propkey', { _index: 765, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['propkey', { _index: 766, title: {}, body: { 'injectables/AppSettings.html': {}, 'miscellaneous/typealiases.html': {} } }],
      ['propreti', { _index: 1268, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['propset', { _index: 754, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['propset(propkey', { _index: 770, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['protect', { _index: 13, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'components/AppComponent.html': {} } }],
      ['protractor', { _index: 2699, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      [
        'provid',
        {
          _index: 655,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'providedin',
        {
          _index: 206,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      ['prune(curr', { _index: 2083, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        'public',
        {
          _index: 11,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['pull', { _index: 2079, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['pull(curr', { _index: 2096, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['pure', { _index: 1199, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['push', { _index: 445, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'put',
        {
          _index: 88,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      ['putstor', { _index: 18, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['putstore(url', { _index: 86, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['px', { _index: 1377, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'qa',
        {
          _index: 377,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['qa.compon', { _index: 2178, title: {}, body: { 'modules/QaModule.html': {} } }],
      ['qa.component.html', { _index: 2144, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['qa.component.scss', { _index: 2143, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['qa.rout', { _index: 2179, title: {}, body: { 'modules/QaModule.html': {} } }],
      [
        'qacompon',
        {
          _index: 376,
          title: { 'components/QaComponent.html': {} },
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'qamodul',
        {
          _index: 2173,
          title: { 'modules/QaModule.html': {} },
          body: { 'modules/QaModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      ['queri', { _index: 932, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['queryparam', { _index: 181, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'injectables/AuthService.html': {} } }],
      ['queryparams.token', { _index: 936, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['quick', { _index: 2838, title: {}, body: { 'index.html': {} } }],
      [
        'random',
        {
          _index: 1889,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      ['randomchar', { _index: 2327, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['randomli', { _index: 2508, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['randomstr', { _index: 2298, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['randomstring(length', { _index: 2315, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['rang', { _index: 2556, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['rapid', { _index: 2833, title: {}, body: { 'index.html': {} } }],
      ['re', { _index: 133, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['reactiveformsmodul', { _index: 2436, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['read/writ', { _index: 819, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['readi', { _index: 1367, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['readm', { _index: 2702, title: {}, body: { 'changelog.html': {} } }],
      ['reason', { _index: 1792, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['rebuild', { _index: 2863, title: {}, body: { 'index.html': {} } }],
      [
        'receiv',
        {
          _index: 617,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      ['record', { _index: 393, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['record[b', { _index: 428, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['recordid', { _index: 425, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['recordsnew', { _index: 413, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['recordsnew.foreach((record', { _index: 422, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['recordsupd', { _index: 436, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['red', { _index: 1644, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['redirect', { _index: 902, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['reduc', { _index: 683, title: {}, body: { 'modules/AppModule.html': {}, 'modules/MonolithModule.html': {} } }],
      ['redux', { _index: 2835, title: {}, body: { 'index.html': {} } }],
      [
        'ref',
        {
          _index: 1138,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'components/GridStatusBarComponent.html': {} },
        },
      ],
      [
        'refer',
        {
          _index: 418,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AuthService.html': {},
            'injectables/ContextService.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'reference.postmessage(this.addmetadata(messag',
        {
          _index: 1916,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'refresh',
        {
          _index: 71,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
          },
        },
      ],
      ['refresh(param', { _index: 1525, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['refreshtoken', { _index: 883, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['refreshtokenupd', { _index: 888, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['regardless', { _index: 1269, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'regist',
        {
          _index: 1126,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'interfaces/Window.html': {}, 'dependencies.html': {} },
        },
      ],
      ['register(nam', { _index: 1137, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'rehydr',
        {
          _index: 1623,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['reiniti', { _index: 2542, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['relev', { _index: 1772, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      [
        'reload',
        {
          _index: 821,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'changelog.html': {},
          },
        },
      ],
      ['rememb', { _index: 1842, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'remov',
        {
          _index: 407,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'guards/AuthGuard.html': {},
            'components/GridStatusBarComponent.html': {},
            'injectables/ModalsService.html': {},
            'classes/ObjectUtils.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['removefilt', { _index: 1456, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['removefilter(field', { _index: 1466, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['removegroup', { _index: 1457, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['removegroup(colid', { _index: 1469, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['removesort', { _index: 1458, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['renam', { _index: 2843, title: {}, body: { 'index.html': {} } }],
      ['render', { _index: 1521, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      [
        "renderer'},{'nam",
        {
          _index: 350,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['renderer.compon', { _index: 1436, title: {}, body: { 'modules/GridModule.html': {} } }],
      [
        'renderer.component.t',
        { _index: 1519, title: {}, body: { 'components/GridTemplateRendererComponent.html': {}, 'coverage.html': {} } },
      ],
      ['renderer.component.ts:15', { _index: 1528, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['renderer.component.ts:16', { _index: 1529, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['renderer.component.ts:18', { _index: 1526, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['renderer.component.ts:29', { _index: 1524, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      [
        'renderer/grid',
        {
          _index: 1435,
          title: {},
          body: {
            'modules/GridModule.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'replac',
        {
          _index: 395,
          title: {},
          body: { 'classes/ApiUtils.html': {}, 'injectables/AuthService.html': {}, 'index.html': {} },
        },
      ],
      ['replace(/[^a', { _index: 1283, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['replace/delete/add', { _index: 400, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['replace/upsert/delet', { _index: 397, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['repo', { _index: 2839, title: {}, body: { 'index.html': {} } }],
      ['req', { _index: 1756, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ['req.clon', { _index: 1760, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      ["req.headers.set('author", { _index: 1761, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } }],
      [
        'request',
        {
          _index: 50,
          title: {},
          body: { 'injectables/ApiHttpService.html': {}, 'injectables/GlobalErrorHandler.html': {} },
        },
      ],
      [
        'requir',
        {
          _index: 1662,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        "require('lodash/camelcas",
        { _index: 628, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      ["require('lodash/capit", { _index: 2341, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      ["require('lodash/clonedeep", { _index: 2082, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/defaultsdeep", { _index: 2456, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["require('lodash/escap", { _index: 2325, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ["require('lodash/forown", { _index: 2064, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isarray", { _index: 2078, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isempti", { _index: 2074, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isnan", { _index: 2070, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isnul", { _index: 2068, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isobject", { _index: 2076, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isstr", { _index: 2072, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/isundefin", { _index: 2066, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      [
        "require('lodash/keybi",
        {
          _index: 196,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ["require('lodash/pul", { _index: 2080, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ["require('lodash/startcas", { _index: 2026, title: {}, body: { 'components/NavComponent.html': {} } }],
      ["require('lodash/tolow", { _index: 2028, title: {}, body: { 'components/NavComponent.html': {} } }],
      ["require('lodash/unescap", { _index: 2323, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'reset',
        {
          _index: 265,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'components/CounterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'modules/HomeModule.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'resetstor',
        {
          _index: 254,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['resiz', { _index: 1317, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['resolv', { _index: 729, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['resourc', { _index: 2890, title: {}, body: { 'index.html': {} } }],
      ['resourceurl', { _index: 2200, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      [
        'respons',
        {
          _index: 124,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AuthService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['response.data.token', { _index: 949, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['rest', { _index: 723, title: {}, body: { 'modules/AppModule.html': {}, 'injectables/AuthService.html': {} } }],
      [
        'result',
        {
          _index: 77,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['result.then', { _index: 2241, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['resync', { _index: 496, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'resync_ui',
        {
          _index: 503,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['resyncui', { _index: 480, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'return',
        {
          _index: 39,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['returnurl', { _index: 981, title: {}, body: { 'injectables/AuthService.html': {}, 'components/LoginComponent.html': {} } }],
      [
        'reus',
        {
          _index: 199,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['revers', { _index: 1046, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['rgb', { _index: 2481, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['rid', { _index: 1839, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['right', { _index: 1674, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'rollup',
        {
          _index: 241,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'root',
        {
          _index: 207,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        "root'},{'nam",
        {
          _index: 332,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'rout',
        {
          _index: 574,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'injectables/AuthService.html': {},
            'components/HeaderComponent.html': {},
            'modules/HomeModule.html': {},
            'components/LoginComponent.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'coverage.html': {},
            'index.html': {},
          },
        },
      ],
      ['routabl', { _index: 2171, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['route.data', { _index: 603, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['route.firstchild', { _index: 599, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['route.outlet', { _index: 601, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['route;token=123456456456', { _index: 941, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['routechang', { _index: 562, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'router',
        {
          _index: 26,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'components/HeaderComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavSearchComponent.html': {},
          },
        },
      ],
      ['routermodul', { _index: 673, title: {}, body: { 'modules/AppModule.html': {}, 'modules/VendorModule.html': {} } }],
      ['routermodule.forroot(rout', { _index: 706, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['routersvc', { _index: 25, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['routes/charts/charts.compon', { _index: 2180, title: {}, body: { 'modules/QaModule.html': {} } }],
      ['routes/home/context', { _index: 2003, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      ['routes/home/home.compon', { _index: 2002, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      ['routesrecogn', { _index: 927, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'row',
        {
          _index: 1573,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['row?.phon', { _index: 1660, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['rowgroupindex', { _index: 1505, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'rowsselect',
        {
          _index: 1561,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['rowsselected(row', { _index: 1585, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['run', { _index: 2683, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      [
        'rxj',
        {
          _index: 107,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppCommsService.html': {},
            'components/CounterComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['rxjs/internal/behaviorsubject', { _index: 1951, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      [
        'rxjs/oper',
        {
          _index: 111,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AuthService.html': {},
            'components/CounterComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
          },
        },
      ],
      ['s', { _index: 2326, title: {}, body: { 'classes/StringUtils.html': {}, 'index.html': {} } }],
      ['safari', { _index: 2885, title: {}, body: { 'index.html': {} } }],
      ['safe', { _index: 2191, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['safehtml', { _index: 2184, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      [
        'safehtmlpip',
        {
          _index: 2181,
          title: { 'pipes/SafeHtmlPipe.html': {} },
          body: {
            'pipes/SafeHtmlPipe.html': {},
            'modules/SharedModule.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['saferesourceurl', { _index: 2189, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['safescript', { _index: 2187, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['safestyl', { _index: 2186, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['safeurl', { _index: 2188, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      [
        'same',
        {
          _index: 1890,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'sampl',
        {
          _index: 1764,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['san', { _index: 2520, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'sanit',
        {
          _index: 1925,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['sanitize(obj', { _index: 2061, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['sass', { _index: 2810, title: {}, body: { 'dependencies.html': {} } }],
      [
        'save',
        {
          _index: 1582,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'injectables/UIStoreService.html': {}, 'index.html': {} },
        },
      ],
      ['savest', { _index: 2420, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['scaffold', { _index: 2687, title: {}, body: { 'changelog.html': {} } }],
      ['scatter', { _index: 2468, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['schematics/upd', { _index: 2797, title: {}, body: { 'dependencies.html': {} } }],
      ['scheme', { _index: 2513, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'screen',
        {
          _index: 558,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['screen.direct', { _index: 2267, title: {}, body: { 'modules/SharedModule.html': {} } }],
      [
        'screen.directive.t',
        {
          _index: 1316,
          title: {},
          body: {
            'directives/FullScreenDirective.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['screen.directive.ts:13', { _index: 1359, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:15', { _index: 1360, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:18', { _index: 1342, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:20', { _index: 1340, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:22', { _index: 1351, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:24', { _index: 1348, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:26', { _index: 1346, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:29', { _index: 1352, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:33', { _index: 1336, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:42', { _index: 1357, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:49', { _index: 1356, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:56', { _index: 1354, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['screen.directive.ts:60', { _index: 1353, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'script',
        {
          _index: 2197,
          title: {},
          body: { 'pipes/SafeHtmlPipe.html': {}, 'interfaces/Window.html': {}, 'index.html': {} },
        },
      ],
      ['script.onload', { _index: 2536, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['script.src', { _index: 2535, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['script.typ', { _index: 2533, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['scriptsload', { _index: 2529, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'scroll',
        {
          _index: 1232,
          title: {},
          body: {
            'classes/DesktopUtils.html': {},
            'directives/FullScreenDirective.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['scrollbarh', { _index: 1696, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'scrub',
        {
          _index: 1919,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['search', { _index: 1289, title: {}, body: { 'pipes/FilterPipe.html': {}, 'components/NavSearchComponent.html': {} } }],
      [
        "search'},{'nam",
        {
          _index: 373,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['search.compon', { _index: 1087, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['search.component.html', { _index: 2034, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['search.component.t', { _index: 2033, title: {}, body: { 'components/NavSearchComponent.html': {}, 'coverage.html': {} } }],
      ['search.component.ts:13', { _index: 2036, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['search.component.ts:17', { _index: 2037, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['search.component.ts:9', { _index: 2035, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['searchterm', { _index: 1680, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['searchvalu', { _index: 1271, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'second',
        {
          _index: 961,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'pipes/DurationPipe.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      [
        'secondari',
        {
          _index: 1972,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['secondsstr', { _index: 1260, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      [
        'secur',
        {
          _index: 179,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DesktopUtils.html': {},
          },
        },
      ],
      ['see', { _index: 321, title: {}, body: { 'components/ApiStateComponent.html': {}, 'index.html': {} } }],
      [
        'select',
        {
          _index: 252,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'classes/DesktopUtils.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['selectiontyp', { _index: 1697, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'selector',
        {
          _index: 198,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['send', { _index: 1409, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'separ',
        {
          _index: 474,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'components/HomeComponent.html': {}, 'index.html': {} },
        },
      ],
      ['serif', { _index: 2521, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['serv', { _index: 2684, title: {}, body: { 'changelog.html': {}, 'index.html': {} } }],
      [
        'server',
        {
          _index: 85,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AuthService.html': {},
            'changelog.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      ['servermodul', { _index: 736, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      [
        'servic',
        {
          _index: 725,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'injectables/ContextService.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'index.html': {},
          },
        },
      ],
      ['services/auth.servic', { _index: 871, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['serviceworkermodul', { _index: 678, title: {}, body: { 'modules/AppModule.html': {} } }],
      ["serviceworkermodule.register('./ngsw", { _index: 712, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'serviceworkerservic',
        {
          _index: 568,
          title: { 'injectables/ServiceWorkerService.html': {} },
          body: {
            'components/AppComponent.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['servies/monolith.servic', { _index: 2006, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      [
        'session',
        {
          _index: 182,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      ['sessionexpir', { _index: 884, title: {}, body: { 'injectables/AuthService.html': {}, 'components/LoginComponent.html': {} } }],
      ['sessionstorag', { _index: 752, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['sessionstorageclear', { _index: 755, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['sessiontim', { _index: 885, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'set',
        {
          _index: 128,
          title: { 'interfaces/Settings.html': {} },
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'components/NavComponent.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'index.html': {},
          },
        },
      ],
      ['setapiurl(valu', { _index: 806, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['setinterv', { _index: 2234, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['settim', { _index: 889, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'settimeout',
        {
          _index: 554,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'pipes/DebouncePipe.html': {},
            'directives/FullScreenDirective.html': {},
          },
        },
      ],
      ['settimer(expirationsecond', { _index: 905, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['settimerdefaultsecond', { _index: 886, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['settings)[key', { _index: 639, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['settings.apiurl', { _index: 727, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['settingsrestor', { _index: 756, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['settingsrestore(st', { _index: 775, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['settingssav', { _index: 757, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['settingssave(st', { _index: 777, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['settoken(valu', { _index: 802, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['setui(valu', { _index: 798, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['setusername(valu', { _index: 810, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'share',
        {
          _index: 110,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'modules/AppModule.html': {},
            'modules/ComponentsModule.html': {},
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'modules/SiteModule.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'index.html': {},
          },
        },
      ],
      ['shared/stores/api/api.selectors.servic', { _index: 2005, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      [
        'shared/stores/api/api.store.servic',
        { _index: 1708, title: {}, body: { 'components/HomeComponent-1.html': {}, 'modules/MonolithModule.html': {} } },
      ],
      [
        'sharedmodul',
        {
          _index: 1070,
          title: { 'modules/SharedModule.html': {} },
          body: {
            'modules/ComponentsModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['shell', { _index: 2878, title: {}, body: { 'index.html': {} } }],
      ['shift', { _index: 2302, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['show', { _index: 917, title: {}, body: { 'injectables/AuthService.html': {}, 'interfaces/Window.html': {} } }],
      ['show/hid', { _index: 2489, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['showerrordetail', { _index: 1811, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['showindexlabel', { _index: 2497, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['showinfo', { _index: 1700, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['showinlegend', { _index: 2608, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['showlegend', { _index: 2495, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['showlogoutmessag', { _index: 903, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['shown', { _index: 1223, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['showpassword', { _index: 1812, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['showtooltip', { _index: 2498, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['showxaxislabel', { _index: 2500, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['showyaxislabel', { _index: 2501, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'sidebar',
        {
          _index: 1590,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'sidebaropen',
        {
          _index: 1556,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      [
        'sidebartoggl',
        {
          _index: 1562,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      [
        'sidebartoggle(toggl',
        {
          _index: 1587,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['sign', { _index: 1858, title: {}, body: { 'components/LoginComponent.html': {}, 'components/NavComponent.html': {} } }],
      ['simpl', { _index: 67, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['simplifystr', { _index: 1279, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['simplifystring(elem', { _index: 1292, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['simplifystring(elem[objprop', { _index: 1291, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'singl',
        {
          _index: 212,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'components/HomeComponent-1.html': {},
            'components/LayoutSingleComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        "single'},{'nam",
        {
          _index: 364,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['single.compon', { _index: 1084, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['single.component.html', { _index: 1806, title: {}, body: { 'components/LayoutSingleComponent.html': {} } }],
      ['single.component.t', { _index: 1805, title: {}, body: { 'components/LayoutSingleComponent.html': {}, 'coverage.html': {} } }],
      ['single.component.ts:7', { _index: 1807, title: {}, body: { 'components/LayoutSingleComponent.html': {} } }],
      [
        'site',
        {
          _index: 701,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'sitemodul',
        {
          _index: 661,
          title: { 'modules/SiteModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SiteModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['sitemodule.forroot', { _index: 714, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'size',
        {
          _index: 1782,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'index.html': {},
          },
        },
      ],
      ['slice(0', { _index: 2112, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['slug', { _index: 547, title: {}, body: { 'injectables/AppCommsService.html': {}, 'index.html': {} } }],
      [
        'sm',
        {
          _index: 1734,
          title: {},
          body: {
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['sm/md/lg/xl/full', { _index: 1783, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['solut', { _index: 2901, title: {}, body: { 'index.html': {} } }],
      ['soon', { _index: 1719, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['sort', { _index: 1474, title: {}, body: { 'components/GridStatusBarComponent.html': {}, 'pipes/SortPipe.html': {} } }],
      ['sort((a', { _index: 1045, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['sortasc', { _index: 2280, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['sortdesc', { _index: 2283, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['sortdir', { _index: 2276, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      [
        'sortpip',
        {
          _index: 2251,
          title: { 'pipes/SortPipe.html': {} },
          body: {
            'modules/SharedModule.html': {},
            'pipes/SortPipe.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['sorts/filters/group', { _index: 1476, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'sourc',
        {
          _index: 3,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'modules/ChartModule.html': {},
            'components/ChartsComponent.html': {},
            'modules/ComponentsModule.html': {},
            'components/ConfirmationModalComponent.html': {},
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/FooterComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'modules/HomeModule.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/MonolithService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'modules/QaModule.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'modules/VendorModule.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
          },
        },
      ],
      [
        'space',
        {
          _index: 1320,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'pipes/PhoneNumberPipe.html': {} },
        },
      ],
      ['special', { _index: 2114, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      [
        'specif',
        {
          _index: 1134,
          title: {},
          body: {
            'injectables/ContextService.html': {},
            'classes/DesktopUtils.html': {},
            'classes/StringUtils.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'specifi',
        {
          _index: 1187,
          title: {},
          body: {
            'pipes/DebouncePipe.html': {},
            'pipes/FilterPipe.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['spline', { _index: 2465, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['splinearea', { _index: 2466, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['src', { _index: 457, title: {}, body: { 'classes/ApiUtils.html': {}, 'index.html': {} } }],
      ['src/.../api.props.t', { _index: 2821, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      ['src/.../api.reducer.t', { _index: 2829, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['src/.../app', { _index: 2825, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      [
        'src/.../app.settings.t',
        {
          _index: 2822,
          title: {},
          body: { 'miscellaneous/enumerations.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['src/.../context', { _index: 2823, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      ['src/.../full', { _index: 2927, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['src/.../modals.service.t', { _index: 2925, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['src/.../ui.modal.service.t', { _index: 2926, title: {}, body: { 'miscellaneous/typealiases.html': {} } }],
      ['src/.../ui.reducer.t', { _index: 2830, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      ['src/app/app.component.t', { _index: 560, title: {}, body: { 'components/AppComponent.html': {}, 'coverage.html': {} } }],
      ['src/app/app.component.ts:13', { _index: 570, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['src/app/app.component.ts:23', { _index: 571, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['src/app/app.component.ts:40', { _index: 572, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['src/app/app.module.t', { _index: 664, title: {}, body: { 'modules/AppModule.html': {}, 'coverage.html': {} } }],
      ['src/app/app.server.module.t', { _index: 735, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      ['src/app/components/api', { _index: 300, title: {}, body: { 'components/ApiStateComponent.html': {}, 'coverage.html': {} } }],
      [
        'src/app/components/components.module.t',
        { _index: 1072, title: {}, body: { 'modules/ComponentsModule.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/counter/counter.component.t',
        { _index: 1164, title: {}, body: { 'components/CounterComponent.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/components/counter/counter.component.ts:12', { _index: 1170, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['src/app/components/counter/counter.component.ts:16', { _index: 1172, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['src/app/components/counter/counter.component.ts:23', { _index: 1174, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['src/app/components/counter/counter.component.ts:30', { _index: 1175, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['src/app/components/counter/counter.component.ts:37', { _index: 1173, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['src/app/components/counter/counter.component.ts:42', { _index: 1171, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['src/app/components/launch', { _index: 1763, title: {}, body: { 'components/LaunchModalComponent.html': {}, 'coverage.html': {} } }],
      [
        'src/app/components/masterpage/footer/footer.component.t',
        { _index: 1311, title: {}, body: { 'components/FooterComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/masterpage/footer/footer.component.ts:7',
        { _index: 1314, title: {}, body: { 'components/FooterComponent.html': {} } },
      ],
      [
        'src/app/components/masterpage/header/header.component.t',
        { _index: 1540, title: {}, body: { 'components/HeaderComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/masterpage/header/header.component.ts:13',
        { _index: 1544, title: {}, body: { 'components/HeaderComponent.html': {} } },
      ],
      [
        'src/app/components/masterpage/header/header.component.ts:9',
        { _index: 1543, title: {}, body: { 'components/HeaderComponent.html': {} } },
      ],
      [
        'src/app/components/masterpage/main/layout',
        { _index: 1800, title: {}, body: { 'components/LayoutMainComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/masterpage/nav/nav.component.t',
        { _index: 2009, title: {}, body: { 'components/NavComponent.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/components/masterpage/nav/nav.component.ts:14', { _index: 2020, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['src/app/components/masterpage/nav/nav.component.ts:16', { _index: 2024, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['src/app/components/masterpage/nav/nav.component.ts:18', { _index: 2018, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['src/app/components/masterpage/nav/nav.component.ts:20', { _index: 2015, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['src/app/components/masterpage/nav/nav.component.ts:24', { _index: 2017, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['src/app/components/masterpage/nav/nav.component.ts:28', { _index: 2016, title: {}, body: { 'components/NavComponent.html': {} } }],
      [
        'src/app/components/masterpage/nav/search/nav',
        { _index: 2032, title: {}, body: { 'components/NavSearchComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/masterpage/single/layout',
        { _index: 1804, title: {}, body: { 'components/LayoutSingleComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/modals/confirmation/confirm',
        { _index: 1093, title: {}, body: { 'components/ConfirmationModalComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/modals/logout/logout',
        { _index: 1862, title: {}, body: { 'components/LogoutModalComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/components/modals/modals.service.t',
        {
          _index: 1934,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['src/app/components/modals/modals.service.ts:110', { _index: 1940, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/components/modals/modals.service.ts:24', { _index: 1947, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/components/modals/modals.service.ts:26', { _index: 1950, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/components/modals/modals.service.ts:28', { _index: 1945, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/components/modals/modals.service.ts:31', { _index: 1939, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/components/modals/modals.service.ts:33', { _index: 1944, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/components/modals/modals.service.ts:72', { _index: 1942, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['src/app/libs/chart/chart.component.t', { _index: 2449, title: {}, body: { 'interfaces/Window.html': {}, 'coverage.html': {} } }],
      ['src/app/libs/chart/chart.module.t', { _index: 992, title: {}, body: { 'modules/ChartModule.html': {} } }],
      [
        'src/app/libs/context',
        {
          _index: 1116,
          title: {},
          body: {
            'modules/ContextModule.html': {},
            'injectables/ContextService.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'src/app/libs/grid/grid',
        {
          _index: 1445,
          title: {},
          body: {
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['src/app/libs/grid/grid.module.t', { _index: 1430, title: {}, body: { 'modules/GridModule.html': {} } }],
      ['src/app/libs/grid/grid/grid.component.t', { _index: 2726, title: {}, body: { 'coverage.html': {} } }],
      ['src/app/libs/grid/pipes/text', { _index: 2345, title: {}, body: { 'pipes/TextCasePipe-1.html': {}, 'coverage.html': {} } }],
      ['src/app/routes/home/columns.t', { _index: 2729, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/routes/home/home.component.t',
        { _index: 1547, title: {}, body: { 'components/HomeComponent.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/routes/home/home.component.ts:105', { _index: 1574, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:110', { _index: 1581, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:115', { _index: 1586, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:122', { _index: 1598, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:138', { _index: 1596, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:143', { _index: 1588, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:150', { _index: 1597, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:159', { _index: 1593, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:168', { _index: 1591, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:174', { _index: 1583, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:19', { _index: 1600, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:20', { _index: 1606, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:21', { _index: 1604, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:22', { _index: 1603, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:23', { _index: 1605, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:28', { _index: 1612, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:29', { _index: 1609, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:30', { _index: 1602, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:31', { _index: 1607, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:32', { _index: 1571, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:34', { _index: 1610, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:36', { _index: 1584, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:61', { _index: 1577, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.component.ts:69', { _index: 1579, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['src/app/routes/home/home.module.t', { _index: 1742, title: {}, body: { 'modules/HomeModule.html': {} } }],
      ['src/app/routes/home/home.routes.t', { _index: 2732, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/routes/login/login.component.t',
        { _index: 1808, title: {}, body: { 'components/LoginComponent.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/routes/login/login.component.ts:110', { _index: 1817, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:14', { _index: 1822, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:15', { _index: 1828, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:16', { _index: 1821, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:17', { _index: 1826, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:18', { _index: 1825, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:19', { _index: 1823, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:20', { _index: 1827, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:21', { _index: 1824, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:23', { _index: 1816, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:33', { _index: 1818, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/login/login.component.ts:73', { _index: 1819, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['src/app/routes/monolith/monolith.module.t', { _index: 2000, title: {}, body: { 'modules/MonolithModule.html': {} } }],
      ['src/app/routes/monolith/monolith.routes.t', { _index: 2734, title: {}, body: { 'coverage.html': {} } }],
      ['src/app/routes/monolith/routes/home/columns.t', { _index: 2735, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/routes/monolith/routes/home/context',
        { _index: 1720, title: {}, body: { 'components/HomeContextMenuComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.t',
        { _index: 1663, title: {}, body: { 'components/HomeComponent-1.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:105',
        { _index: 1687, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:113',
        { _index: 1684, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:121',
        { _index: 1682, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:134',
        { _index: 1683, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:142',
        { _index: 1673, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:149',
        { _index: 1691, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:162',
        { _index: 1675, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:19',
        { _index: 1706, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:20',
        { _index: 1694, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:21',
        { _index: 1695, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:22',
        { _index: 1704, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:23',
        { _index: 1703, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:25',
        { _index: 1693, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:31',
        { _index: 1702, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:40',
        { _index: 1692, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:43',
        { _index: 1671, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:47',
        { _index: 1705, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:52',
        { _index: 1676, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:72',
        { _index: 1689, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:80',
        { _index: 1678, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:87',
        { _index: 1690, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/routes/home/home.component.ts:96',
        { _index: 1688, title: {}, body: { 'components/HomeComponent-1.html': {} } },
      ],
      [
        'src/app/routes/monolith/servies/monolith.service.t',
        { _index: 2007, title: {}, body: { 'injectables/MonolithService.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/routes/monolith/servies/monolith.service.ts:4',
        { _index: 2008, title: {}, body: { 'injectables/MonolithService.html': {} } },
      ],
      ['src/app/routes/monolith/shared/stores/api/api.map.t', { _index: 2738, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/routes/monolith/shared/stores/api/api.props.t',
        { _index: 2828, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.selectors.service.t',
        { _index: 1982, title: {}, body: { 'injectables/MonolithApiSelectorsService.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.selectors.service.ts:26',
        { _index: 1983, title: {}, body: { 'injectables/MonolithApiSelectorsService.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.store.service.t',
        { _index: 1987, title: {}, body: { 'injectables/MonolithApiService.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.store.service.ts:18',
        { _index: 1992, title: {}, body: { 'injectables/MonolithApiService.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.store.service.ts:23',
        { _index: 1988, title: {}, body: { 'injectables/MonolithApiService.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.store.service.ts:31',
        { _index: 1991, title: {}, body: { 'injectables/MonolithApiService.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.store.service.ts:42',
        { _index: 1990, title: {}, body: { 'injectables/MonolithApiService.html': {} } },
      ],
      [
        'src/app/routes/monolith/shared/stores/api/api.store.service.ts:50',
        { _index: 1989, title: {}, body: { 'injectables/MonolithApiService.html': {} } },
      ],
      ['src/app/routes/no', { _index: 2044, title: {}, body: { 'components/NoContentComponent.html': {}, 'coverage.html': {} } }],
      ['src/app/routes/qa/qa.component.t', { _index: 2142, title: {}, body: { 'components/QaComponent.html': {}, 'coverage.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:11', { _index: 2155, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:12', { _index: 2156, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:13', { _index: 2167, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:25', { _index: 2168, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:36', { _index: 2151, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:40', { _index: 2154, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:42', { _index: 2153, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.component.ts:9', { _index: 2169, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['src/app/routes/qa/qa.module.t', { _index: 2177, title: {}, body: { 'modules/QaModule.html': {} } }],
      ['src/app/routes/qa/qa.routes.t', { _index: 2743, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/routes/qa/routes/charts/charts.component.t',
        { _index: 995, title: {}, body: { 'components/ChartsComponent.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:106',
        { _index: 1018, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:12',
        { _index: 1025, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:133',
        { _index: 1013, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:14',
        { _index: 1021, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:15',
        { _index: 1024, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:16',
        { _index: 1023, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:17',
        { _index: 1022, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:19',
        { _index: 1026, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:20',
        { _index: 1009, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:24',
        { _index: 1014, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:31',
        { _index: 1010, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      [
        'src/app/routes/qa/routes/charts/charts.component.ts:69',
        { _index: 1015, title: {}, body: { 'components/ChartsComponent.html': {} } },
      ],
      ['src/app/routes/qa/routes/charts/summary.t', { _index: 2745, title: {}, body: { 'coverage.html': {} } }],
      ['src/app/routes/qa/routes/charts/transfers.t', { _index: 2746, title: {}, body: { 'coverage.html': {} } }],
      ['src/app/routes/qa/routes/charts/user.t', { _index: 2747, title: {}, body: { 'coverage.html': {} } }],
      ['src/app/shared/app.set', { _index: 2357, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      [
        'src/app/shared/app.settings.t',
        {
          _index: 744,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['src/app/shared/app.settings.ts:105', { _index: 767, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:127', { _index: 771, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:147', { _index: 778, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:166', { _index: 776, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:22', { _index: 789, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:24', { _index: 792, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:25', { _index: 790, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:26', { _index: 795, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:28', { _index: 787, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:31', { _index: 784, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:33', { _index: 797, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:36', { _index: 799, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:41', { _index: 779, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:49', { _index: 783, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:51', { _index: 801, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:54', { _index: 803, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:60', { _index: 782, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:62', { _index: 805, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:65', { _index: 807, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:72', { _index: 785, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:74', { _index: 809, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:77', { _index: 811, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:80', { _index: 763, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['src/app/shared/app.settings.ts:94', { _index: 773, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'src/app/shared/directives/focus.directive.t',
        { _index: 1294, title: {}, body: { 'directives/FocusDirective.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/shared/directives/focus.directive.ts:14', { _index: 1304, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      ['src/app/shared/directives/focus.directive.ts:18', { _index: 1306, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      [
        'src/app/shared/directives/ful',
        {
          _index: 1315,
          title: {},
          body: {
            'directives/FullScreenDirective.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['src/app/shared/guards/auth.guard.t', { _index: 867, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['src/app/shared/guards/auth.guard.ts:11', { _index: 869, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['src/app/shared/guards/auth.guard.ts:14', { _index: 870, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      [
        'src/app/shared/interceptors/error.interceptor.t',
        { _index: 1386, title: {}, body: { 'injectables/GlobalErrorHandler.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/shared/interceptors/error.interceptor.ts:12',
        { _index: 1390, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } },
      ],
      [
        'src/app/shared/interceptors/error.interceptor.ts:5',
        { _index: 1388, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } },
      ],
      [
        'src/app/shared/interceptors/http.interceptor.t',
        { _index: 1747, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } },
      ],
      [
        'src/app/shared/interceptors/http.interceptor.ts:14',
        { _index: 1755, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } },
      ],
      [
        'src/app/shared/interceptors/http.interceptor.ts:7',
        { _index: 1749, title: {}, body: { 'interceptors/HttpInterceptorService.html': {} } },
      ],
      ['src/app/shared/pipes/count.pipe.t', { _index: 1157, title: {}, body: { 'pipes/CountPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/count.pipe.ts:8', { _index: 1159, title: {}, body: { 'pipes/CountPipe.html': {} } }],
      ['src/app/shared/pipes/debounce.pipe.t', { _index: 1183, title: {}, body: { 'pipes/DebouncePipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/debounce.pipe.ts:13', { _index: 1190, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['src/app/shared/pipes/debounce.pipe.ts:7', { _index: 1192, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['src/app/shared/pipes/debounce.pipe.ts:8', { _index: 1196, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['src/app/shared/pipes/debounce.pipe.ts:9', { _index: 1194, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['src/app/shared/pipes/duration.pipe.t', { _index: 1245, title: {}, body: { 'pipes/DurationPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/duration.pipe.ts:10', { _index: 1249, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['src/app/shared/pipes/filter.pipe.t', { _index: 1265, title: {}, body: { 'pipes/FilterPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/filter.pipe.ts:12', { _index: 1274, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['src/app/shared/pipes/phon', { _index: 2102, title: {}, body: { 'pipes/PhoneNumberPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/saf', { _index: 2182, title: {}, body: { 'pipes/SafeHtmlPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/sort.pipe.t', { _index: 2274, title: {}, body: { 'pipes/SortPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/sort.pipe.ts:11', { _index: 2278, title: {}, body: { 'pipes/SortPipe.html': {} } }],
      ['src/app/shared/pipes/string.pipe.t', { _index: 2288, title: {}, body: { 'pipes/StringPipe.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/pipes/string.pipe.ts:9', { _index: 2290, title: {}, body: { 'pipes/StringPipe.html': {} } }],
      ['src/app/shared/pipes/text', { _index: 2334, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'coverage.html': {} } }],
      [
        'src/app/shared/services/app',
        {
          _index: 468,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'interfaces/Settings.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'src/app/shared/services/auth.service.t',
        { _index: 880, title: {}, body: { 'injectables/AuthService.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/shared/services/auth.service.ts:111', { _index: 906, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:126', { _index: 894, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:145', { _index: 901, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:19', { _index: 923, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:21', { _index: 915, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:23', { _index: 924, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:25', { _index: 913, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:27', { _index: 920, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:29', { _index: 893, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:61', { _index: 899, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['src/app/shared/services/auth.service.ts:88', { _index: 904, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'src/app/shared/services/post',
        {
          _index: 1879,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/app/shared/services/servic',
        { _index: 2203, title: {}, body: { 'injectables/ServiceWorkerService.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/shared/shared.module.t', { _index: 2253, title: {}, body: { 'modules/SharedModule.html': {}, 'coverage.html': {} } }],
      [
        'src/app/shared/stores/api',
        {
          _index: 193,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['src/app/shared/stores/api/api.actions.t', { _index: 2762, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/shared/stores/api/api.http.base.service.t',
        { _index: 5, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.http.base.service.ts:108',
        { _index: 87, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.http.base.service.ts:136',
        { _index: 90, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      ['src/app/shared/stores/api/api.http.base.service.ts:16', { _index: 30, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'src/app/shared/stores/api/api.http.base.service.ts:165',
        { _index: 47, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.http.base.service.ts:190',
        { _index: 37, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.http.base.service.ts:198',
        { _index: 59, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      ['src/app/shared/stores/api/api.http.base.service.ts:30', { _index: 66, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['src/app/shared/stores/api/api.http.base.service.ts:44', { _index: 75, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['src/app/shared/stores/api/api.http.base.service.ts:80', { _index: 81, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['src/app/shared/stores/api/api.map.t', { _index: 2765, title: {}, body: { 'coverage.html': {} } }],
      ['src/app/shared/stores/api/api.props.t', { _index: 2826, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      [
        'src/app/shared/stores/api/api.reducer.t',
        { _index: 2766, title: {}, body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.selectors.service.t',
        { _index: 186, title: {}, body: { 'injectables/ApiSelectorsService.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.selectors.service.ts:28',
        { _index: 189, title: {}, body: { 'injectables/ApiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/api/api.store.service.t',
        { _index: 251, title: {}, body: { 'injectables/ApiService.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/shared/stores/api/api.store.service.ts:24', { _index: 276, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['src/app/shared/stores/api/api.store.service.ts:29', { _index: 256, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['src/app/shared/stores/api/api.store.service.ts:37', { _index: 267, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['src/app/shared/stores/api/api.store.service.ts:48', { _index: 264, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['src/app/shared/stores/api/api.store.service.ts:56', { _index: 257, title: {}, body: { 'injectables/ApiService.html': {} } }],
      ['src/app/shared/stores/stor', { _index: 2358, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['src/app/shared/stores/ui/ui.actions.t', { _index: 2768, title: {}, body: { 'coverage.html': {} } }],
      [
        'src/app/shared/stores/ui/ui.modal.service.t',
        {
          _index: 2346,
          title: {},
          body: { 'injectables/UIModalService.html': {}, 'coverage.html': {}, 'miscellaneous/typealiases.html': {} },
        },
      ],
      ['src/app/shared/stores/ui/ui.modal.service.ts:103', { _index: 2351, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['src/app/shared/stores/ui/ui.modal.service.ts:26', { _index: 2354, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['src/app/shared/stores/ui/ui.modal.service.ts:28', { _index: 2355, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['src/app/shared/stores/ui/ui.modal.service.ts:30', { _index: 2353, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['src/app/shared/stores/ui/ui.modal.service.ts:33', { _index: 2349, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['src/app/shared/stores/ui/ui.modal.service.ts:63', { _index: 2352, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      [
        'src/app/shared/stores/ui/ui.reducer.t',
        { _index: 2771, title: {}, body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.t',
        { _index: 2419, title: {}, body: { 'injectables/UiSelectorsService.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.ts:10',
        { _index: 2432, title: {}, body: { 'injectables/UiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.ts:11',
        { _index: 2430, title: {}, body: { 'injectables/UiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.ts:12',
        { _index: 2424, title: {}, body: { 'injectables/UiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.ts:13',
        { _index: 2426, title: {}, body: { 'injectables/UiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.ts:14',
        { _index: 2428, title: {}, body: { 'injectables/UiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.selectors.service.ts:15',
        { _index: 2422, title: {}, body: { 'injectables/UiSelectorsService.html': {} } },
      ],
      [
        'src/app/shared/stores/ui/ui.store.service.t',
        { _index: 2364, title: {}, body: { 'injectables/UIStoreService.html': {}, 'coverage.html': {} } },
      ],
      ['src/app/shared/stores/ui/ui.store.service.ts:116', { _index: 2375, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:127', { _index: 2377, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:17', { _index: 2392, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:20', { _index: 2370, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:25', { _index: 2395, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:56', { _index: 2387, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:64', { _index: 2378, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:72', { _index: 2371, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:79', { _index: 2373, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:86', { _index: 2381, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/stores/ui/ui.store.service.ts:94', { _index: 2383, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['src/app/shared/utils/api', { _index: 384, title: {}, body: { 'classes/ApiUtils.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/utils/desktop', { _index: 1210, title: {}, body: { 'classes/DesktopUtils.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/utils/object', { _index: 2051, title: {}, body: { 'classes/ObjectUtils.html': {}, 'coverage.html': {} } }],
      ['src/app/shared/utils/str', { _index: 2293, title: {}, body: { 'classes/StringUtils.html': {}, 'coverage.html': {} } }],
      ['src/app/site.module.t', { _index: 2273, title: {}, body: { 'modules/SiteModule.html': {} } }],
      ['src/app/vendor.module.t', { _index: 2434, title: {}, body: { 'modules/VendorModule.html': {} } }],
      ['src/environments/environment.prod.t', { _index: 2776, title: {}, body: { 'coverage.html': {} } }],
      ['src/environments/environment.t', { _index: 2777, title: {}, body: { 'coverage.html': {} } }],
      ['src/test.t', { _index: 2778, title: {}, body: { 'coverage.html': {} } }],
      ['srcarray', { _index: 398, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['srcarray)[i][b', { _index: 439, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['srcarray.splice(num', { _index: 461, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['srcarray.unshift(dict[key', { _index: 459, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['srcarray[i', { _index: 442, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['ssn', { _index: 2043, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['ssr', { _index: 2880, title: {}, body: { 'index.html': {} } }],
      ['stack', { _index: 2479, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stackedarea', { _index: 2472, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stackedarea100', { _index: 2475, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stackedbar', { _index: 2471, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stackedbar100', { _index: 2474, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stackedcolumn', { _index: 2470, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stackedcolumn100', { _index: 2473, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['stale', { _index: 587, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['standard', { _index: 933, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'start',
        {
          _index: 490,
          title: { 'changelog.html': {}, 'index.html': {} },
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'components/CounterComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['startblu', { _index: 2635, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["startblue).tostring(16).split('.')[0", { _index: 2652, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['startcas', { _index: 2025, title: {}, body: { 'components/NavComponent.html': {}, 'coverage.html': {} } }],
      ['startcase(tolower(this.settings.usernam', { _index: 2023, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['startcolor', { _index: 2618, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['startcolor.length', { _index: 2626, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['startcolor.replace(/(.)/g', { _index: 2627, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'starter',
        {
          _index: 705,
          title: {},
          body: { 'modules/AppModule.html': {}, 'components/HeaderComponent.html': {}, 'index.html': {} },
        },
      ],
      ['starter.git', { _index: 2842, title: {}, body: { 'index.html': {} } }],
      ['startgreen', { _index: 2633, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["startgreen).tostring(16).split('.')[0", { _index: 2650, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['startr', { _index: 2631, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["startred).tostring(16).split('.')[0", { _index: 2648, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['startup', { _index: 717, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['startwith', { _index: 1176, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['stat', { _index: 2861, title: {}, body: { 'index.html': {} } }],
      [
        'state',
        {
          _index: 145,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      [
        "state'},{'nam",
        {
          _index: 330,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['state)[key', { _index: 2413, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'state.api.us',
        {
          _index: 202,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['state.compon', { _index: 1089, title: {}, body: { 'modules/ComponentsModule.html': {} } }],
      ['state.component.html', { _index: 311, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['state.component.scss', { _index: 309, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['state.component.t', { _index: 302, title: {}, body: { 'components/ApiStateComponent.html': {}, 'coverage.html': {} } }],
      ['state.component.ts:13', { _index: 316, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['state.component.ts:15', { _index: 314, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['state.component.ts:19', { _index: 317, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['state.error', { _index: 323, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['state.hasownproperty(key', { _index: 2411, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'state/api',
        {
          _index: 301,
          title: {},
          body: { 'components/ApiStateComponent.html': {}, 'modules/ComponentsModule.html': {}, 'coverage.html': {} },
        },
      ],
      ['state?.error?.messag', { _index: 319, title: {}, body: { 'components/ApiStateComponent.html': {} } }],
      ['statement', { _index: 2704, title: {}, body: { 'coverage.html': {} } }],
      [
        'static',
        {
          _index: 390,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'modules/ComponentsModule.html': {},
            'classes/DesktopUtils.html': {},
            'modules/HomeModule.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'modules/MonolithModule.html': {},
            'classes/ObjectUtils.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      [
        'statu',
        {
          _index: 214,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'status',
        {
          _index: 227,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'status.foreach(statussingl',
        {
          _index: 243,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'statusesnew',
        {
          _index: 230,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'statussingl',
        {
          _index: 244,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'statussingle.load',
        {
          _index: 245,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'statussingle.loaderror',
        {
          _index: 247,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['step', { _index: 2617, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['steplin', { _index: 2467, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'still',
        {
          _index: 249,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'stop',
        {
          _index: 447,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'components/CounterComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        'stoplisten',
        {
          _index: 1902,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['storag', { _index: 774, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'store',
        {
          _index: 24,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'changelog.html': {},
            'miscellaneous/enumerations.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'store.api.us',
        {
          _index: 210,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['store.ui.gridst', { _index: 2423, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['store.ui.mod', { _index: 2425, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['store.ui.multiscreen', { _index: 2427, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['store.ui.savest', { _index: 2429, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['store.ui.sidebaropen', { _index: 2431, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['store.ui.tabsactive[tabinstanceid', { _index: 2433, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      [
        'storeelem.ui.modal).subscribe((mod',
        {
          _index: 1958,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['storemodul', { _index: 682, title: {}, body: { 'modules/AppModule.html': {}, 'modules/MonolithModule.html': {} } }],
      ['storemodule.forroot', { _index: 710, title: {}, body: { 'modules/AppModule.html': {}, 'modules/MonolithModule.html': {} } }],
      ['storestaterestor', { _index: 2366, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['storestaterestore(uist', { _index: 2379, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['storestatesav', { _index: 2367, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['storestatesave(st', { _index: 2382, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['storesvc', { _index: 23, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'str',
        {
          _index: 520,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'pipes/FilterPipe.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['strawberri', { _index: 2166, title: {}, body: { 'components/QaComponent.html': {} } }],
      [
        'string',
        {
          _index: 42,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'interfaces/Settings.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['string(hour', { _index: 1257, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['string(minut', { _index: 1259, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['string(second', { _index: 1261, title: {}, body: { 'pipes/DurationPipe.html': {} } }],
      ['string(valu', { _index: 2292, title: {}, body: { 'pipes/StringPipe.html': {} } }],
      [
        'stringpip',
        {
          _index: 2252,
          title: { 'pipes/StringPipe.html': {} },
          body: {
            'modules/SharedModule.html': {},
            'pipes/StringPipe.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['stringsearch', { _index: 1290, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['stringsearch.includes(simplifystring(searchvalu', { _index: 1293, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'stringutil',
        {
          _index: 815,
          title: { 'classes/StringUtils.html': {} },
          body: {
            'injectables/AppSettings.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['stringutils.charshift(str', { _index: 2416, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'stringutils.obfuscateadd(str',
        { _index: 861, title: {}, body: { 'injectables/AppSettings.html': {}, 'injectables/UIStoreService.html': {} } },
      ],
      ['stringutils.obfuscateremove(st', { _index: 862, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['stringutils.obfuscateremove(str', { _index: 2417, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'stringutils.pad(str',
        { _index: 859, title: {}, body: { 'injectables/AppSettings.html': {}, 'injectables/UIStoreService.html': {} } },
      ],
      [
        'stringutils.trim(str',
        { _index: 863, title: {}, body: { 'injectables/AppSettings.html': {}, 'injectables/UIStoreService.html': {} } },
      ],
      ['strnew', { _index: 2330, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['strong', { _index: 2321, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['studio', { _index: 2898, title: {}, body: { 'index.html': {} } }],
      ['stuff', { _index: 1731, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      ['style', { _index: 2195, title: {}, body: { 'pipes/SafeHtmlPipe.html': {}, 'interfaces/Window.html': {} } }],
      [
        'styleurl',
        {
          _index: 308,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/CounterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'sub',
        {
          _index: 476,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        'sub.unsubscrib',
        {
          _index: 543,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'subject',
        {
          _index: 1881,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['submenu', { _index: 1643, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'submit',
        {
          _index: 1097,
          title: {},
          body: {
            'components/ConfirmationModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/NavSearchComponent.html': {},
          },
        },
      ],
      [
        'subscrib',
        {
          _index: 1956,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['subscribe(ev', { _index: 604, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'subscript',
        {
          _index: 498,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        'success',
        {
          _index: 922,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      ['successfulli', { _index: 1859, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'super',
        {
          _index: 261,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      [
        'super(http',
        {
          _index: 285,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      [
        'suppli',
        {
          _index: 423,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'pipes/FilterPipe.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['support', { _index: 161, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'modules.html': {} } }],
      [
        'sure',
        {
          _index: 631,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'injectables/AuthService.html': {},
            'directives/FullScreenDirective.html': {},
            'components/HomeComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Settings.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['svg', { _index: 2918, title: {}, body: { 'modules.html': {} } }],
      [
        'sw',
        {
          _index: 567,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        'switch',
        {
          _index: 513,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/ModalsService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['swupdat', { _index: 2210, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        't',
        {
          _index: 46,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'classes/ApiUtils.html': {},
            'components/ChartsComponent.html': {},
          },
        },
      ],
      ['tab', { _index: 2388, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['tab.svg', { _index: 2887, title: {}, body: { 'index.html': {} } }],
      ['tabact', { _index: 2421, title: {}, body: { 'injectables/UiSelectorsService.html': {} } }],
      ['tabchang', { _index: 2368, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['tabchange(tabinstanceid', { _index: 2384, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['tabid', { _index: 2385, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['tabid.nextid', { _index: 2406, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'tabinstanceid',
        {
          _index: 2390,
          title: {},
          body: { 'injectables/UIStoreService.html': {}, 'injectables/UiSelectorsService.html': {} },
        },
      ],
      ['tabl', { _index: 2781, title: {}, body: { 'coverage.html': {} } }],
      ["tablesort(document.getelementbyid('coverag", { _index: 2780, title: {}, body: { 'coverage.html': {} } }],
      ['tabset', { _index: 2389, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'tag',
        {
          _index: 1641,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
          },
        },
      ],
      [
        'target',
        {
          _index: 1906,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['tell', { _index: 536, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['temp', { _index: 2461, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'templat',
        {
          _index: 297,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'modules/GridModule.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['templatecontext', { _index: 1522, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      [
        'templateref',
        {
          _index: 1527,
          title: {},
          body: { 'components/GridTemplateRendererComponent.html': {}, 'components/HomeComponent.html': {} },
        },
      ],
      ['templatetooltip', { _index: 2507, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'templateurl',
        {
          _index: 310,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['term', { _index: 1679, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'test',
        {
          _index: 1538,
          title: {},
          body: {
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/QaComponent.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      ['text', { _index: 1216, title: {}, body: { 'classes/DesktopUtils.html': {}, 'interfaces/Window.html': {} } }],
      ['text/javascript', { _index: 2534, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['textarea', { _index: 1222, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['textarea.select', { _index: 1237, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['textarea.style.posit', { _index: 1231, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['textarea.textcont', { _index: 1230, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      [
        'textcas',
        {
          _index: 1513,
          title: {},
          body: {
            'components/GridStatusBarComponent.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
          },
        },
      ],
      [
        'textcasepip',
        {
          _index: 1429,
          title: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} },
          body: {
            'modules/GridModule.html': {},
            'modules/SharedModule.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['theme', { _index: 2571, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['then((data', { _index: 644, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['this._apiurl', { _index: 835, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this._sanitizer.bypasssecuritytrusthtml(valu', { _index: 2194, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['this._sanitizer.bypasssecuritytrustresourceurl(valu', { _index: 2201, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['this._sanitizer.bypasssecuritytrustscript(valu', { _index: 2198, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['this._sanitizer.bypasssecuritytruststyle(valu', { _index: 2196, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['this._sanitizer.bypasssecuritytrusturl(valu', { _index: 2199, title: {}, body: { 'pipes/SafeHtmlPipe.html': {} } }],
      ['this._token', { _index: 831, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this._ui', { _index: 823, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this._usernam', { _index: 840, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.activatedrout', { _index: 597, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['this.activemodal.clos', { _index: 1877, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      [
        'this.alloweddomain',
        {
          _index: 1895,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'this.alloweddomains.indexof(event.origin',
        {
          _index: 1929,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'this.api.getstatus',
        {
          _index: 224,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['this.api.resetstor', { _index: 979, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'this.api.select.getstate$(apiprops.pod',
        {
          _index: 225,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'this.api.select.getstate$(apiprops.producttyp',
        {
          _index: 226,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'this.api.select.us',
        {
          _index: 1611,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'this.api.users.delete(user).subscrib',
        {
          _index: 1659,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'this.api.users.get().subscrib',
        {
          _index: 1622,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'this.api.users.get(true).subscrib',
        {
          _index: 1655,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'this.api.users.post(this.formmain.value).subscrib',
        {
          _index: 1654,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'this.api.users.put(this.formmain.value).subscrib',
        {
          _index: 1651,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['this.appfocu', { _index: 1307, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      [
        'this.appid',
        {
          _index: 1924,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['this.appprops.token', { _index: 174, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'this.appsettingsupdate(data',
        { _index: 645, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      ['this.auth.logout', { _index: 879, title: {}, body: { 'guards/AuthGuard.html': {} } }],
      ['this.auth.logout(tru', { _index: 2030, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['this.authservice.login(this.formmain.value).subscrib', { _index: 1851, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.authservice.logoutmod', { _index: 1838, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.authservice.refreshtokenupd', { _index: 613, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['this.cach', { _index: 172, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.cache[url', { _index: 121, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'this.cacheclear',
        {
          _index: 173,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/MonolithApiService.html': {},
          },
        },
      ],
      ['this.calcheight', { _index: 1365, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.changedetector.markforcheck', { _index: 1207, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['this.chart', { _index: 2550, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.chart.destroy', { _index: 2676, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.chart.rend', { _index: 2553, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.chartinit', { _index: 2527, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.chartoptionscr', { _index: 2552, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.checkinterv', { _index: 2238, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.colorgradi', { _index: 2557, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.colorgradient[0', { _index: 2561, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.colorgradient[1', { _index: 2562, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.colorschem', { _index: 2545, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.colorscustom', { _index: 2544, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.colorscustom.join', { _index: 2547, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.colorset', { _index: 2583, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.comms.commsen', { _index: 593, title: {}, body: { 'components/AppComponent.html': {} } }],
      [
        'this.contextmenu',
        {
          _index: 1147,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'components/HomeContextMenuComponent.html': {} },
        },
      ],
      ['this.contextmenuservice.show.next', { _index: 1152, title: {}, body: { 'injectables/ContextService.html': {} } }],
      ['this.contextsvc.open(contextmenulist.hom', { _index: 1717, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'this.count',
        {
          _index: 1871,
          title: {},
          body: { 'components/LogoutModalComponent.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['this.countsperag', { _index: 1029, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.currentvalu', { _index: 1202, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      [
        'this.data',
        {
          _index: 1790,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['this.data.map(data', { _index: 2606, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.data[0', { _index: 2558, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.data[0].datapoints.length', { _index: 2559, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.data[0].label', { _index: 2616, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.datapointscount', { _index: 1028, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.datapointstopf', { _index: 1030, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.datapointstransferstot', { _index: 1056, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.datapointstransferstotal.push', { _index: 1057, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.dataset', { _index: 2540, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'this.deletestore(apimap.users.endpoint',
        {
          _index: 275,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['this.dialog.open(this.modallist[modal.modalid', { _index: 1968, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['this.dialog.open(this.modallist[modalid', { _index: 1977, title: {}, body: { 'injectables/ModalsService.html': {} } }],
      ['this.dialogref.close(this.data', { _index: 1110, title: {}, body: { 'components/ConfirmationModalComponent.html': {} } }],
      ['this.el', { _index: 1308, title: {}, body: { 'directives/FocusDirective.html': {}, 'interfaces/Window.html': {} } }],
      ['this.el.nativeel', { _index: 1309, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      ['this.el.nativeelement.focu', { _index: 1310, title: {}, body: { 'directives/FocusDirective.html': {} } }],
      ['this.elem', { _index: 1366, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.elem.nativeel', { _index: 1368, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ["this.elem.nativeelement.style['height", { _index: 1373, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ["this.elem.nativeelement.style['overflow", { _index: 1378, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.element.nativeel', { _index: 2539, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.endsession(error', { _index: 141, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.errorapi', { _index: 1846, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.errorlogapi', { _index: 1408, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'this.fb.group',
        {
          _index: 1628,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['this.filterglob', { _index: 1709, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['this.formattooltip', { _index: 2575, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.formatxlabel', { _index: 2594, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.formatxlabels(v', { _index: 2595, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.formatylabel', { _index: 2600, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.formatylabels(v', { _index: 2601, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'this.formmain',
        {
          _index: 1627,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'this.formmain.patchvalue(us',
        {
          _index: 1657,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['this.formmain.patchvalue(users[0', { _index: 1714, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'this.formmain.reset',
        {
          _index: 1652,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['this.formmain.value.rememb', { _index: 1848, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.formmain.value.usernam', { _index: 1849, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.getcolorschem', { _index: 2560, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'this.getstore(apimap.users.endpoint',
        {
          _index: 269,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['this.grid', { _index: 1486, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'this.grid.api.setfiltermodel(this.gridstate.filt',
        { _index: 1511, title: {}, body: { 'components/GridStatusBarComponent.html': {} } },
      ],
      ['this.grid.api.setsortmodel(nul', { _index: 1503, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridcolumnapi', { _index: 1488, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      [
        'this.gridcolumnapi.setcolumnstate(this.gridstate.column',
        { _index: 1509, title: {}, body: { 'components/GridStatusBarComponent.html': {} } },
      ],
      ['this.gridfilt', { _index: 1493, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridfilters.push', { _index: 1495, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridgroup', { _index: 1499, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridrowsselected[0', { _index: 1658, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        'this.gridst',
        {
          _index: 1491,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'components/HomeComponent.html': {} },
        },
      ],
      ['this.gridstate.column', { _index: 1498, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridstate.columns.filter((column', { _index: 1500, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridstate.columns.foreach(col', { _index: 1506, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridstate.filt', { _index: 1494, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridstate.filters[field', { _index: 1510, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.gridstate.filters[key', { _index: 1496, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.height', { _index: 1381, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.http', { _index: 641, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ["this.http.get('assets/mock", { _index: 946, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.http.post(url', { _index: 955, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.http.put(this.settings.apiurl', { _index: 918, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.httpsvc.delete(url', { _index: 168, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.httpsvc.get(url).pip', { _index: 130, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.httpsvc.get(url).pipe(shar', { _index: 122, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.httpsvc.patch(url', { _index: 157, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.httpsvc.post(url', { _index: 147, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.httpsvc.put(url', { _index: 154, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ["this.httpsvc.request('delet", { _index: 166, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.isbrows', { _index: 845, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'this.isedit',
        {
          _index: 1650,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['this.isload', { _index: 2526, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.isopen', { _index: 1546, title: {}, body: { 'components/HeaderComponent.html': {} } }],
      ['this.launchlogoutmod', { _index: 966, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.launchmodalwork', { _index: 2170, title: {}, body: { 'components/QaComponent.html': {} } }],
      ['this.localstorag', { _index: 829, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.localstorage[propkey', { _index: 850, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.loggedout', { _index: 1835, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.logout', { _index: 959, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.logouttim', { _index: 1872, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['this.logouttimer$.unsubscrib', { _index: 1876, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['this.mapchartdata', { _index: 2585, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'this.menu.register(contextmenulist.hom',
        {
          _index: 1146,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'components/HomeContextMenuComponent.html': {} },
        },
      ],
      ['this.menurefs[nam', { _index: 1151, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'this.messagereceived.bind(thi',
        {
          _index: 1899,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'this.messaging.listenformessages(environment.domains.listento).subscribe(messag',
        { _index: 512, title: {}, body: { 'injectables/AppCommsService.html': {} } },
      ],
      ['this.messaging.postmessagetowindow(this.ui.screen', { _index: 545, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.messaging.postmessagetowindow(window.open', { _index: 539, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.mod', { _index: 2239, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.modaldur', { _index: 969, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.modalduration).result.then', { _index: 974, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.modalpop', { _index: 2227, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        'this.modalref',
        {
          _index: 1975,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'this.modalref$.next(modalref',
        {
          _index: 1970,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'this.modalref$.subscribe(mod',
        {
          _index: 1978,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['this.modalref.componentinstance.data', { _index: 2362, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['this.modalref.componentinstance.dataalt', { _index: 2363, title: {}, body: { 'injectables/UIModalService.html': {} } }],
      ['this.modals.modalref$.subscribe(modalelem', { _index: 1796, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ["this.modals.open('logoutmodalcompon", { _index: 972, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.modals.open(this.mod', { _index: 1787, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      [
        'this.modalservice.open(this.modallist[modal.modalid',
        {
          _index: 1966,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'this.modalservice.open(this.modallist[modalid',
        {
          _index: 1976,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['this.multiscreenst', { _index: 535, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.ngondestroy', { _index: 2543, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.obfuscateadd(str', { _index: 2415, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['this.obfuscateremove(str', { _index: 2400, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['this.offsetbottom', { _index: 1370, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.offsettop', { _index: 1372, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'this.onclos',
        {
          _index: 1971,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      ['this.openmod', { _index: 2228, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.overflowi', { _index: 1379, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.overflowx', { _index: 1380, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.pad', { _index: 860, title: {}, body: { 'injectables/AppSettings.html': {}, 'injectables/UIStoreService.html': {} } }],
      ['this.param', { _index: 1487, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.params.columnapi', { _index: 1489, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.perc', { _index: 1375, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['this.persist', { _index: 1788, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['this.pollforupd', { _index: 2231, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      [
        'this.postmessag',
        {
          _index: 1901,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'this.postmessage$.next(msg',
        {
          _index: 1930,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'this.postmessagelisten',
        {
          _index: 1897,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'this.poststore(apimap.users.endpoint',
        {
          _index: 272,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      [
        'this.prop',
        {
          _index: 294,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['this.propget(appsettingsprops.apiurl', { _index: 836, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propget(appsettingsprops.token', { _index: 832, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propget(appsettingsprops.ui', { _index: 824, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propget(appsettingsprops.usernam', { _index: 841, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propset(appsettingsprops.apiurl', { _index: 839, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propset(appsettingsprops.token', { _index: 834, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propset(appsettingsprops.ui', { _index: 826, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.propset(appsettingsprops.usernam', { _index: 843, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'this.putstore(apimap.users.endpoint',
        {
          _index: 273,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['this.ref.detectchang', { _index: 1502, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.refresh(param', { _index: 1539, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['this.refreshtoken.subscrib', { _index: 956, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.refreshtokenupd', { _index: 978, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.reset', { _index: 1490, title: {}, body: { 'components/GridStatusBarComponent.html': {} } }],
      ['this.resyncui', { _index: 509, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.returnurl', { _index: 1843, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'this.rout',
        {
          _index: 293,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['this.route.queryparams.subscribe(param', { _index: 1833, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.route.queryparams.subscribe(queryparam', { _index: 935, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ["this.route.snapshot.queryparams['returnurl", { _index: 1844, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.routechang', { _index: 582, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['this.router.ev', { _index: 594, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['this.router.events.subscrib', { _index: 1545, title: {}, body: { 'components/HeaderComponent.html': {} } }],
      ['this.router.events.subscribe(v', { _index: 942, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ["this.router.navigate(['./search", { _index: 2040, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ["this.router.navigate(['/login", { _index: 987, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.router.navigate([this.returnurl', { _index: 1852, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.router.url', { _index: 982, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ["this.router.url.split('?')[0", { _index: 983, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ["this.router.url.tolowercase().indexof('login", { _index: 612, title: {}, body: { 'components/AppComponent.html': {} } }],
      ["this.routersvc.navigate(['/login", { _index: 180, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.rowsselect', { _index: 1713, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      ['this.scriptsload', { _index: 2525, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.search.typ', { _index: 2038, title: {}, body: { 'components/NavSearchComponent.html': {} } }],
      ['this.select.savestate$.subscribe((uist', { _index: 2402, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['this.sessionexpir', { _index: 950, title: {}, body: { 'injectables/AuthService.html': {}, 'components/LoginComponent.html': {} } }],
      ['this.sessionstorag', { _index: 827, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.sessionstorage[propkey', { _index: 849, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.sessiontim', { _index: 964, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.set', { _index: 635, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['this.settimer(response.data.expirationsecond', { _index: 951, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.settimer(this.settimerdefaultsecond', { _index: 937, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['this.settings.apiurl', { _index: 878, title: {}, body: { 'guards/AuthGuard.html': {}, 'injectables/AuthService.html': {} } }],
      [
        'this.settings.isbrows',
        {
          _index: 175,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      ['this.settings.sessionstorage.clear', { _index: 176, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'this.settings.sessionstorageclear',
        { _index: 649, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } },
      ],
      [
        'this.settings.token',
        {
          _index: 877,
          title: {},
          body: {
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['this.settings.ui', { _index: 2398, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['this.settings.uist', { _index: 521, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.settings.usernam', { _index: 1832, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'this.settingsrestore(window.localstorage.getitem(this.localprop',
        { _index: 830, title: {}, body: { 'injectables/AppSettings.html': {} } },
      ],
      [
        'this.settingsrestore(window.sessionstorage.getitem(this.localprop',
        { _index: 828, title: {}, body: { 'injectables/AppSettings.html': {} } },
      ],
      ['this.settingssave(this.localstorag', { _index: 857, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.settingssave(this.sessionstorag', { _index: 855, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['this.showerrordetail', { _index: 1847, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['this.showindexlabel', { _index: 2611, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.showlegend', { _index: 2609, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.showtooltip', { _index: 2573, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.showxaxislabel', { _index: 2593, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.showyaxislabel', { _index: 2599, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.siz', { _index: 1789, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['this.start', { _index: 1177, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['this.stop', { _index: 1181, title: {}, body: { 'components/CounterComponent.html': {} } }],
      [
        'this.store.dispatch',
        {
          _index: 1973,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'this.store.dispatch(apistoreactions.reset(nul',
        {
          _index: 291,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      [
        'this.store.dispatch(uistoreactions.grid_state_change(gridst',
        { _index: 2408, title: {}, body: { 'injectables/UIStoreService.html': {} } },
      ],
      [
        'this.store.dispatch(uistoreactions.modal_unload(nul',
        {
          _index: 1980,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'this.store.dispatch(uistoreactions.multiscreen_toggle(multiscreen',
        { _index: 2409, title: {}, body: { 'injectables/UIStoreService.html': {} } },
      ],
      ['this.store.dispatch(uistoreactions.rehydrate(uist', { _index: 2410, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'this.store.dispatch(uistoreactions.sidebar_toggle(toggl',
        { _index: 2407, title: {}, body: { 'injectables/UIStoreService.html': {} } },
      ],
      ['this.store.dispatch(uistoreactions.tab_chang', { _index: 2405, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'this.store.select(selectors.us',
        {
          _index: 190,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      [
        'this.store.select(stor',
        {
          _index: 209,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/UiSelectorsService.html': {},
          },
        },
      ],
      [
        'this.store.select(storeelem',
        {
          _index: 1957,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'this.store.subscribe(storeapi',
        {
          _index: 289,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['this.storestaterestore(uist', { _index: 2401, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      ['this.storestatesave(uist', { _index: 2403, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'this.storesvc.dispatch(apistoreactions.delete_complet',
        { _index: 171, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      ['this.storesvc.dispatch(apistoreactions.get_complet', { _index: 132, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.storesvc.dispatch(apistoreactions.post_complet', { _index: 153, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.storesvc.dispatch(apistoreactions.put_complet', { _index: 155, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.storesvc.dispatch(apistoreactions.reset(nul', { _index: 177, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.storesvc.dispatch(apistoreactions.state_error', { _index: 142, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.storesvc.dispatch(apistoreactions.state_load', { _index: 129, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['this.storesvc.dispatch(apistoreactions.state_modifi', { _index: 146, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      [
        'this.storesvc.dispatch(apistoreactions.upsert_complet',
        { _index: 158, title: {}, body: { 'injectables/ApiHttpService.html': {} } },
      ],
      ['this.styling.fontfamili', { _index: 2569, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.styling.fonts', { _index: 2576, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.styling.fontweight', { _index: 2570, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'this.sub',
        {
          _index: 505,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
          },
        },
      ],
      [
        'this.sub.unsubscrib',
        {
          _index: 1799,
          title: {},
          body: { 'components/LaunchModalComponent.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      [
        'this.subs.foreach(sub',
        {
          _index: 542,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'this.subs.length',
        {
          _index: 541,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      ['this.subs.push', { _index: 550, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.success.emit(reason', { _index: 1793, title: {}, body: { 'components/LaunchModalComponent.html': {} } }],
      ['this.sw.activateupd', { _index: 2243, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.sw.available.subscrib', { _index: 2224, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.sw.checkforupd', { _index: 2230, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.sw.en', { _index: 591, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['this.sw.isen', { _index: 2223, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.sw.openmod', { _index: 2029, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['this.sw.updateavail', { _index: 2019, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['this.templ', { _index: 1536, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['this.templatecontext', { _index: 1535, title: {}, body: { 'components/GridTemplateRendererComponent.html': {} } }],
      ['this.tim', { _index: 1178, title: {}, body: { 'components/CounterComponent.html': {} } }],
      ['this.timeouthandl', { _index: 1205, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ["this.title.settitle(event['titl", { _index: 605, title: {}, body: { 'components/AppComponent.html': {} } }],
      ['this.titlechart', { _index: 2567, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.titlexaxi', { _index: 2587, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.titleyaxi', { _index: 2598, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.topfivetransf', { _index: 1031, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.transferstot', { _index: 1027, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['this.transformvalu', { _index: 1204, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      ['this.typ', { _index: 2607, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['this.ui.gridstatechange(gridst', { _index: 1648, title: {}, body: { 'components/HomeComponent.html': {} } }],
      [
        "this.ui.modals.open('confirmationmodalcompon",
        {
          _index: 1953,
          title: {},
          body: {
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['this.ui.multiscreentoggle(fals', { _index: 534, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.ui.obfuscateremove(str', { _index: 526, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'this.ui.screen',
        {
          _index: 544,
          title: {},
          body: { 'injectables/AppCommsService.html': {}, 'components/HomeComponent.html': {} },
        },
      ],
      ['this.ui.screen.clos', { _index: 556, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.ui.select.gridstate$.subscribe(gridst', { _index: 1624, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['this.ui.select.multiscreen$.subscribe(multiscreen', { _index: 551, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.ui.select.savestate$.subscrib', { _index: 508, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.ui.select.sidebaropen', { _index: 1608, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['this.ui.sidebartoggle(!toggl', { _index: 1656, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ['this.ui.storestaterestore(message.payload', { _index: 518, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.ui.storestaterestore(ui', { _index: 528, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['this.updateavailable$.next(fals', { _index: 2244, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.updateavailable$.next(tru', { _index: 2225, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['this.wait', { _index: 1845, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'this.zone.run',
        {
          _index: 1206,
          title: {},
          body: { 'pipes/DebouncePipe.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['this.zone.runoutsideangular', { _index: 2236, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['though', { _index: 695, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'through',
        {
          _index: 239,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppConfigService.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'interfaces/Settings.html': {},
            'classes/StringUtils.html': {},
          },
        },
      ],
      [
        'throw',
        {
          _index: 634,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'injectables/AuthService.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'interfaces/Settings.html': {},
            'index.html': {},
          },
        },
      ],
      ['thrown', { _index: 1240, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      [
        'time',
        {
          _index: 938,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/ConfirmationModalComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'components/LogoutModalComponent.html': {},
            'index.html': {},
          },
        },
      ],
      ['timeout', { _index: 910, title: {}, body: { 'injectables/AuthService.html': {}, 'components/LoginComponent.html': {} } }],
      ['timeouthandl', { _index: 1193, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      [
        'timer',
        {
          _index: 908,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/CounterComponent.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      ['timer(0', { _index: 1179, title: {}, body: { 'components/CounterComponent.html': {} } }],
      [
        'titl',
        {
          _index: 565,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'components/NavComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['titlechart', { _index: 2502, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['titlefonts', { _index: 2588, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['titlexaxi', { _index: 2505, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['titleyaxi', { _index: 2506, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['today', { _index: 1064, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'toggl',
        {
          _index: 1589,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'token',
        {
          _index: 614,
          title: {},
          body: {
            'components/AppComponent.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['token(valu', { _index: 833, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['token=123456', { _index: 934, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['tolow', { _index: 2027, title: {}, body: { 'components/NavComponent.html': {}, 'coverage.html': {} } }],
      ['tolowercas', { _index: 1281, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['tool', { _index: 2892, title: {}, body: { 'index.html': {} } }],
      ['tooltip', { _index: 2491, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['tooltipcustom', { _index: 2464, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['tooltipitem', { _index: 2665, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'top',
        {
          _index: 1016,
          title: {},
          body: {
            'components/ChartsComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'components/HomeContextMenuComponent.html': {},
          },
        },
      ],
      ['topfivetransf', { _index: 1007, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['topromis', { _index: 643, title: {}, body: { 'injectables/AppConfigService.html': {}, 'interfaces/Settings.html': {} } }],
      ['tostr', { _index: 1280, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['total', { _index: 1019, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['touch', { _index: 2883, title: {}, body: { 'index.html': {} } }],
      ['track', { _index: 431, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['transfer', { _index: 1017, title: {}, body: { 'components/ChartsComponent.html': {}, 'coverage.html': {} } }],
      ['transfer.nam', { _index: 1060, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfer.transf', { _index: 1061, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfers.foreach(us', { _index: 1051, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfers[0].d', { _index: 1033, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfersbyag', { _index: 1050, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfersbyagent[key', { _index: 1054, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfersbyagent[key].map(transf', { _index: 1059, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfersbyagent[key].push(us', { _index: 1055, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transfersbyagent[key][0].tim', { _index: 1058, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transferstot', { _index: 1008, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transferstotal[elem.nam', { _index: 1037, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      ['transferstotal[elem.name].i', { _index: 1039, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'transform',
        {
          _index: 200,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
          },
        },
      ],
      ['transform(arr', { _index: 1270, title: {}, body: { 'pipes/FilterPipe.html': {}, 'pipes/SortPipe.html': {} } }],
      ['transform(v', { _index: 2104, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      [
        'transform(valu',
        {
          _index: 1158,
          title: {},
          body: {
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
          },
        },
      ],
      ['transformvalu', { _index: 1195, title: {}, body: { 'pipes/DebouncePipe.html': {} } }],
      [
        'tree',
        {
          _index: 299,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
          },
        },
      ],
      [
        'tri',
        {
          _index: 820,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'classes/DesktopUtils.html': {},
            'components/LoginComponent.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['trim', { _index: 1282, title: {}, body: { 'pipes/FilterPipe.html': {}, 'classes/StringUtils.html': {} } }],
      ['trim(val', { _index: 2319, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'true',
        {
          _index: 246,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'modules/AppModule.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'pipes/FilterPipe.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'ts',
        {
          _index: 260,
          title: {},
          body: {
            'injectables/ApiService.html': {},
            'injectables/ContextService.html': {},
            'injectables/MonolithApiService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      ['tsconfig', { _index: 2915, title: {}, body: { 'index.html': {} } }],
      [
        'turn',
        {
          _index: 1492,
          title: {},
          body: { 'components/GridStatusBarComponent.html': {}, 'components/NavComponent.html': {} },
        },
      ],
      [
        'type',
        {
          _index: 34,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'components/CounterComponent.html': {},
            'pipes/DebouncePipe.html': {},
            'classes/DesktopUtils.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interceptors/HttpInterceptorService.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['typealias', { _index: 2923, title: { 'miscellaneous/typealiases.html': {} }, body: {} }],
      [
        'typeof',
        {
          _index: 411,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/StringPipe.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['typescript', { _index: 2814, title: {}, body: { 'dependencies.html': {} } }],
      [
        'ui',
        {
          _index: 483,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'modules/AppModule.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/ModalsService.html': {},
            'modules/MonolithModule.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['ui(valu', { _index: 825, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'ui.act',
        {
          _index: 2356,
          title: {},
          body: { 'injectables/UIModalService.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      ['ui.selectors.servic', { _index: 2396, title: {}, body: { 'injectables/UIStoreService.html': {} } }],
      [
        'uimodalservic',
        {
          _index: 892,
          title: { 'injectables/UIModalService.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'uireduc',
        {
          _index: 684,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/MonolithModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['uireducer(st', { _index: 2832, title: {}, body: { 'miscellaneous/functions.html': {} } }],
      [
        'uiselectorsservic',
        {
          _index: 2369,
          title: { 'injectables/UiSelectorsService.html': {} },
          body: {
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['uistat', { _index: 758, title: {}, body: { 'injectables/AppSettings.html': {}, 'injectables/UIStoreService.html': {} } }],
      [
        'uistoreact',
        {
          _index: 1952,
          title: {},
          body: {
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'uistoreactions.modal_open',
        {
          _index: 1974,
          title: {},
          body: { 'injectables/ModalsService.html': {}, 'injectables/UIModalService.html': {} },
        },
      ],
      [
        'uistoreservic',
        {
          _index: 484,
          title: { 'injectables/UIStoreService.html': {} },
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/UIStoreService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['unabl', { _index: 1860, title: {}, body: { 'components/LoginComponent.html': {} } }],
      [
        'unauthor',
        {
          _index: 1854,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['uncommon', { _index: 164, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['uncompil', { _index: 2912, title: {}, body: { 'index.html': {} } }],
      [
        'undefin',
        {
          _index: 633,
          title: {},
          body: {
            'injectables/AppConfigService.html': {},
            'classes/ObjectUtils.html': {},
            'interfaces/Settings.html': {},
            'interfaces/Window.html': {},
            'miscellaneous/functions.html': {},
          },
        },
      ],
      ['unescap', { _index: 2322, title: {}, body: { 'classes/StringUtils.html': {}, 'coverage.html': {} } }],
      ['unfound', { _index: 405, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'unifi',
        {
          _index: 213,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['uniqu', { _index: 401, title: {}, body: { 'classes/ApiUtils.html': {}, 'injectables/UIStoreService.html': {} } }],
      ['uniqueid', { _index: 394, title: {}, body: { 'classes/ApiUtils.html': {}, 'interfaces/Window.html': {} } }],
      ['uniqueidnew', { _index: 410, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['uniqueidnew.length', { _index: 448, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['uniqueidnew.reduce((a', { _index: 426, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['unit', { _index: 2695, title: {}, body: { 'changelog.html': {} } }],
      ['univers', { _index: 742, title: {}, body: { 'modules/AppServerModule.html': {} } }],
      ['unspecifi', { _index: 1153, title: {}, body: { 'injectables/ContextService.html': {} } }],
      [
        'unsub',
        {
          _index: 499,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
          },
        },
      ],
      [
        'unsubscrib',
        {
          _index: 1617,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['untouch', { _index: 465, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'up',
        {
          _index: 945,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'pipes/FilterPipe.html': {},
            'components/LaunchModalComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        'updat',
        {
          _index: 95,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AuthService.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'interfaces/Window.html': {},
            'index.html': {},
          },
        },
      ],
      ['updateapp', { _index: 2013, title: {}, body: { 'components/NavComponent.html': {} } }],
      ['updateavail', { _index: 2207, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['updatecach', { _index: 65, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['updaterecord', { _index: 391, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['updaterecords(srcarray', { _index: 392, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['upper', { _index: 2337, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      ['upsert', { _index: 91, title: {}, body: { 'injectables/ApiHttpService.html': {}, 'classes/ApiUtils.html': {} } }],
      ['upsertstor', { _index: 19, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['upsertstore(url', { _index: 89, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['urgent', { _index: 1735, title: {}, body: { 'components/HomeContextMenuComponent.html': {} } }],
      [
        'url',
        {
          _index: 52,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppSettings.html': {},
            'guards/AuthGuard.html': {},
            'injectables/AuthService.html': {},
            'components/LoginComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'index.html': {},
          },
        },
      ],
      ['urlencod', { _index: 1417, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'urltarget',
        {
          _index: 1905,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'us',
        {
          _index: 99,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'usag',
        {
          _index: 223,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FocusDirective.html': {},
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'pipes/SortPipe.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'index.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['useclass', { _index: 716, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['usefactori', { _index: 718, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['usehash', { _index: 707, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'user',
        {
          _index: 187,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'coverage.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      [
        "user').result.then",
        {
          _index: 1954,
          title: {},
          body: {
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['user.d', { _index: 1052, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'user.id',
        {
          _index: 274,
          title: {},
          body: { 'injectables/ApiService.html': {}, 'injectables/MonolithApiService.html': {} },
        },
      ],
      ['user.tim', { _index: 1053, title: {}, body: { 'components/ChartsComponent.html': {} } }],
      [
        'userdelet',
        {
          _index: 1563,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['userdelete(us', { _index: 1686, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'useredit',
        {
          _index: 1564,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'useredit(us',
        {
          _index: 1592,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'usernam',
        {
          _index: 761,
          title: {},
          body: {
            'injectables/AppSettings.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
            'components/NavComponent.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['username(valu', { _index: 842, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'users.data',
        {
          _index: 203,
          title: {},
          body: { 'injectables/ApiSelectorsService.html': {}, 'injectables/MonolithApiSelectorsService.html': {} },
        },
      ],
      ['users[0', { _index: 1712, title: {}, body: { 'components/HomeComponent-1.html': {} } }],
      [
        'usersrefresh',
        {
          _index: 1565,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'userstopedit',
        {
          _index: 1566,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'usersubmit',
        {
          _index: 1567,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      [
        'util',
        {
          _index: 387,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AppSettings.html': {},
            'classes/DesktopUtils.html': {},
            'components/HomeComponent-1.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'classes/ObjectUtils.html': {},
            'injectables/PostMessageService.html': {},
            'classes/StringUtils.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      [
        'utils.t',
        {
          _index: 385,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'classes/DesktopUtils.html': {},
            'classes/ObjectUtils.html': {},
            'classes/StringUtils.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['utils.ts:12', { _index: 2316, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['utils.ts:15', { _index: 396, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      ['utils.ts:21', { _index: 2055, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['utils.ts:34', { _index: 2305, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['utils.ts:45', { _index: 2309, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['utils.ts:48', { _index: 2062, title: {}, body: { 'classes/ObjectUtils.html': {} } }],
      ['utils.ts:58', { _index: 2312, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['utils.ts:75', { _index: 2320, title: {}, body: { 'classes/StringUtils.html': {} } }],
      ['utils.ts:8', { _index: 1213, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['utils.ts:91', { _index: 2301, title: {}, body: { 'classes/StringUtils.html': {} } }],
      [
        'val',
        {
          _index: 943,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'pipes/FilterPipe.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'pipes/SortPipe.html': {},
            'classes/StringUtils.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['val.label', { _index: 1063, title: {}, body: { 'components/ChartsComponent.html': {}, 'interfaces/Window.html': {} } }],
      ['val.state.root.firstchild.params.token', { _index: 944, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['val.trim().replac', { _index: 2109, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['val.valu', { _index: 2602, title: {}, body: { 'interfaces/Window.html': {} } }],
      [
        'valid',
        {
          _index: 1613,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'validators.requir',
        {
          _index: 1632,
          title: {},
          body: {
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
          },
        },
      ],
      [
        'valu',
        {
          _index: 69,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiSelectorsService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'injectables/ContextService.html': {},
            'pipes/CountPipe.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/DurationPipe.html': {},
            'pipes/FilterPipe.html': {},
            'directives/FullScreenDirective.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'classes/ObjectUtils.html': {},
            'pipes/PhoneNumberPipe.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'pipes/SafeHtmlPipe.html': {},
            'injectables/ServiceWorkerService.html': {},
            'interfaces/Settings.html': {},
            'pipes/SortPipe.html': {},
            'pipes/StringPipe.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'injectables/UiSelectorsService.html': {},
            'interfaces/Window.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['value.length', { _index: 1162, title: {}, body: { 'pipes/CountPipe.html': {} } }],
      ['value.tolowercas', { _index: 2344, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      ['value.touppercas', { _index: 2343, title: {}, body: { 'pipes/TextCasePipe.html': {}, 'pipes/TextCasePipe-1.html': {} } }],
      [
        'var',
        {
          _index: 328,
          title: {},
          body: {
            'components/ApiStateComponent.html': {},
            'components/AppComponent.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'components/CounterComponent.html': {},
            'components/FooterComponent.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LayoutMainComponent.html': {},
            'components/LayoutSingleComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'components/NoContentComponent.html': {},
            'components/QaComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['variabl', { _index: 2707, title: {}, body: { 'coverage.html': {}, 'index.html': {} } }],
      [
        'vendor',
        {
          _index: 681,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/ComponentsModule.html': {}, 'modules/VendorModule.html': {} },
        },
      ],
      ['vendor.modul', { _index: 1075, title: {}, body: { 'modules/ComponentsModule.html': {}, 'modules/SiteModule.html': {} } }],
      [
        'vendormodul',
        {
          _index: 1071,
          title: { 'modules/VendorModule.html': {} },
          body: {
            'modules/ComponentsModule.html': {},
            'modules/SiteModule.html': {},
            'modules/VendorModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['verifi', { _index: 444, title: {}, body: { 'classes/ApiUtils.html': {} } }],
      [
        'version',
        {
          _index: 72,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ServiceWorkerService.html': {},
            'changelog.html': {},
          },
        },
      ],
      ['vertic', { _index: 1319, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['vh', { _index: 1376, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'via',
        {
          _index: 92,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AuthService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
            'interfaces/Window.html': {},
            'changelog.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'view',
        {
          _index: 1355,
          title: {},
          body: { 'directives/FullScreenDirective.html': {}, 'injectables/UIStoreService.html': {} },
        },
      ],
      [
        'viewchild',
        {
          _index: 1141,
          title: {},
          body: {
            'injectables/ContextService.html': {},
            'components/HomeContextMenuComponent.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      [
        "viewchild('contextmenu",
        {
          _index: 1142,
          title: {},
          body: { 'injectables/ContextService.html': {}, 'components/HomeContextMenuComponent.html': {} },
        },
      ],
      ["viewchild('delet", { _index: 1620, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ["viewchild('el", { _index: 2462, title: {}, body: { 'interfaces/Window.html': {} } }],
      ["viewchild('phon", { _index: 1618, title: {}, body: { 'components/HomeComponent.html': {} } }],
      ["viewchild('tooltipcustom", { _index: 2463, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['viewport', { _index: 1349, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['viewval', { _index: 2108, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['viewval.length', { _index: 2116, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['viewval.replace(/[^0', { _index: 2110, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['viewval.slice(0', { _index: 2117, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      ['viewval.slice(3', { _index: 2118, title: {}, body: { 'pipes/PhoneNumberPipe.html': {} } }],
      [
        'visibl',
        {
          _index: 1225,
          title: {},
          body: {
            'classes/DesktopUtils.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/UIStoreService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['visual', { _index: 2897, title: {}, body: { 'index.html': {} } }],
      [
        'void',
        {
          _index: 40,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ApiService.html': {},
            'components/ApiStateComponent.html': {},
            'injectables/AppCommsService.html': {},
            'components/AppComponent.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'injectables/AuthService.html': {},
            'components/ChartsComponent.html': {},
            'components/ConfirmationModalComponent.html': {},
            'injectables/ContextService.html': {},
            'components/CounterComponent.html': {},
            'directives/FocusDirective.html': {},
            'directives/FullScreenDirective.html': {},
            'injectables/GlobalErrorHandler.html': {},
            'components/GridStatusBarComponent.html': {},
            'components/GridTemplateRendererComponent.html': {},
            'components/HeaderComponent.html': {},
            'components/HomeComponent.html': {},
            'components/HomeComponent-1.html': {},
            'components/HomeContextMenuComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LoginComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiService.html': {},
            'components/NavComponent.html': {},
            'components/NavSearchComponent.html': {},
            'injectables/PostMessageService.html': {},
            'components/QaComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
          },
        },
      ],
      ['vscode', { _index: 2893, title: {}, body: { 'index.html': {} } }],
      [
        'wait',
        {
          _index: 1813,
          title: {},
          body: {
            'components/LoginComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      [
        'want',
        {
          _index: 222,
          title: {},
          body: {
            'injectables/ApiSelectorsService.html': {},
            'components/LogoutModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/MonolithApiSelectorsService.html': {},
            'injectables/UIModalService.html': {},
            'miscellaneous/typealiases.html': {},
          },
        },
      ],
      ['warn', { _index: 1878, title: {}, body: { 'components/LogoutModalComponent.html': {} } }],
      ['watch', { _index: 506, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'web',
        {
          _index: 497,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AppConfigService.html': {},
            'injectables/AppSettings.html': {},
            'interfaces/Settings.html': {},
          },
        },
      ],
      ['webapi', { _index: 54, title: {}, body: { 'injectables/ApiHttpService.html': {} } }],
      ['webpack', { _index: 2857, title: {}, body: { 'index.html': {} } }],
      [
        'webpackok',
        {
          _index: 1920,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'websit',
        {
          _index: 1634,
          title: {},
          body: { 'components/HomeComponent.html': {}, 'components/HomeComponent-1.html': {} },
        },
      ],
      ['whether', { _index: 985, title: {}, body: { 'injectables/AuthService.html': {}, 'pipes/FilterPipe.html': {} } }],
      [
        'whitelist',
        {
          _index: 1893,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['whole', { _index: 1276, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      ['width', { _index: 1960, title: {}, body: { 'injectables/ModalsService.html': {}, 'interfaces/Window.html': {} } }],
      [
        'window',
        {
          _index: 531,
          title: { 'interfaces/Window.html': {} },
          body: {
            'injectables/AppCommsService.html': {},
            'injectables/AuthService.html': {},
            'components/HeaderComponent.html': {},
            'components/LaunchModalComponent.html': {},
            'components/LogoutModalComponent.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'injectables/UIModalService.html': {},
            'injectables/UIStoreService.html': {},
            'interfaces/Window.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "window).attachevent('onmessag",
        {
          _index: 1900,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['window).clipboarddata', { _index: 1217, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ["window).clipboarddata.setdata('text", { _index: 1226, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      ['window).setdata', { _index: 1218, title: {}, body: { 'classes/DesktopUtils.html': {} } }],
      [
        'window.addeventlisten',
        {
          _index: 1896,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        "window.addeventlistener('messag",
        {
          _index: 1898,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['window.canvasj', { _index: 2530, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['window.canvasjs.addcolorset(this.colorschem', { _index: 2548, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['window.canvasjs.chart(this.uniqueid', { _index: 2551, title: {}, body: { 'interfaces/Window.html': {} } }],
      ['window.clearinterval(this.count', { _index: 2226, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['window.cleartimeout(this.authservice.sessiontim', { _index: 1836, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['window.innerheight', { _index: 1383, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      ['window.localstorage.clear', { _index: 853, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['window.localstorage.getitem(this.localprop', { _index: 847, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['window.localstorage.rememberlogin', { _index: 1831, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ["window.localstorage.removeitem('rememberlogin", { _index: 1850, title: {}, body: { 'components/LoginComponent.html': {} } }],
      ['window.localstorage.setitem(this.localprop', { _index: 856, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      [
        'window.location.origin',
        {
          _index: 548,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['window.location.pathnam', { _index: 549, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      ['window.location.reload', { _index: 2242, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['window.onbeforeunload', { _index: 537, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'window.open',
        {
          _index: 538,
          title: {},
          body: {
            'injectables/AppCommsService.html': {},
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['window.open(slug', { _index: 555, title: {}, body: { 'injectables/AppCommsService.html': {} } }],
      [
        'window.par',
        {
          _index: 1908,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        'window.parent.postmessage(this.addmetadata(messag',
        {
          _index: 1909,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      [
        "window.removeeventlistener('messag",
        {
          _index: 1903,
          title: {},
          body: {
            'interfaces/Message.html': {},
            'interfaces/MessageComplete.html': {},
            'injectables/PostMessageService.html': {},
          },
        },
      ],
      ['window.sessionstorage.clear', { _index: 848, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['window.sessionstorage.getitem(this.localprop', { _index: 846, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['window.sessionstorage.setitem(this.localprop', { _index: 854, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['window.setinterv', { _index: 2237, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['window:res', { _index: 1335, title: {}, body: { 'directives/FullScreenDirective.html': {} } }],
      [
        'windowclass',
        {
          _index: 1785,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['within', { _index: 1186, title: {}, body: { 'pipes/DebouncePipe.html': {}, 'pipes/FilterPipe.html': {} } }],
      [
        'without',
        {
          _index: 419,
          title: {},
          body: {
            'classes/ApiUtils.html': {},
            'injectables/AuthService.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'work',
        {
          _index: 169,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/AuthService.html': {},
            'components/LogoutModalComponent.html': {},
            'components/QaComponent.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'worker',
        {
          _index: 680,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'components/NavComponent.html': {},
            'injectables/ServiceWorkerService.html': {},
            'dependencies.html': {},
            'index.html': {},
          },
        },
      ],
      ['worker.j', { _index: 713, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['worker.service.t', { _index: 2204, title: {}, body: { 'injectables/ServiceWorkerService.html': {}, 'coverage.html': {} } }],
      ['worker.service.ts:14', { _index: 2222, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:16', { _index: 2219, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:18', { _index: 2218, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:20', { _index: 2220, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:22', { _index: 2211, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:34', { _index: 2214, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:54', { _index: 2212, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:64', { _index: 2217, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker.service.ts:78', { _index: 2215, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['worker/zone.j', { _index: 2232, title: {}, body: { 'injectables/ServiceWorkerService.html': {} } }],
      ['write', { _index: 772, title: {}, body: { 'injectables/AppSettings.html': {} } }],
      ['www', { _index: 1416, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      ['x', { _index: 1344, title: {}, body: { 'directives/FullScreenDirective.html': {}, 'interfaces/Window.html': {} } }],
      [
        'xl',
        {
          _index: 1784,
          title: {},
          body: {
            'components/LaunchModalComponent.html': {},
            'injectables/ModalsService.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['xmlhttprequest', { _index: 1405, title: {}, body: { 'injectables/GlobalErrorHandler.html': {} } }],
      [
        'y',
        {
          _index: 1034,
          title: {},
          body: {
            'components/ChartsComponent.html': {},
            'directives/FullScreenDirective.html': {},
            'interfaces/Window.html': {},
          },
        },
      ],
      ['yarn', { _index: 2846, title: {}, body: { 'index.html': {} } }],
      ['yarn/npm', { _index: 2911, title: {}, body: { 'index.html': {} } }],
      [
        'ye',
        {
          _index: 78,
          title: {},
          body: {
            'injectables/ApiHttpService.html': {},
            'injectables/ContextService.html': {},
            'pipes/DebouncePipe.html': {},
            'pipes/FilterPipe.html': {},
            'injectables/ModalsService.html': {},
            'injectables/PostMessageService.html': {},
            'classes/StringUtils.html': {},
            'pipes/TextCasePipe.html': {},
            'pipes/TextCasePipe-1.html': {},
            'injectables/UIModalService.html': {},
          },
        },
      ],
      ['z0', { _index: 1284, title: {}, body: { 'pipes/FilterPipe.html': {} } }],
      [
        'zero',
        {
          _index: 1263,
          title: {},
          body: { 'pipes/DurationPipe.html': {}, 'components/LogoutModalComponent.html': {} },
        },
      ],
      [
        'zone',
        {
          _index: 1201,
          title: {},
          body: { 'pipes/DebouncePipe.html': {}, 'injectables/ServiceWorkerService.html': {} },
        },
      ],
      ['zone.j', { _index: 2817, title: {}, body: { 'dependencies.html': {} } }],
      [
        'zoom',
        {
          _index: 663,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AppServerModule.html': {},
            'modules/ChartModule.html': {},
            'modules/ComponentsModule.html': {},
            'modules/ContextModule.html': {},
            'modules/GridModule.html': {},
            'modules/HomeModule.html': {},
            'modules/MonolithModule.html': {},
            'modules/QaModule.html': {},
            'modules/SharedModule.html': {},
            'modules/SiteModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'injectables/ApiHttpService.html': {
      url: 'injectables/ApiHttpService.html',
      title: 'injectable - ApiHttpService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/stores/api/api.http.base.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cacheClear\n                            \n                            \n                                    Protected\n                                deleteStore\n                            \n                            \n                                    Private\n                                endSession\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Protected\n                                getStore\n                            \n                            \n                                    Protected\n                                postStore\n                            \n                            \n                                    Protected\n                                putStore\n                            \n                            \n                                    Protected\n                                upsertStore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpSvc: HttpClient, storeSvc: Store, routerSvc: Router, appProps: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/stores/api/api.http.base.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpSvc\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeSvc\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routerSvc\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appProps\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cacheClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cacheClear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:190\n                            \n                        \n\n\n                \n                    \n                            Clear the cache\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            deleteStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteStore(url: string, apiMap: AppStore.ApiMap, element: T | T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:165\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Make a DELETE request\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe URL location of the webapi\n\n\n                                                        \n                                                \n                                                \n                                                        apiMap\n                                                        \n                                                                    AppStore.ApiMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe ApiMap object\n\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                        \n                                                                    T | T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe element or collection of elements being deleted\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        endSession(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:198\n                            \n                        \n\n\n                \n                    \n                            When an authentication check fails\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(url: string, updateCache: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:30\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Make a GET request with simple caching\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nThe URL location of the webapi\n\n\n                                                        \n                                                \n                                                \n                                                        updateCache\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                \nRefresh the version in the cache\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStore(url: string, apiMap?: AppStore.ApiMap, updateCache: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:44\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Make a GET request and load the results into the store\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nThe URL location of the webapi\n\n\n                                                        \n                                                \n                                                \n                                                        apiMap\n                                                        \n                                                                    AppStore.ApiMap\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        updateCache\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                \nRefresh the version in the cache\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            postStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        postStore(url: string, apiMap: AppStore.ApiMap, data: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:80\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Make a POST request and load the results into the store\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe URL location of the endpoint\n\n\n                                                        \n                                                \n                                                \n                                                        apiMap\n                                                        \n                                                                    AppStore.ApiMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe data to pass to the server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            putStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        putStore(url: string, apiMap: AppStore.ApiMap, data: T | T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:108\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Make a PUT request\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe URL location of the webapi\n\n\n                                                        \n                                                \n                                                \n                                                        apiMap\n                                                        \n                                                                    AppStore.ApiMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    T | T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe data to pass to the server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            upsertStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        upsertStore(url: string, apiMap: AppStore.ApiMap, data: T | T[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:136\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Make an upsert via put. Upsert inserts if not found, updates if found\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe URL location of the webapi\n\n\n                                                        \n                                                \n                                                \n                                                        apiMap\n                                                        \n                                                                    AppStore.ApiMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    T | T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe data to pass to the server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cache:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.http.base.service.ts:16\n                            \n                        \n\n                \n                    \n                        Hold GET requests from an API using the URL as a primary key \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, share } from 'rxjs/operators';\n\nimport { ApiStoreActions } from './api.actions';\nimport { AppSettings } from '../../app.settings';\nimport { AppStore } from '../store';\n\n@Injectable()\nexport class ApiHttpService {\n  /** Hold GET requests from an API using the URL as a primary key */\n  private cache: { [key: string]: any } = {};\n\n  constructor(\n    private httpSvc: HttpClient,\n    private storeSvc: Store,\n    private routerSvc: Router,\n    private appProps: AppSettings,\n  ) {}\n\n  /**\n   * Make a GET request with simple caching\n   * @param url - The URL location of the webapi\n   * @param updateCache - Refresh the version in the cache\n   */\n  public get(url: string, updateCache = false): Observable {\n    // If this request is not in the cache or updateCache was requested (default behavior), load content into cache\n    if (!this.cache[url] || updateCache) {\n      this.cache[url] = this.httpSvc.get(url).pipe(share());\n    }\n    return of(this.cache[url]); // Return observable of api response\n  } // end get\n\n  /**\n   * Make a GET request and load the results into the store\n   * @param url - The URL location of the webapi\n   * @param id - The location to put the results in the store\n   * @param updateCache - Refresh the version in the cache\n   */\n  protected getStore(url: string, apiMap?: AppStore.ApiMap, updateCache = false): Observable {\n    // If this request is not in the cache or updateCache was requested (default behavior), load content into cache\n    if (this.cache[url] == null || updateCache) {\n      // Set loading\n      this.storeSvc.dispatch(ApiStoreActions.STATE_LOADING({ apiMap: apiMap }));\n      // Load into cache, make get request\n      return this.httpSvc.get(url).pipe(\n        map(res => {\n          this.storeSvc.dispatch(ApiStoreActions.GET_COMPLETE({ apiMap: apiMap, data: res }));\n          this.cache[url] = res; // Cache api response\n          return res;\n        }),\n        catchError(error => {\n          if (error.status === 401 || error.status === 403) {\n            error.errorMsg = 'Please log in ';\n            return this.endSession(error);\n          } else {\n            this.storeSvc.dispatch(ApiStoreActions.STATE_ERROR({ apiMap: apiMap, data: error }));\n            return of(error);\n          }\n        }),\n        share(),\n      );\n    } else {\n      // Update store with cached data\n      this.storeSvc.dispatch(ApiStoreActions.GET_COMPLETE({ apiMap: apiMap, data: this.cache[url] }));\n      return of(this.cache[url]); // Return observable of api response\n    }\n  }\n\n  /**\n   * Make a POST request and load the results into the store\n   * @param url - The URL location of the endpoint\n   * @param id - The location to put the results in the store\n   * @param data - The data to pass to the server\n   */\n  protected postStore(url: string, apiMap: AppStore.ApiMap, data: T): Observable {\n    // Update store with new state\n    this.storeSvc.dispatch(ApiStoreActions.STATE_MODIFYING({ apiMap: apiMap }));\n\n    return this.httpSvc.post(url, data).pipe(\n      map((res: any) => {\n        // Check if the response has a payload or not\n        const dataNew = res ? res : data;\n        this.storeSvc.dispatch(ApiStoreActions.POST_COMPLETE({ apiMap: apiMap, data: dataNew }));\n        return dataNew;\n      }),\n      catchError(error => {\n        if (error.status === 401 || error.status === 403) {\n          error.errorMsg = 'Please log in ';\n          return this.endSession(error);\n        } else {\n          this.storeSvc.dispatch(ApiStoreActions.STATE_ERROR({ apiMap: apiMap, data: error }));\n          return of(error);\n        }\n      }),\n    );\n  } // end post\n\n  /**\n   * Make a PUT request\n   * @param url - The URL location of the webapi\n   * @param data - The data to pass to the server\n   */\n  protected putStore(url: string, apiMap: AppStore.ApiMap, data: T | T[]): Observable {\n    // Update store with new state\n    this.storeSvc.dispatch(ApiStoreActions.STATE_MODIFYING({ apiMap: apiMap }));\n\n    return this.httpSvc.put(url, data).pipe(\n      map(res => {\n        // Check if the response has a payload or not,\n        const dataNew = res ? res : data;\n        this.storeSvc.dispatch(ApiStoreActions.PUT_COMPLETE({ apiMap: apiMap, data: dataNew }));\n        return dataNew;\n      }),\n      catchError(error => {\n        if (error.status === 401 || error.status === 403) {\n          error.errorMsg = 'Please log in ';\n          return this.endSession(error);\n        } else {\n          this.storeSvc.dispatch(ApiStoreActions.STATE_ERROR({ apiMap: apiMap, data: error }));\n          return of(error);\n        }\n      }),\n    );\n  } // end put\n\n  /**\n   * Make an upsert via put. Upsert inserts if not found, updates if found\n   * @param url - The URL location of the webapi\n   * @param data - The data to pass to the server\n   */\n  protected upsertStore(url: string, apiMap: AppStore.ApiMap, data: T | T[]): Observable {\n    // Update store with new state\n    this.storeSvc.dispatch(ApiStoreActions.STATE_MODIFYING({ apiMap: apiMap }));\n    // Upsert is patch\n    return this.httpSvc.patch(url, data).pipe(\n      map(res => {\n        // Check if the response has a payload or not, if not then this is an upSert\n        const dataNew = res ? res : data;\n        this.storeSvc.dispatch(ApiStoreActions.UPSERT_COMPLETE({ apiMap: apiMap, data: dataNew }));\n        return dataNew;\n      }),\n      catchError(error => {\n        if (error.status === 401 || error.status === 403) {\n          error.errorMsg = 'Please log in ';\n          return this.endSession(error);\n        } else {\n          this.storeSvc.dispatch(ApiStoreActions.STATE_ERROR({ apiMap: apiMap, data: error }));\n          return of(error);\n        }\n      }),\n    );\n  } // end put\n\n  /**\n   * Make a DELETE request\n   * @param url - The URL location of the webapi\n   * @param apiMap - The ApiMap object\n   * @param element - The element or collection of elements being deleted\n   */\n  protected deleteStore(url: string, apiMap: AppStore.ApiMap, element: T | T[]) {\n    // Update store with new state\n    this.storeSvc.dispatch(ApiStoreActions.STATE_MODIFYING({ apiMap: apiMap }));\n    // Delete doesn't natively support a body so this adds it in for deleting collections or other uncommon operations\n    return this.httpSvc.request('delete', url, { body: element }).pipe(\n      // return this.httpSvc.delete(url, , { body: element }) // Does not work with body, add back in when it does\n      map(res => {\n        this.storeSvc.dispatch(ApiStoreActions.DELETE_COMPLETE({ apiMap: apiMap, data: element }));\n        return res;\n      }),\n      catchError(error => {\n        if (error.status === 401 || error.status === 403) {\n          error.errorMsg = 'Please log in ';\n          return this.endSession(error);\n        } else {\n          this.storeSvc.dispatch(ApiStoreActions.STATE_ERROR({ apiMap: apiMap, data: error }));\n          return of(error);\n        }\n      }),\n    );\n  } // end post\n\n  /**\n   * Clear the cache\n   */\n  public cacheClear() {\n    this.cache = {};\n  }\n\n  /**\n   * When an authentication check fails\n   * @param error\n   */\n  private endSession(error: any) {\n    this.cacheClear();\n    this.appProps.token = null;\n    //if (this.settings.isBrowser) {\n    //  this.settings.sessionStorage.clear();\n    //}\n    this.storeSvc.dispatch(ApiStoreActions.RESET(null)); // Clear out store on errors for security\n    this.routerSvc.navigate(['/login'], { queryParams: { session: 'expired' } });\n    return of(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ApiSelectorsService.html': {
      url: 'injectables/ApiSelectorsService.html',
      title: 'injectable - ApiSelectorsService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiSelectorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/stores/api/api.selectors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/stores/api/api.selectors.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectors.users)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.selectors.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store, createSelector } from '@ngrx/store';\n\n// import { Models } from '$models';\nimport { AppStore } from '$shared';\n// import { ApiMap } from 'src/app/shared/stores/api';\n// import { Observable, combineLatest } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// const keyBy = require('lodash/keyBy');\n\n// Mapped/source selectors for reuse or transforming data\nconst selectors = {\n  users: createSelector(\n    (state: AppStore.Root) => state.api.users,\n    users => {\n      if (users && users.data) {\n        // Modify data before returning to selector\n      }\n      return users;\n    },\n  ),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiSelectorsService {\n  public users$ = this.store.select(selectors.users); // Memoized selector\n  // public users$ = this.store.select(store => store.api.users);\n\n  constructor(private store: Store) {}\n\n  /**\n   * Returns a single unified API status for one or more API status calls.\n   * Useful for when the app needs multiple http calls and you only want a single status for all\n   * USAGE: this.api.getStatuses([\n      this.api.select.getState$(ApiProps.pod),\n      this.api.select.getState$(ApiProps.productType),\n    ])\n   * @param statuses - A single observable or an array of observables\n  \n  public getStatuses(statuses: Observable[]) {\n    // If this is an array, pass the array, if single load into array for combineLatest\n    const statusesNew = Array.isArray(statuses) ? statuses : [statuses];\n\n    return combineLatest(statusesNew).pipe(\n      map(status => {\n        if (status) {\n          // Set default globals. Used to create final end state\n          let loading = false;\n          let loaded = false;\n          let loadError = false;\n\n          // Loop through all input statuses and rollup individual status to global status\n          status.forEach(statusSingle => {\n            if (statusSingle && statusSingle.loading) {\n              loading = true;\n            }\n            if (statusSingle && statusSingle.loaded) {\n              loaded = true;\n            }\n            if (statusSingle && statusSingle.loadError) {\n              loadError = statusSingle.loadError;\n            }\n          });\n\n          // Figure out which status state to return\n          // If any errors, return an error state\n          if (loadError) {\n            return {\n              loading: false,\n              loaded: false,\n              loadError: loadError,\n            };\n          } else if (loading) {\n            // If no errors but any endpoint is still loading, return loading\n            return {\n              loading: true,\n              loaded: false,\n              loadError: false,\n            };\n          } else if (loaded && !loading && !loadError) {\n            // If all endpoints return loaded and no errors of loading, return loaded\n            return {\n              loading: false,\n              loaded: true,\n              loadError: false,\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }),\n    );\n  }\n   */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ApiService.html': {
      url: 'injectables/ApiService.html',
      title: 'injectable - ApiService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/stores/api/api.store.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fixTS\n                            \n                            \n                                    Public\n                                resetStore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, http: HttpClient, router: Router, props: AppSettings, select: ApiSelectorsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/stores/api/api.store.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        select\n                                                  \n                                                        \n                                                                    ApiSelectorsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fixTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fixTS()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.store.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Fix a bug with TS where super calls don't count as usage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetStore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.store.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Reset the store, clear out all held state and data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        select:     ApiSelectorsService\n\n                    \n                \n                    \n                        \n                            Type :     ApiSelectorsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.store.service.ts:37\n                            \n                        \n\n                \n                    \n                        API Store Selectors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    get: (update?: boolean) => this.getStore(ApiMap.users.endpoint, ApiMap.users, update),\n    post: (user: Models.User) => this.postStore(ApiMap.users.endpoint, ApiMap.users, user),\n    put: (user: Models.User) => this.putStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n    delete: (user: Models.User) => this.deleteStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/api/api.store.service.ts:24\n                            \n                        \n\n                \n                    \n                        Users endpoint \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { Models } from '$models';\n// import { environment } from '$env';\n\nimport { ApiHttpService } from './api.http.base.service';\nimport { ApiSelectorsService } from './api.selectors.service';\nimport { ApiStoreActions } from './api.actions';\nimport { ApiMap } from './api.map';\nimport { AppSettings } from '../../app.settings';\nimport { AppStore } from '../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService extends ApiHttpService {\n  // Base Url\n  // environment.endpoints.apiUrl\n\n  /** Users endpoint */\n  public users = {\n    get: (update?: boolean) => this.getStore(ApiMap.users.endpoint, ApiMap.users, update),\n    post: (user: Models.User) => this.postStore(ApiMap.users.endpoint, ApiMap.users, user),\n    put: (user: Models.User) => this.putStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n    delete: (user: Models.User) => this.deleteStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n  };\n\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private router: Router,\n    private props: AppSettings,\n    /** API Store Selectors */\n    public select: ApiSelectorsService,\n  ) {\n    super(http, store, router, props);\n\n    // Output store changes to console\n    // this.store.subscribe(storeApi => console.log(JSON.parse(JSON.stringify(storeApi.api))));\n  }\n\n  /**\n   * Reset the store, clear out all held state and data\n   */\n  public resetStore() {\n    this.cacheClear(); // Clear cache\n    this.store.dispatch(ApiStoreActions.RESET(null));\n  }\n\n  /**\n   * Fix a bug with TS where super calls don't count as usage\n   */\n  public fixTS() {\n    console.log(this.http, this.router, this.props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/ApiStateComponent.html': {
      url: 'components/ApiStateComponent.html',
      title: 'component - ApiStateComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  ApiStateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/api-state/api-state.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-api-state\n            \n\n            \n                styleUrls\n                api-state.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./api-state.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorHide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/api-state/api-state.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        state\n                    \n                    \n                            \n                            Type :    AppStore.ApiState\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/api-state/api-state.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/api-state/api-state.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorHide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorHide:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/api-state/api-state.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Input } from '@angular/core';\n\nimport { AppStore } from '$shared';\n\n@Component({\n  selector: 'app-api-state',\n  templateUrl: './api-state.component.html',\n  styleUrls: ['./api-state.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApiStateComponent implements OnInit {\n  @Input() state: AppStore.ApiState;\n\n  public errorHide = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n   Loading...\n\n  \n  \n    {{ state?.error?.message || 'An error occured' }}\n    \n      \n\n      \n        \n          \n            \n              See error details\n            \n          \n          {{ state.error | json }}\n        \n      \n\n    \n  \n\n  \n  \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Loading...        {{ state?.error?.message || \\'An error occured\\' }}                                                            See error details                                {{ state.error | json }}                              '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'ApiStateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ApiUtils.html': {
      url: 'classes/ApiUtils.html',
      title: 'class - ApiUtils',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/api-utils.ts\n        \n\n            \n                Description\n            \n            \n                Helper utilities for desktop interaction\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                updateRecords\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            updateRecords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateRecords(srcArray: T[], records: T | T[], uniqueID: string | string[], operation: \"replace\" | \"upsert\" | \"delete\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/api-utils.ts:15\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Replace/upsert/delete objects in an array\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        srcArray\n                                                        \n                                                                    T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                A source array which will be updated by objects from the records argument\n\n                                                        \n                                                \n                                                \n                                                        records\n                                                        \n                                                                    T | T[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Objects to replace/delete/add to the source array\n\n                                                        \n                                                \n                                                \n                                                        uniqueID\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The primary key or unique identifier for the objects in the array\n\n                                                        \n                                                \n                                                \n                                                        operation\n                                                        \n                                                                    \"replace\" | \"upsert\" | \"delete\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The type of operation to perform\nreplace: Update existing objects if found\nupsert: Update existing objects if found, add unfound objects to beginning of array\ndelete: Remove found objects from the array\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     T[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiUtils {\n  /**\n  * Replace/upsert/delete objects in an array\n  * @param srcArray A source array which will be updated by objects from the records argument\n  * @param records Objects to replace/delete/add to the source array\n  * @param uniqueID The primary key or unique identifier for the objects in the array\n  * @param operation The type of operation to perform\n    replace: Update existing objects if found\n    upsert: Update existing objects if found, add unfound objects to beginning of array\n    delete: Remove found objects from the array\n  */\n  public static updateRecords(\n    srcArray: T[],\n    records: T | T[],\n    uniqueID: string | string[],\n    operation: 'replace' | 'upsert' | 'delete',\n  ): T[] {\n    // If unique ID is a string, drop it into an array so a single method can be used to iterate\n    const uniqueIDNew = typeof uniqueID === 'string' ? [uniqueID] : uniqueID;\n    // If newrecords is an object, drop it into an array so a single method can be used to iterate\n    const recordsNew = Array.isArray(records) ? records : [records];\n\n    // Map new records down to a dictionary for easy reference without a nested for loop\n    const dict: { [key: string]: T } = {};\n    recordsNew.forEach((record: any) => {\n      // Create a key that is the result of one or more unique identifiers supplied by uniqueID arg\n      const recordId = uniqueIDNew.reduce((a, b) => a + record[b], '');\n      dict[recordId] = record;\n    });\n\n    // Keep track of how many records have been replaced. Break loop when done\n    let matches = 0;\n    // Keep track if any records were updated\n    let recordsUpdated = false;\n    // Keep track of which indexes to delete for delete operation\n    const indexesToDelete: number[] = [];\n\n    // Loop through source array\n    for (let i = 0; i  a + (srcArray)[i][b], '');\n\n      // If the current record key is found in the dictionary, update the reference\n      if (dict[recordCurrentKey]) {\n        // If operation is upsert or replace\n        if (operation === 'upsert' || operation === 'replace') {\n          // Update record\n          srcArray[i] = dict[recordCurrentKey];\n          // Now delete out of dictionary to verify it has been updated\n          delete dict[recordCurrentKey];\n        } else if (operation === 'delete') {\n          // If delete, push index to delete array\n          indexesToDelete.push(i);\n        }\n\n        matches++;\n        recordsUpdated = true;\n      }\n\n      // If all records have been updated, stop loop\n      if (matches === uniqueIDNew.length + 1) {\n        break;\n      }\n    }\n\n    // UPSERT\n    // If items are left over in the dictionary\n    if (operation === 'upsert' && Object.keys(dict).length) {\n      // Loop through all outstanding records and append to front of src array\n      Object.keys(dict).forEach(key => srcArray.unshift(dict[key]));\n      recordsUpdated = true;\n      // DELETE\n    } else if (operation === 'delete') {\n      // If delete operation, remove found indexes from array\n      indexesToDelete.forEach(num => srcArray.splice(num, 1));\n    }\n\n    // If records were updated, return new immutable instance. Otherwise return untouched srcArray\n    return recordsUpdated ? Array.from(srcArray) : srcArray;\n  } // End updateRecords\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AppCommsService.html': {
      url: 'injectables/AppCommsService.html',
      title: 'injectable - AppCommsService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppCommsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/app-comms.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages communication between multiple app instances or apps that live on separate domains\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commsDisable\n                            \n                            \n                                    Public\n                                commsEnable\n                            \n                            \n                                    Private\n                                multiScreenState\n                            \n                            \n                                    Private\n                                resyncUI\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(messaging: PostMessageService, ui: UIStoreService, settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/app-comms.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messaging\n                                                  \n                                                        \n                                                                    PostMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ui\n                                                  \n                                                        \n                                                                    UIStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commsDisable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        commsDisable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/app-comms.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Disable app communication\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commsEnable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        commsEnable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/app-comms.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Start listening for app communication\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            multiScreenState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        multiScreenState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/app-comms.service.ts:100\n                            \n                        \n\n\n                \n                    \n                            Manage the state of multiscreen functionality\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resyncUI\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resyncUI()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/app-comms.service.ts:87\n                            \n                        \n\n\n                \n                    \n                            Resync the UI state between multiple instances of the web app\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subs:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/app-comms.service.ts:23\n                            \n                        \n\n                \n                    \n                        Hold subs for unsub \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { PostMessageService } from './post-message.service';\nimport { UIStoreService } from '$ui';\n\nimport { environment } from '$env';\nimport { AppSettings } from '../app.settings';\n\nexport enum MessageActions {\n  RESYNC_UI = 'RESYNC_UI',\n  END_MULTISCREEN = 'END_MULTISCREEN',\n}\n\n/**\n * Manages communication between multiple app instances or apps that live on separate domains\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppCommsService {\n  /** Hold subs for unsub */\n  private subs: Subscription[] = [];\n\n  constructor(private messaging: PostMessageService, private ui: UIStoreService, private settings: AppSettings) {}\n\n  /**\n   * Start listening for app communication\n   */\n  public commsEnable() {\n    this.subs = [\n      // Watch UI Store changes and fire the resync UI method to update store state in all instances\n      this.ui.select.saveState$.subscribe(() => this.resyncUI()),\n      // Listen for any interapp communication set by the listenTo env settings\n      this.messaging.listenForMessages(environment.domains.listenTo).subscribe(message => {\n        switch (message.event) {\n          // Resync any UI Changes\n          case MessageActions.RESYNC_UI:\n            // If a UI store state payload was passed, load that into the store\n            if (message.payload) {\n              this.ui.storeStateRestore(message.payload);\n            } else {\n              // Otherwise update UI state from localstorage\n              let str = this.settings.uiState();\n              if (environment.settings.obfuscate) {\n                // If de-obfuscating errors out, remove ui store state and fail gracefully\n                str = this.ui.obfuscateRemove(str);\n              }\n              // const state = JSON.parse(str);\n              const ui = JSON.parse(str);\n              this.ui.storeStateRestore(ui);\n            }\n            break;\n          // Notify parent window that this window has closed\n          case MessageActions.END_MULTISCREEN:\n            this.ui.multiScreenToggle(false);\n            break;\n        }\n      }),\n    ];\n\n    // Manage the state of multiscreen functionality\n    this.multiScreenState();\n\n    if (this.settings.isBrowser) {\n      // When this window is closed, tell parent to end multiscreen\n      window.onbeforeunload = () => {\n        if (window.opener) {\n          this.messaging.postMessageToWindow(window.opener, { event: MessageActions.END_MULTISCREEN, payload: null });\n        }\n      };\n    }\n  }\n\n  /**\n   * Disable app communication\n   */\n  public commsDisable() {\n    if (this.subs.length) {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n  }\n\n  /**\n   * Resync the UI state between multiple instances of the web app\n   */\n  private resyncUI() {\n    if (this.settings.isBrowser) {\n      if (this.ui.screen) {\n        this.messaging.postMessageToWindow(this.ui.screen, { event: MessageActions.RESYNC_UI, payload: null });\n      } else if (window.opener) {\n        this.messaging.postMessageToWindow(window.opener, { event: MessageActions.RESYNC_UI, payload: null });\n      }\n    }\n  }\n\n  /**\n   * Manage the state of multiscreen functionality\n   */\n  private multiScreenState() {\n    if (this.settings.isBrowser) {\n      // Get current path\n      const slug = window.location.origin + window.location.pathname;\n      this.subs.push(\n        this.ui.select.multiScreen$.subscribe(multiScreen => {\n          // If multiscreen is present and a window is not yet open and has not been closed\n          if (multiScreen && !this.ui.screen && !window.opener) {\n            setTimeout(() => {\n              this.ui.screen = window.open(slug + '#/', 'App Instance');\n            });\n          } else if (this.ui.screen && this.ui.screen.closed) {\n            // If window has been closed\n            this.ui.screen = null;\n          } else if (multiScreen && this.ui.screen) {\n            // If multi screen has been set and a window is already opened, update url in current window\n            this.ui.screen = window.open(slug + '#/', 'App Instance');\n          } else if (this.ui.screen && multiScreen === false) {\n            // If screen is open and multiscreen is false, close window\n            this.ui.screen.close();\n            this.ui.screen = null;\n          }\n        }),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/AppComponent.html': {
      url: 'components/AppComponent.html',
      title: 'component - AppComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                routeChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, title: Title, authService: AuthService, sw: ServiceWorkerService, comms: AppCommsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sw\n                                                  \n                                                        \n                                                                    ServiceWorkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        comms\n                                                  \n                                                        \n                                                                    AppCommsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routeChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        routeChange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Actions to perform on route change\nPage titles are in app.routes.ts\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { map, filter, mergeMap } from 'rxjs/operators';\n\nimport { environment } from '$env';\nimport { AuthService, ServiceWorkerService, AppCommsService } from '$shared';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private title: Title,\n    private authService: AuthService,\n    private sw: ServiceWorkerService,\n    private comms: AppCommsService,\n  ) {}\n\n  ngOnInit() {\n    this.routeChange();\n    // Always refresh env settings after app load even if already present in localstorage\n    // This protects against env setting getting stale when bypassing the app initializer\n\n    if (environment.settings.enableServiceWorker) {\n      this.sw.enable();\n    }\n    if (environment.settings.enableAppComms) {\n      this.comms.commsEnable();\n    }\n  }\n\n  /**\n   * Actions to perform on route change\n   * Page titles are in app.routes.ts\n   */\n  public routeChange() {\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationEnd),\n        map(() => this.activatedRoute),\n        map(route => {\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        mergeMap(route => route.data),\n      )\n      .subscribe(event => {\n        this.title.setTitle(event['title'] + ' | ' + environment.properties.appName); // Change document title\n        // If auth endpoint is available and not on the login page\n        if (environment.settings.enableAuth && this.router.url.toLowerCase().indexOf('login') === -1) {\n          this.authService.refreshTokenUpdate(); // On Route change, refresh authentication token\n        }\n      });\n  } // end routeChange\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AppConfigService.html': {
      url: 'injectables/AppConfigService.html',
      title: 'injectable - AppConfigService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/app-config.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages receiving and setting initial environment settings\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appSettingsUpdate\n                            \n                            \n                                    Public\n                                loadEnvSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: AppSettings, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/app-config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appSettingsUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        appSettingsUpdate(settings: Models.EnvSettings)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/app-config.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Set all env settings in app settings\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                        \n                                                                    Models.EnvSettings\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadEnvSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEnvSettings()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/app-config.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Load environment settings\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AppSettings } from '../app.settings';\nimport { environment } from '$env';\nimport { Models } from '$models';\n\nconst camelCase = require('lodash/camelCase');\n\ninterface Settings {\n  [key: string]: any;\n}\n\n/**\n * Manages receiving and setting initial environment settings\n */\n@Injectable()\nexport class AppConfigService {\n  constructor(private settings: AppSettings, private http: HttpClient) {}\n\n  /**\n   * Set all env settings in app settings\n   * @param settings\n   */\n  public appSettingsUpdate(settings: Models.EnvSettings) {\n    // Loop through all env properties passed by web api\n    Object.keys(settings).forEach(key => {\n      // Check to make sure this prop has been declared in app.settings and is not undefined\n      // If defined, updated prop value\n      // If not throw error\n      const appSetting = this.settings;\n      const appKey = camelCase(key);\n      if (appSetting[appKey] !== undefined) {\n        appSetting[appKey] = (settings)[key];\n      } else {\n        console.error(camelCase(key), `is not present in app settings`);\n      }\n    });\n  }\n\n  /**\n   * Load environment settings\n   */\n  public loadEnvSettings(): Promise {\n    return this.http\n      .get(environment.endpoints.envConfig)\n      .toPromise()\n      .then((data: any) => this.appSettingsUpdate(data))\n      .catch((err: any) => {\n        console.error('Error getting environment settings', err);\n        this.settings.sessionStorageClear();\n        return Promise.resolve();\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNoContentComponent\n\nNoContentComponent\n\nAppModule -->\n\nNoContentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSiteModule\n\nSiteModule\n\nAppModule -->\n\nSiteModule->AppModule\n\n\n\n\n\nAppSettings\n\nAppSettings\n\nAppModule -->\n\nAppSettings->AppModule\n\n\n\n\n\nHttpInterceptorService\n\nHttpInterceptorService\n\nAppModule -->\n\nHttpInterceptorService->AppModule\n\n\n\nAppModule -->\n\nHttpInterceptorService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                NoContentComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AppSettings\n                            \n                            \n                                     HttpInterceptorService\n                            \n                            \n                                     HttpInterceptorService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SiteModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // @angular modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, enableProdMode, ErrorHandler } from '@angular/core'; // APP_INITIALIZER,\nimport { RouterModule, PreloadAllModules, NoPreloading } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n// Global vendor modules\nimport { StoreModule } from '@ngrx/store';\n\n// Store Reducer\nimport { UIReducer } from '$ui';\nimport { ApiReducer } from '$api';\n\n// Main entrypoint component\nimport { AppComponent } from './app.component';\nimport { ROUTES } from './app.routes';\nimport { environment } from '$env';\n\n// Enables faster prod mode, does disable some dirty error checking though\nenableProdMode();\n\n// Shared\nimport {\n  AppSettings, // App settings\n  // AppConfigService, // App config/env settings\n\n  // Interceptors\n  HttpInterceptorService,\n  GlobalErrorHandler,\n} from '$shared';\n\n// Non-lazy loaded routes\nimport { LoginComponent, NoContentComponent } from '$routes';\nimport { SiteModule } from '$site';\n\n// Components\nexport const APP_COMPONENTS = [\n  // App component\n  AppComponent,\n  // Routes\n  LoginComponent,\n  NoContentComponent,\n];\n\n@NgModule({\n  declarations: [APP_COMPONENTS],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'angular-starter' }),\n    HttpClientModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(ROUTES, {\n      useHash: true,\n      preloadingStrategy: environment.settings.preloadRoutes ? PreloadAllModules : NoPreloading,\n    }),\n\n    StoreModule.forRoot({ api: ApiReducer, ui: UIReducer }), // NGRX\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.settings.enableServiceWorker }),\n\n    SiteModule.forRoot(),\n  ],\n  providers: [\n    AppSettings, // App settings\n    // AppConfigService, // App config/env settings\n\n    // Global error handling\n    {\n      provide: ErrorHandler,\n      useClass: GlobalErrorHandler,\n    },\n    // HTTP interceptor for auth\n    HttpInterceptorService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true,\n    },\n    // App initializer for startup\n    //{\n    //  provide: APP_INITIALIZER,\n    //  useFactory: AppInit,\n    //  deps: [AppSettings, AppConfigService],\n    //  multi: true,\n    //},\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [],\n})\nexport class AppModule {}\n\n/**\n * Check if environment settings are already present, if not load first before the rest of the app\n * @param settings - App settings\n * @param config - Config service\n */\n//export function AppInit(settings: AppSettings, config: AppConfigService): () => Promise {\n//  if (settings.apiUrl) {\n//    return (): Promise => new Promise(resolve => resolve());\n//  } else {\n//    return (): Promise => config.loadEnvSettings();\n//  }\n//}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppServerModule.html': {
      url: 'modules/AppServerModule.html',
      title: 'module - AppServerModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  AppServerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    AppModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [AppModule, ServerModule, ModuleMapLoaderModule],\n  providers: [\n    // Add universal-only providers here\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AppSettings.html': {
      url: 'injectables/AppSettings.html',
      title: 'injectable - AppSettings',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/app.settings.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _apiUrl\n                            \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Private\n                                _ui\n                            \n                            \n                                    Private\n                                _userName\n                            \n                            \n                                    Public\n                                isBrowser\n                            \n                            \n                                    Private\n                                localProp\n                            \n                            \n                                    Private\n                                localStorage\n                            \n                            \n                                    Private\n                                pad\n                            \n                            \n                                    Private\n                                sessionStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                propGet\n                            \n                            \n                                    Private\n                                propSet\n                            \n                            \n                                    Public\n                                sessionStorageClear\n                            \n                            \n                                    Private\n                                settingsRestore\n                            \n                            \n                                    Private\n                                settingsSave\n                            \n                            \n                                    Public\n                                uiState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ui\n                                \n                                \n                                    token\n                                \n                                \n                                    apiUrl\n                                \n                                \n                                    userName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/app.settings.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propGet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propGet(propKey: Propkey, location: \"localStorage\" | \"sessionStorage\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:105\n                            \n                        \n\n\n                \n                    \n                            Return a property. Loads it from this service first if available, if not looks in localstorage, if not there either return null\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        propKey\n                                                        \n                                                                    Propkey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        location\n                                                        \n                                                                    \"localStorage\" | \"sessionStorage\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'localStorage'\n                                                        \n\n                                                        \n                                                                \nLocation of locally stored prop, either sessionStorage or localStorage\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            propSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        propSet(propKey: Propkey, value: string | null, location: \"localStorage\" | \"sessionStorage\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:127\n                            \n                        \n\n\n                \n                    \n                            Set an app settings property. Write to localstorage if present, delete from localstorage if null\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        propKey\n                                                        \n                                                                    Propkey\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        value\n                                                        \n                                                                    string | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        location\n                                                        \n                                                                    \"localStorage\" | \"sessionStorage\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'localStorage'\n                                                        \n\n                                                        \n                                                                \nLocation of locally stored prop, either sessionStorage or localStorage\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessionStorageClear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sessionStorageClear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:94\n                            \n                        \n\n\n                \n                    \n                            Clear session storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            settingsRestore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        settingsRestore(state: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:166\n                            \n                        \n\n\n                \n                    \n                            Return an object that has been de-obfuscated\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            settingsSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        settingsSave(state: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:147\n                            \n                        \n\n\n                \n                    \n                            Return an object that has been obfuscated into a string\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uiState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        uiState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:41\n                            \n                        \n\n\n                \n                    \n                            Get the UI state directly from localstorage and not from memory \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _apiUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _apiUrl:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:60\n                            \n                        \n\n                \n                    \n                        Web Api Url \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _token:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:49\n                            \n                        \n\n                \n                    \n                        API token \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ui\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _ui:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:31\n                            \n                        \n\n                \n                    \n                        API token \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _userName:     string | null\n\n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:72\n                            \n                        \n\n                \n                    \n                        Username \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isBrowser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isBrowser:     \n\n                    \n                \n                    \n                        \n                            Default value : isPlatformBrowser(this.platformId)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:28\n                            \n                        \n\n                \n                    \n                        Property to store app settings in local or session storage \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localProp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localProp:     \n\n                    \n                \n                    \n                        \n                            Default value : 'settings-app-' + environment.properties.appName.length\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:22\n                            \n                        \n\n                \n                    \n                        Property to store app settings in local or session storage \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            localStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localStorage:     \n\n                    \n                \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pad:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:24\n                            \n                        \n\n                \n                    \n                        If obfusicated, pad settings with this many characters \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sessionStorage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sessionStorage:     \n\n                    \n                \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/app.settings.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ui\n                    \n                \n\n                \n                    \n                        getui()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:33\n                                \n                            \n                    \n                        \n                                API token \n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n                \n                    \n                        setui(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:51\n                                \n                            \n                    \n                        \n                                API token \n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n                \n                    \n                        settoken(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:54\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        apiUrl\n                    \n                \n\n                \n                    \n                        getapiUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:62\n                                \n                            \n                    \n                        \n                                Web Api Url \n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n                \n                    \n                        setapiUrl(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:65\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n\n                \n                    \n                        getuserName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:74\n                                \n                            \n                    \n                        \n                                Username \n\n\n                                \n                                    Returns :     string | null\n\n                                \n                        \n                    \n\n                \n                    \n                        setuserName(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/app.settings.ts:77\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { StringUtils } from '$utils';\nimport { environment } from '$env';\n\n// Enum of app setting properties. Only needed if using the propGet and propSet methods in this file\nexport enum AppSettingsProps {\n  token = 'token',\n  apiUrl = 'apiUrl',\n  userName = 'userName',\n  ui = 'ui',\n}\n\ntype Propkey = keyof typeof AppSettingsProps;\n\n// Getter/setters for app settings. Will read/write to app settings and on app load will try to reload from localstorage/sessionstorage\n@Injectable()\nexport class AppSettings {\n  /** Property to store app settings in local or session storage */\n  private localProp = 'settings-app-' + environment.properties.appName.length;\n  /** If obfusicated, pad settings with this many characters */\n  private pad = 100;\n  private localStorage: { [key in AppSettingsProps]?: string } = {};\n  private sessionStorage: { [key in AppSettingsProps]?: string } = {};\n  /** Property to store app settings in local or session storage */\n  public isBrowser = isPlatformBrowser(this.platformId);\n\n  /** API token */\n  private _ui: string | null = null;\n  /** API token */\n  public get ui(): string | null {\n    return this._ui || this.propGet(AppSettingsProps.ui);\n  }\n  public set ui(value: string | null) {\n    this._ui = value;\n    this.propSet(AppSettingsProps.ui, value);\n  }\n  /** Get the UI state directly from localstorage and not from memory */\n  public uiState() {\n    // Reload session and localstorage\n    this.sessionStorage = this.settingsRestore(window.sessionStorage.getItem(this.localProp));\n    this.localStorage = this.settingsRestore(window.localStorage.getItem(this.localProp));\n    return this.propGet(AppSettingsProps.ui);\n  }\n\n  /** API token */\n  private _token: string | null = null;\n  /** API token */\n  public get token(): string | null {\n    return this._token || this.propGet(AppSettingsProps.token);\n  }\n  public set token(value: string | null) {\n    this._token = value;\n    this.propSet(AppSettingsProps.token, value);\n  }\n\n  /** Web Api Url */\n  private _apiUrl: string | null = null;\n  /** Web Api Url */\n  public get apiUrl(): string | null {\n    return this._apiUrl || this.propGet(AppSettingsProps.apiUrl);\n  }\n  public set apiUrl(value: string | null) {\n    // console.log('apiUrl', value);\n    this._apiUrl = value;\n    this.propSet(AppSettingsProps.apiUrl, value);\n  }\n\n  /** Username */\n  private _userName: string | null = null;\n  /** Username */\n  public get userName(): string | null {\n    return this._userName || this.propGet(AppSettingsProps.userName);\n  }\n  public set userName(value: string | null) {\n    this._userName = value;\n    this.propSet(AppSettingsProps.userName, value);\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\n    if (this.isBrowser && window.sessionStorage.getItem(this.localProp)) {\n      this.sessionStorage = this.settingsRestore(window.sessionStorage.getItem(this.localProp));\n    }\n    if (this.isBrowser && window.localStorage.getItem(this.localProp)) {\n      this.localStorage = this.settingsRestore(window.localStorage.getItem(this.localProp));\n    }\n  }\n\n  /**\n   * Clear session storage\n   */\n  public sessionStorageClear() {\n    if (this.isBrowser) {\n      window.sessionStorage.clear();\n    }\n  }\n\n  /**\n   * Return a property. Loads it from this service first if available, if not looks in localstorage, if not there either return null\n   * @param prop - App settings property\n   * @param location - Location of locally stored prop, either sessionStorage or localStorage\n   */\n  private propGet(propKey: Propkey, location: 'localStorage' | 'sessionStorage' = 'localStorage') {\n    if (this.isBrowser) {\n      try {\n        if (location === 'sessionStorage' && this.sessionStorage[propKey]) {\n          return this.sessionStorage[propKey];\n        } else if (this.localStorage[propKey]) {\n          return this.localStorage[propKey];\n        }\n      } catch (err) {\n        console.log(err);\n        window.sessionStorage.clear();\n        window.localStorage.clear();\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Set an app settings property. Write to localstorage if present, delete from localstorage if null\n   * @param prop - App settings property\n   * @param location - Location of locally stored prop, either sessionStorage or localStorage\n   */\n  private propSet(\n    propKey: Propkey,\n    value: string | null,\n    location: 'localStorage' | 'sessionStorage' = 'localStorage',\n  ) {\n    if (this.isBrowser) {\n      if (location === 'sessionStorage') {\n        this.sessionStorage[propKey] = value;\n        window.sessionStorage.setItem(this.localProp, this.settingsSave(this.sessionStorage));\n      } else {\n        this.localStorage[propKey] = value;\n        window.localStorage.setItem(this.localProp, this.settingsSave(this.localStorage));\n      }\n    }\n  }\n\n  /**\n   * Return an object that has been obfuscated into a string\n   * @param state\n   */\n  private settingsSave(state: Object) {\n    try {\n      if (state) {\n        let str = JSON.stringify(state);\n        if (environment.settings.obfuscate) {\n          str = StringUtils.pad(str, this.pad, this.pad);\n          str = StringUtils.obfuscateAdd(str);\n        }\n        return str;\n      }\n    } catch (err) {\n      return null;\n    }\n  }\n\n  /**\n   * Return an object that has been de-obfuscated\n   * @param state\n   */\n  private settingsRestore(state: string) {\n    try {\n      if (state) {\n        let str = state;\n        if (environment.settings.obfuscate) {\n          str = StringUtils.obfuscateRemove(state);\n          str = StringUtils.trim(str, this.pad, this.pad);\n        }\n        const obj = JSON.parse(str);\n        return obj;\n      }\n    } catch (err) {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/AuthGuard.html': {
      url: 'guards/AuthGuard.html',
      title: 'guard - AuthGuard',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: AppSettings, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/guards/auth.guard.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\nimport { environment } from '$env';\nimport { AppSettings } from '../app.settings';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private settings: AppSettings, private auth: AuthService) {}\n\n  canActivate() {\n    if (\n      // If is on a dev domain and an auth endpoint is not yet available\n      !environment.settings.enableAuth || // Remove this line when out of dev/prototype phase for additional security\n      // OR a token and an api url are present\n      (this.settings.token && this.settings.apiUrl)\n    ) {\n      return true; // logged in and has apiUrl so set true\n    }\n    this.auth.logOut();\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AuthService.html': {
      url: 'injectables/AuthService.html',
      title: 'injectable - AuthService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logOutModal\n                            \n                            \n                                    Public\n                                modalDuration\n                            \n                            \n                                    Public\n                                refreshToken\n                            \n                            \n                                    Public\n                                sessionExpired\n                            \n                            \n                                    Public\n                                sessionTimer\n                            \n                            \n                                    Private\n                                setTimerDefaultSeconds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                launchLogoutModal\n                            \n                            \n                                    Public\n                                logIn\n                            \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                refreshTokenUpdate\n                            \n                            \n                                    Private\n                                setTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, route: ActivatedRoute, settings: AppSettings, modals: UIModalService, api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/auth.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modals\n                                                  \n                                                        \n                                                                    UIModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchLogoutModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        launchLogoutModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:126\n                            \n                        \n\n\n                \n                    \n                            Launch a modal window which gives the user a chance to continue working\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logIn(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Log the user in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logOut(showLogoutMessage: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:145\n                            \n                        \n\n\n                \n                    \n                            Log the user out. Clear stored data and redirect to login page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        showLogoutMessage\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refreshTokenUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        refreshTokenUpdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Refresh the token\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTimer(expirationSeconds: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:111\n                            \n                        \n\n\n                \n                    \n                            Set a countdown timer that pops a modal window when the user is close to session timeout\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expirationSeconds\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logOutModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logOutModal:     NgbModalRef\n\n                    \n                \n                    \n                        \n                            Type :     NgbModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        Holds reference to logout modal \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalDuration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 12\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                        How long to show the modal window \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refreshToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refreshToken:     \n\n                    \n                \n                    \n                        \n                            Default value : this.http.put(this.settings.apiUrl + environment.endpoints.authTokenRefresh, null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                        The http call so a token can be refreshed with a callback and success method \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessionExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sessionExpired:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                        Is session expired \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessionTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sessionTimer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:23\n                            \n                        \n\n                \n                    \n                        Holds the logout session timer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setTimerDefaultSeconds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setTimerDefaultSeconds:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/auth.service.ts:29\n                            \n                        \n\n                \n                    \n                        If a token is passed in without logging in no timer duration is present. Default to this \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, RoutesRecognized, ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '$env';\n\nimport { UIModalService } from '$ui';\nimport { ApiService } from '$api';\nimport { AppSettings } from '../app.settings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  /** Is session expired */\n  public sessionExpired = false;\n  /** How long to show the modal window */\n  public modalDuration = 12; // 120\n  /** Holds the logout session timer */\n  public sessionTimer: any = null; //\n  /** Holds reference to logout modal */\n  public logOutModal: NgbModalRef;\n  /** The http call so a token can be refreshed with a callback and success method */\n  public refreshToken = this.http.put(this.settings.apiUrl + environment.endpoints.authTokenRefresh, null);\n  /** If a token is passed in without logging in no timer duration is present. Default to this */\n  private setTimerDefaultSeconds = 5; // 5 minutes\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute,\n    private settings: AppSettings,\n    private modals: UIModalService,\n    private api: ApiService,\n  ) {\n    // If token is passed in via query param, update settings. Standard query param: /#/?token=123456\n    this.route.queryParams.subscribe(queryParams => {\n      if (queryParams.token) {\n        this.settings.token = queryParams.token;\n        this.setTimer(this.setTimerDefaultSeconds); // Start the session timer with the default time\n      }\n    });\n\n    // If a token is passed in via matrix notation params, update app settings.\n    // Need to use matrix notation /#/route;token=123456456456\n    this.router.events.subscribe(val => {\n      if (val instanceof RoutesRecognized && val.state.root.firstChild.params.token) {\n        this.settings.token = val.state.root.firstChild.params.token;\n        this.setTimer(this.setTimerDefaultSeconds); // Start the session timer with the default time\n      }\n    });\n  }\n\n  /**\n   * Log the user in\n   * @param data\n   */\n  public logIn(data: any) {\n    // If no auth endpoint set up yet, use a get and set the token properties so the rest of the app can work\n    if (!environment.settings.enableAuth) {\n      return this.http.get('assets/mock-data/login.json').pipe(\n        map((response: any) => {\n          this.settings.token = response.data.token;\n          this.sessionExpired = false;\n          this.setTimer(response.data.expirationSeconds);\n          return response;\n        }),\n      );\n    }\n    const url = this.settings.apiUrl + environment.endpoints.authLogin;\n    // Auth point is configured\n    return this.http.post(url, data).pipe(\n      map((response: any) => {\n        this.settings.token = response.data.token;\n        this.sessionExpired = false;\n        this.setTimer(response.data.expirationSeconds);\n        return response;\n      }),\n    );\n  } // end LogIn\n\n  /**\n   * Refresh the token\n   */\n  public refreshTokenUpdate(): void {\n    this.refreshToken.subscribe(\n      (response: any) => {\n        // Make sure a token is present before it is replaced\n        if (this.settings.token) {\n          // console.log('Refreshing token', response);\n          this.sessionExpired = false;\n          this.settings.token = response.data.token;\n          this.setTimer(response.data.expirationSeconds);\n        }\n        return true;\n      },\n      () => {\n        // console.log('Error refreshing token');\n        this.logOut();\n      },\n    );\n  } // end RefreshToken\n\n  /**\n   * Set a countdown timer that pops a modal window when the user is close to session timeout\n   * @param ExpirationSeconds\n   */\n  private setTimer(expirationSeconds: number): void {\n    // console.log('Setting session timer to ', ExpirationSeconds, ' seconds');\n    clearTimeout(this.sessionTimer);\n    // ExpirationSeconds = 20;\n    this.sessionTimer = setTimeout(() => {\n      // console.log('Timer Expired');\n      this.sessionExpired = true;\n      this.launchLogoutModal();\n      // Double the modal duration to add a buffer between server countdown and browser countdown\n    }, (expirationSeconds - this.modalDuration * 2) * 1000);\n  } // end SetTimer\n\n  /**\n   * Launch a modal window which gives the user a chance to continue working\n   */\n  private launchLogoutModal(): void {\n    clearTimeout(this.sessionTimer);\n    // Open log out modal window\n    this.modals.open('LogoutModalComponent', false, 'lg', this.modalDuration).result.then(\n      () => {\n        this.logOut();\n      },\n      dismissReason => {\n        // When modal is dismissed\n        if (dismissReason !== 'norefresh') {\n          this.refreshTokenUpdate();\n        }\n      },\n    );\n  } // end launchLogoutModal\n\n  /**\n   * Log the user out. Clear stored data and redirect to login page\n   */\n  public logOut(showLogoutMessage = false): void {\n    clearTimeout(this.sessionTimer);\n    this.settings.token = null;\n    this.api.resetStore(); // Clear out all API data on log out for security\n    // Don't throw a redirect url if this is the dashboard since that is default on login\n    const returnUrl = this.router.url !== '/' && this.router.url !== '/login' ? this.router.url.split('?')[0] : null;\n    // Determine whether or not to show the log out message\n    const queryParams = showLogoutMessage ? { returnUrl: returnUrl, session: 'loggedout' } : { returnUrl: returnUrl };\n    this.router.navigate(['/login'], { queryParams: queryParams });\n  } // end LogOut\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ChartModule.html': {
      url: 'modules/ChartModule.html',
      title: 'module - ChartModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  ChartModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nChartComponent\n\nChartComponent\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartComponent->ChartModule\n\n\n\n\n\nChartComponent \n\nChartComponent \n\nChartComponent  -->\n\nChartModule->ChartComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/libs/chart/chart.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChartComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ChartComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartComponent } from './chart.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ChartComponent],\n  exports: [ChartComponent],\n})\nexport class ChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/ChartsComponent.html': {
      url: 'components/ChartsComponent.html',
      title: 'component - ChartsComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  ChartsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/qa/routes/charts/charts.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-charts\n            \n\n            \n                styleUrls\n                charts.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./charts.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataPoints\n                            \n                            \n                                    Public\n                                dataPointsCounts\n                            \n                            \n                                    Public\n                                dataPointsTopFive\n                            \n                            \n                                    Public\n                                dataPointsTransfersTotal\n                            \n                            \n                                    Public\n                                frame\n                            \n                            \n                                    Public\n                                labels\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                countsPerAgent\n                            \n                            \n                                    Public\n                                formatTooltip\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                topFiveTransfers\n                            \n                            \n                                    Private\n                                transfersTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/qa/routes/charts/charts.component.ts:20\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            countsPerAgent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        countsPerAgent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formatTooltip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        formatTooltip(val: CanvasJS.ChartLabelFormatter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:133\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    CanvasJS.ChartLabelFormatter\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            topFiveTransfers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        topFiveTransfers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Map top 5 Transfers\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transfersTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transfersTotal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:106\n                            \n                        \n\n\n                \n                    \n                            Map total transfers \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataPoints\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataPoints:     CanvasJS.ChartDataSeriesOptions[]\n\n                    \n                \n                    \n                        \n                            Type :     CanvasJS.ChartDataSeriesOptions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataPointsCounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataPointsCounts:     CanvasJS.ChartDataSeriesOptions[]\n\n                    \n                \n                    \n                        \n                            Type :     CanvasJS.ChartDataSeriesOptions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataPointsTopFive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataPointsTopFive:     CanvasJS.ChartDataSeriesOptions[]\n\n                    \n                \n                    \n                        \n                            Type :     CanvasJS.ChartDataSeriesOptions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataPointsTransfersTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataPointsTransfersTotal:     CanvasJS.ChartDataSeriesOptions[]\n\n                    \n                \n                    \n                        \n                            Type :     CanvasJS.ChartDataSeriesOptions[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            frame\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        frame:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            labels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        labels:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     \n\n                    \n                \n                    \n                        \n                            Default value : user\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/routes/charts/charts.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { user } from './user';\nimport { transfers } from './transfers';\n\n@Component({\n  selector: 'app-charts',\n  templateUrl: './charts.component.html',\n  styleUrls: ['./charts.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChartsComponent implements OnInit {\n  public frame = 0;\n\n  public dataPoints: CanvasJS.ChartDataSeriesOptions[] = [];\n  public dataPointsTransfersTotal: CanvasJS.ChartDataSeriesOptions[] = [];\n  public dataPointsTopFive: CanvasJS.ChartDataSeriesOptions[] = [];\n  public dataPointsCounts: CanvasJS.ChartDataSeriesOptions[] = [];\n\n  public user = user;\n  public labels: string[];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.transfersTotal();\n\n    this.dataPointsCounts = this.countsPerAgent();\n    this.dataPointsTopFive = this.topFiveTransfers();\n  }\n\n  private countsPerAgent() {\n    const data = [...transfers];\n    const date = transfers[0].date;\n\n    const transfersTotal: { [key: string]: { label: string; y: number } } = {};\n\n    data.forEach(elem => {\n      if (elem.date === date) {\n        if (!transfersTotal[elem.name]) {\n          transfersTotal[elem.name] = {\n            label: elem.name,\n            y: 0,\n          };\n        }\n        transfersTotal[elem.name].y += elem.Transfers;\n      }\n    });\n\n    const dataPoints = [];\n\n    for (let key in transfersTotal) {\n      dataPoints.push(transfersTotal[key]);\n    }\n\n    return [\n      {\n        dataPoints: dataPoints.sort((a, b) => {\n          if (a.y  b.y) return 1;\n          return 0;\n        }),\n      },\n    ];\n  }\n\n  /**\n   * Map top 5 Transfers\n   */\n  private topFiveTransfers() {\n    const data = [...transfers];\n\n    const transfersTotal: { [key: string]: { label: string; y: number } } = {};\n\n    data.forEach(elem => {\n      if (!transfersTotal[elem.name]) {\n        transfersTotal[elem.name] = {\n          label: elem.name,\n          y: 0,\n        };\n      }\n      transfersTotal[elem.name].y += elem.Transfers;\n    });\n    const dataPoints = [];\n\n    for (let key in transfersTotal) {\n      dataPoints.push(transfersTotal[key]);\n    }\n\n    const mapped = [\n      {\n        dataPoints: dataPoints\n          .sort((a, b) => {\n            if (a.y  b.y) return 1;\n            return 0;\n          })\n          .reverse(),\n      },\n    ];\n    mapped[0].dataPoints.length = 10;\n    mapped[0].dataPoints.reverse();\n    return mapped;\n  }\n\n  /** Map total transfers */\n  private transfersTotal() {\n    const date = transfers[0].date;\n    const transfersByAgent: { [key: string]: any[] } = {};\n    transfers.forEach(user => {\n      if (user.date === date) {\n        const key = user.date + 'T' + user.Time;\n        if (!transfersByAgent[key]) {\n          transfersByAgent[key] = [];\n        }\n        transfersByAgent[key].push(user);\n      }\n    });\n\n    this.dataPointsTransfersTotal = [];\n    for (let key in transfersByAgent) {\n      this.dataPointsTransfersTotal.push({\n        name: transfersByAgent[key][0].Time,\n        dataPoints: transfersByAgent[key].map(transfer => {\n          return {\n            label: transfer.name,\n            y: transfer.Transfers,\n          };\n        }),\n      });\n    }\n  }\n\n  public formatTooltip(val: CanvasJS.ChartLabelFormatter): string {\n    //console.log(val)\n    return val.label + '!!';\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Total Transfers Today |\n      Transfers |-->\n      Top 10 Transfers\n    \n  \n\n  \n  \n\n  \n  \n\n  \n  \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Total Transfers Today |      Transfers |-->      Top 10 Transfers                    '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChartsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ComponentsModule.html': {
      url: 'modules/ComponentsModule.html',
      title: 'module - ComponentsModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  ComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_imports\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nAppComponent->ComponentsModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nComponentsModule -->\n\nLoginComponent->ComponentsModule\n\n\n\n\n\nNoContentComponent\n\nNoContentComponent\n\nComponentsModule -->\n\nNoContentComponent->ComponentsModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nComponentsModule->AppComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nComponentsModule->LoginComponent \n\n\n\n\n\nNoContentComponent \n\nNoContentComponent \n\nNoContentComponent  -->\n\nComponentsModule->NoContentComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nComponentsModule -->\n\nSharedModule->ComponentsModule\n\n\n\n\n\nVendorModule\n\nVendorModule\n\nComponentsModule -->\n\nVendorModule->ComponentsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/components.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                NoContentComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                APP_MODALS\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    VendorModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AppComponent\n                            \n                            \n                                    LoginComponent\n                            \n                            \n                                    NoContentComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VendorModule } from '../vendor.module';\nimport { SharedModule } from '$shared';\n\n// Global modals\nimport { ConfirmationModalComponent } from './modals/confirmation/confirmation-modal.component';\nimport { LogoutModalComponent } from './modals/logout/logout-modal.component';\n\n// Layout\nimport { FooterComponent } from './masterpage/footer/footer.component';\nimport { HeaderComponent } from './masterpage/header/header.component';\nimport { LayoutMainComponent } from './masterpage/main/layout-main.component';\nimport { LayoutSingleComponent } from './masterpage/single/layout-single.component';\nimport { NavComponent } from './masterpage/nav/nav.component';\nimport { NavSearchComponent } from './masterpage/nav/search/nav-search.component';\n\n// Components\nimport { LaunchModalComponent } from './launch-modal/launch-modal.component';\nimport { ApiStateComponent } from './api-state/api-state.component';\nimport { CounterComponent } from './counter/counter.component';\n\n// Modals include\nconst APP_MODALS = [ConfirmationModalComponent, LogoutModalComponent];\n\n// Components to include\nexport const APP_COMPONENTS = [\n  ...APP_MODALS,\n  FooterComponent,\n  HeaderComponent,\n  LayoutMainComponent,\n  LayoutSingleComponent,\n  NavComponent,\n  NavSearchComponent,\n  LaunchModalComponent,\n  ApiStateComponent,\n  CounterComponent,\n];\n\n@NgModule({\n  imports: [\n    // Angular\n    CommonModule,\n    // Shared\n    SharedModule,\n    // Vendors\n    VendorModule,\n  ],\n  providers: [],\n  declarations: [APP_COMPONENTS],\n  exports: [APP_COMPONENTS],\n  entryComponents: [APP_MODALS],\n})\nexport class ComponentsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ComponentsModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/ConfirmationModalComponent.html': {
      url: 'components/ConfirmationModalComponent.html',
      title: 'component - ConfirmationModalComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  ConfirmationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modals/confirmation/confirmation-modal.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./confirmation-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modals/confirmation/confirmation-modal.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/modals/confirmation/confirmation-modal.component.ts:15\n                            \n                        \n\n\n                \n                    \n                            Submit the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/confirmation/confirmation-modal.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialogRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/confirmation/confirmation-modal.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\n//import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n})\nexport class ConfirmationModalComponent {\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  /**\n   * Submit the form\n   */\n  public submit() {\n    this.dialogRef.close(this.data);\n  }\n}\n\n    \n\n    \n        \n\n  \n     Confirmation\n    \n      &times;\n    \n  \n\n  \n    {{ data }} \n  \n\n  \n    Cancel\n    \n       Confirm\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Confirmation          ×            {{ data }}         Cancel           Confirm      '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ContextModule.html': {
      url: 'modules/ContextModule.html',
      title: 'module - ContextModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  ContextModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContextModule\n\n\n\ncluster_ContextModule_providers\n\n\n\n\nContextService\n\nContextService\n\n\n\nContextModule\n\nContextModule\n\nContextModule -->\n\nContextService->ContextModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/libs/context-menu/context-menu.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     ContextService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContextMenuModule } from 'ngx-contextmenu';\n\nimport { ContextService } from './context-menu.service';\n\n@NgModule({\n  imports: [CommonModule, ContextMenuModule.forRoot()],\n  declarations: [],\n  providers: [ContextService],\n  exports: [ContextMenuModule],\n})\nexport class ContextModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ContextService.html': {
      url: 'injectables/ContextService.html',
      title: 'injectable - ContextService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libs/context-menu/context-menu.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuRefs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(contextMenuService: ContextMenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/libs/context-menu/context-menu.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contextMenuService\n                                                  \n                                                        \n                                                                    ContextMenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open(name: ContextMenuList, $event: MouseEvent, data?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/context-menu/context-menu.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Open a specific context menu\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    ContextMenuList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nName of register context menu\n\n\n                                                        \n                                                \n                                                \n                                                        $event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nMouse event\n\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nOptional data\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        register(name: ContextMenuList, ref: ContextMenuComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/context-menu/context-menu.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Register a component based context menu with this service\nUSAGE: \n\nAdd reference in DOM: \nRegister viewchild in component: @ViewChild('contextMenu') contextMenu: ContextMenuComponent;\nAdd name of context menu to enumeration in context-menu-d-ts\nRegister menu with service on init:\n ngOnInit() {\n   this.menu.register(ContextMenuList.home, this.contextMenu);\n }\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    ContextMenuList\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nName of menu to register with\n\n\n                                                        \n                                                \n                                                \n                                                        ref\n                                                        \n                                                                    ContextMenuComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nComponent reference\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            menuRefs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuRefs:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/context-menu/context-menu.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ContextMenuComponent, ContextMenuService } from 'ngx-contextmenu';\nimport { ContextMenuList } from './context-menu.list';\n\n@Injectable()\nexport class ContextService {\n  private menuRefs: { [key: string]: ContextMenuComponent } = {};\n\n  constructor(private contextMenuService: ContextMenuService) {}\n\n  /**\n   * Register a component based context menu with this service\n   * USAGE: \n   * 1. Add reference in DOM: \n   * 2. Register viewchild in component: @ViewChild('contextMenu') contextMenu: ContextMenuComponent;\n   * 4. Add name of context menu to enumeration in context-menu-d-ts\n   * 3. Register menu with service on init:\n        ngOnInit() {\n          this.menu.register(ContextMenuList.home, this.contextMenu);\n        }\n   * @param name - Name of menu to register with\n   * @param ref - Component reference\n   */\n  public register(name: ContextMenuList, ref: ContextMenuComponent) {\n    this.menuRefs[name] = ref;\n  }\n\n  /**\n   * Open a specific context menu\n   * @param name - Name of register context menu\n   * @param $event - Mouse event\n   * @param data - Optional data\n   */\n  public open(name: ContextMenuList, $event: MouseEvent, data?: any) {\n    this.contextMenuService.show.next({\n      // Optional - if unspecified, all context menu components will open\n      contextMenu: this.menuRefs[name],\n      event: $event,\n      item: data,\n    });\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/CountPipe.html': {
      url: 'pipes/CountPipe.html',
      title: 'pipe - CountPipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CountPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/count.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        count\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/count.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n// Usage: {{ value | count }}\n@Pipe({\n  name: 'count',\n})\nexport class CountPipe implements PipeTransform {\n  transform(value: any): number {\n    // If array\n    if (Array.isArray(value) && typeof value === 'object') {\n      return value.length;\n      // If object\n    } else if (!Array.isArray(value) && typeof value === 'object') {\n      return Object.keys(value).length;\n      // If string\n    } else if (typeof value === 'string') {\n      return value.length;\n    } else {\n      return value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/CounterComponent.html': {
      url: 'components/CounterComponent.html',
      title: 'component - CounterComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  CounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/counter/counter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-counter\n            \n\n            \n                styleUrls\n                counter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./counter.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/counter/counter.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/counter/counter.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/counter/counter.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/counter/counter.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Reset timer\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        start()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/counter/counter.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            Start timer\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/counter/counter.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Stop timer\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timer:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/counter/counter.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CounterComponent implements OnInit, OnDestroy {\n  public timer: Observable;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.start();\n  }\n\n  /**\n   * Start timer\n   */\n  public start() {\n    this.timer = timer(0, 1000).pipe(startWith(0));\n  }\n\n  /**\n   * Stop timer\n   */\n  public stop() {\n    this.timer = null;\n  }\n\n  /**\n   * Reset timer\n   */\n  public reset() {\n    this.stop();\n    this.start();\n  }\n\n  ngOnDestroy() {\n    this.stop();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{ timer | duration }}\n  \n  \n    {{ 0 | duration }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ timer | duration }}        {{ 0 | duration }}  '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'CounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/DebouncePipe.html': {
      url: 'pipes/DebouncePipe.html',
      title: 'pipe - DebouncePipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DebouncePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/debounce.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Debounce a value so that the input is only allowed to change within a specified time frame. Default is 300ms\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        debounce\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, debounceTime?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/debounce.pipe.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        debounceTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/pipes/debounce.pipe.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeoutHandle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeoutHandle:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/pipes/debounce.pipe.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transformValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        transformValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/pipes/debounce.pipe.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, ChangeDetectorRef, NgZone } from '@angular/core';\n/**\n * Debounce a value so that the input is only allowed to change within a specified time frame. Default is 300ms\n */\n@Pipe({ name: 'debounce', pure: false })\nexport class DebouncePipe implements PipeTransform {\n  private currentValue: any = null;\n  private transformValue: any = null;\n  private timeoutHandle: any = -1;\n\n  constructor(private changeDetector: ChangeDetectorRef, private zone: NgZone) {}\n\n  transform(value: any, debounceTime?: number): any {\n    if (this.currentValue === null) {\n      this.currentValue = value;\n      return value;\n    }\n    if (this.currentValue === value) {\n      // there is no value that needs debouncing at this point\n      clearTimeout(this.timeoutHandle);\n      return value;\n    }\n    if (this.transformValue !== value) {\n      // there is a new value that needs to be debounced\n      this.transformValue = value;\n      clearTimeout(this.timeoutHandle);\n      this.timeoutHandle = setTimeout(() => {\n        this.zone.run(() => {\n          this.currentValue = this.transformValue;\n          this.transformValue = null;\n          this.changeDetector.markForCheck();\n        });\n      }, typeof debounceTime === 'number' ? debounceTime : 300);\n    }\n    return this.currentValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/DesktopUtils.html': {
      url: 'classes/DesktopUtils.html',
      title: 'class - DesktopUtils',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DesktopUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/desktop-utils.ts\n        \n\n            \n                Description\n            \n            \n                Helper utilities for desktop interaction\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                copyToClipboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            copyToClipboard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        copyToClipboard(text: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/desktop-utils.ts:8\n                            \n                        \n\n\n                \n                    \n                            Copy the selected string to the clipboard\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class DesktopUtils {\n  /**\n   * Copy the selected string to the clipboard\n   */\n  static copyToClipboard(text: string) {\n    if ((window).clipboardData && (window).setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      return (window).clipboardData.setData('Text', text);\n    } else if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n      const textarea = document.createElement('textarea');\n      textarea.textContent = text;\n      textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in MS Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        console.warn('Copy to clipboard failed.', ex);\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/DurationPipe.html': {
      url: 'pipes/DurationPipe.html',
      title: 'pipe - DurationPipe',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/duration.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Formats a number from an interval counter into a duration, IE 12 > 00:00:12\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        duration\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/duration.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \'@angular/core\';\n\n/**\n * Formats a number from an interval counter into a duration, IE 12 > 00:00:12\n */\n@Pipe({\n  name: \'duration\',\n})\nexport class DurationPipe implements PipeTransform {\n  transform(value: any): any {\n    let days: number = Math.floor(value / 60 / 60 / 24); // Days are dropped for now\n    let hours: number = days - Math.floor(value / 60 / 60);\n    let minutes: number = Math.floor(value / 60);\n    let seconds: number = value - minutes * 60;\n\n    // Convert to string\n    let hoursStr = String(hours);\n    let minutesStr = String(minutes);\n    let secondsStr = String(seconds);\n\n    // Add leading zeroes\n    if (hours \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'pipes/FilterPipe.html': {
      url: 'pipes/FilterPipe.html',
      title: 'pipe - FilterPipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/filter.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Filters an array of strings or an array of objects\nUSAGE: {{ val | filter: 'John' }} // Look for John in string array\nUSAGE: {{ val | filter: 'John' : 'fullName' }} // Look for John in property of fullName in array of objects\nUSAGE: {{ val | filter: '*' : 'fullName' : true }} // Return all objects with proprety of fullName regardless of value\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(arr: any[], searchValue: string | boolean, objProp?: string, hasProp?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/filter.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        arr\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        searchValue\n                                                        \n                                                                    string | boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objProp\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        hasProp\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Filters an array of strings or an array of objects\n * USAGE: {{ val | filter: 'John' }} // Look for John in string array\n * USAGE: {{ val | filter: 'John' : 'fullName' }} // Look for John in property of fullName in array of objects\n * USAGE: {{ val | filter: '*' : 'fullName' : true }} // Return all objects with proprety of fullName regardless of value\n */\n@Pipe({\n  name: 'filter',\n})\nexport class FilterPipe implements PipeTransform {\n  transform(arr: any[], searchValue: string | boolean, objProp?: string, hasProp?: boolean) {\n    // If no string value, return whole array\n    if (!searchValue && searchValue !== false) {\n      return arr;\n    }\n    // Clean up the string to make matching easier\n    const simplifyString = (str: string | boolean) => {\n      return str\n        .toString()\n        .toLowerCase()\n        .trim()\n        .replace(/[^a-z0-9]/gi, '');\n    };\n\n    return arr.filter(elem => {\n      // If hasProp is specified, return or exclude items based on whether or not that property exists\n      if (hasProp === true) {\n        return elem.hasOwnProperty(objProp) ? true : false;\n      } else if (hasProp === false) {\n        return elem.hasOwnProperty(objProp) ? false : true;\n      } else {\n        // If objProp was supplied, search the prop within the object, otherwise its a string array and search that\n        const stringSearch = objProp ? simplifyString(elem[objProp]) : simplifyString(elem);\n        // If includes, return value\n        return stringSearch.includes(simplifyString(searchValue)) ? true : false;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'directives/FocusDirective.html': {
      url: 'directives/FocusDirective.html',
      title: 'directive - FocusDirective',
      body:
        '\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/focus.directive.ts\n        \n\n            \n                Description\n            \n            \n                When this element is loaded, automatically attach focus\nUSAGE:\nappFocus\n[appFocus]="false" // Disable\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/focus.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appFocus\n                    \n                    \n                        Default should focus on load, can be set to false to disable \n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/focus.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/directives/focus.directive.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, AfterViewInit, ElementRef, Input } from \'@angular/core\';\n\n/**\n * When this element is loaded, automatically attach focus\n * USAGE:\n * appFocus\n * [appFocus]="false" // Disable\n */\n@Directive({\n  selector: \'[appFocus]\',\n})\nexport class FocusDirective implements AfterViewInit {\n  /** Default should focus on load, can be set to false to disable */\n  @Input() appFocus: boolean;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit() {\n    if (this.appFocus !== false && this.el && this.el.nativeElement) {\n      this.el.nativeElement.focus();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'components/FooterComponent.html': {
      url: 'components/FooterComponent.html',
      title: 'component - FooterComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/masterpage/footer/footer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/masterpage/footer/footer.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'directives/FullScreenDirective.html': {
      url: 'directives/FullScreenDirective.html',
      title: 'directive - FullScreenDirective',
      body:
        "\n                   \n\n\n\n\n\n\n\n  Directives\n  FullScreenDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/full-screen.directive.ts\n        \n\n            \n                Description\n            \n            \n                Resizes the attached DOM element to full all vertical space below it's current position\n\n            \n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appFullScreen]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                elem\n                            \n                            \n                                    Public\n                                height\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Public\n                                refresh\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                offsetBottom\n                            \n                            \n                                offsetTop\n                            \n                            \n                                overflowX\n                            \n                            \n                                overflowY\n                            \n                            \n                                percent\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/full-screen.directive.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        offsetBottom\n                    \n                    \n                        How much to offset the bottom of the grid \n\n                        \n                            Default value : 21\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offsetTop\n                    \n                    \n                        How much to offset the top of the grid. Will adjust automatically if null \n\n                            \n                            Type :    number\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overflowX\n                    \n                    \n                        How to handle overflow X \n\n                            \n                            Type :    overflow\n\n                            \n                        \n                            Default value : 'hidden'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overflowY\n                    \n                    \n                        How to handle overflow Y \n\n                            \n                            Type :    overflow\n\n                            \n                        \n                            Default value : 'auto'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        percent\n                    \n                    \n                        What percent of the viewport height to display, default is 100% \n\n                        \n                            Default value : 100\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:22\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            calcHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        calcHeight()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:56\n                            \n                        \n\n\n                \n                    \n                            After view is available, refresh height\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:49\n                            \n                        \n\n\n                \n                    \n                            On any input changes, refresh height\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            refresh\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        refresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            Refresh the height manually\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elem:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:13\n                            \n                        \n\n                \n                    \n                        DOM reference \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/directives/full-screen.directive.ts:15\n                            \n                        \n\n                \n                    \n                        Current height of element \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, AfterViewInit, OnChanges, Input, HostListener } from '@angular/core';\n\ntype overflow = 'auto' | 'hidden' | 'inherit' | 'initial' | 'overlay' | 'scroll' | 'visible';\n\n/**\n * Resizes the attached DOM element to full all vertical space below it's current position\n */\n@Directive({\n  selector: '[appFullScreen]',\n})\nexport class FullScreenDirective implements AfterViewInit, OnChanges {\n  /** DOM reference */\n  public elem: ElementRef;\n  /** Current height of element */\n  public height: number;\n\n  /** How much to offset the top of the grid. Will adjust automatically if null */\n  @Input() offsetTop: number = null;\n  /** How much to offset the bottom of the grid */\n  @Input() offsetBottom = 21;\n  /** What percent of the viewport height to display, default is 100% */\n  @Input() percent = 100;\n  /** How to handle overflow Y */\n  @Input() overflowY: overflow = 'auto';\n  /** How to handle overflow X */\n  @Input() overflowX: overflow = 'hidden';\n\n  @HostListener('window:resize')\n  onResize() {\n    setTimeout(() => {\n      this.calcHeight();\n    }, 100);\n  }\n\n  constructor(el: ElementRef) {\n    this.elem = el;\n  }\n\n  /**\n   * Refresh the height manually\n   */\n  public refresh() {\n    this.calcHeight();\n  }\n\n  /**\n   * On any input changes, refresh height\n   */\n  ngOnChanges() {\n    this.calcHeight();\n  }\n\n  /**\n   * After view is available, refresh height\n   */\n  ngAfterViewInit() {\n    this.calcHeight();\n  }\n\n  private calcHeight() {\n    // Make sure DOM is ready\n    if (this.elem && this.elem.nativeElement) {\n      // Get offset top automatically\n      let offsetTop = Math.round(this.elem.nativeElement.getBoundingClientRect().top + this.offsetBottom);\n      // If offset top override is set, use that\n      if (this.offsetTop != null) {\n        offsetTop = this.offsetTop + this.offsetBottom;\n      }\n\n      this.elem.nativeElement.style['height'] = 'calc(' + this.percent + 'vh - ' + offsetTop + 'px)';\n      this.elem.nativeElement.style['overflow-y'] = this.overflowY;\n      this.elem.nativeElement.style['overflow-x'] = this.overflowX;\n      this.height = Math.floor(this.elem.nativeElement.getBoundingClientRect().height);\n    }\n  }\n}\n// let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/GlobalErrorHandler.html': {
      url: 'injectables/GlobalErrorHandler.html',
      title: 'injectable - GlobalErrorHandler',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/error.interceptor.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/interceptors/error.interceptor.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { ErrorHandler, Injectable } from '@angular/core';\nimport { AppSettings } from '../app.settings';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n  // private errorLogApi = '/api/logerror'; // API to post errors too\n\n  constructor(private settings: AppSettings) {}\n\n  // Custom error handler for application/angular errors\n  // Uses plain JS to eliminate any dependencies that may not be available due to the error\n  public handleError(error: any) {\n    console.error(error);\n    // Only throw application errors to the dom. If the error has an errorMsg then it is an internal error\n    if (this.settings.isBrowser && !error.errorMsg) {\n    }\n    // Now throw the error to the console\n    throw error;\n  } // end handleError\n\n  /**\n   * Log the error to an API\n  private logError(errorMsg: string) {\n    const http = new XMLHttpRequest();\n    const params = 'NEEDKEY=' + errorMsg;\n    http.open('POST', this.errorLogApi, true);\n\n    // Send the proper header information along with the request\n    http.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n    http.onreadystatechange = () => { // Call a function when the state changes.\n      if (http.readyState === 4 && http.status === 200) {\n        console.warn('Successfully logged error');\n      }\n    };\n    http.send(params);\n  } // end logError\n  */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/GridModule.html': {
      url: 'modules/GridModule.html',
      title: 'module - GridModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  GridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_exports\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nGridStatusBarComponent\n\nGridStatusBarComponent\n\nGridModule -->\n\nGridStatusBarComponent->GridModule\n\n\n\n\n\nGridTemplateRendererComponent\n\nGridTemplateRendererComponent\n\nGridModule -->\n\nGridTemplateRendererComponent->GridModule\n\n\n\n\n\nTextCasePipe\n\nTextCasePipe\n\nGridModule -->\n\nTextCasePipe->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridStatusBarComponent \n\nGridStatusBarComponent \n\nGridStatusBarComponent  -->\n\nGridModule->GridStatusBarComponent \n\n\n\n\n\nGridTemplateRendererComponent \n\nGridTemplateRendererComponent \n\nGridTemplateRendererComponent  -->\n\nGridModule->GridTemplateRendererComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/libs/grid/grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridComponent\n                            \n                            \n                                GridStatusBarComponent\n                            \n                            \n                                GridTemplateRendererComponent\n                            \n                            \n                                TextCasePipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                GridStatusBarComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridComponent\n                            \n                            \n                                    GridStatusBarComponent\n                            \n                            \n                                    GridTemplateRendererComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { environment } from '$env';\n\nimport { AgGridModule } from 'ag-grid-angular';\nimport 'ag-grid-enterprise';\n\nimport { GridComponent } from './grid/grid.component';\nimport { GridTemplateRendererComponent } from './grid-template-renderer/grid-template-renderer.component';\nimport { GridStatusBarComponent } from './grid-status-bar/grid-status-bar.component';\nimport { TextCasePipe } from './pipes/text-case.pipe';\n\n// Set license\nimport { LicenseManager } from 'ag-grid-enterprise';\nLicenseManager.setLicenseKey(environment.licenses.agGrid);\n\n@NgModule({\n  imports: [CommonModule, AgGridModule.withComponents([GridTemplateRendererComponent])],\n  providers: [],\n  declarations: [GridTemplateRendererComponent, GridStatusBarComponent, TextCasePipe, GridComponent],\n  exports: [AgGridModule, GridTemplateRendererComponent, GridStatusBarComponent, GridComponent],\n  entryComponents: [GridStatusBarComponent],\n})\nexport class GridModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/GridStatusBarComponent.html': {
      url: 'components/GridStatusBarComponent.html',
      title: 'component - GridStatusBarComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  GridStatusBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grid-status-bar\n            \n\n            \n                styleUrls\n                grid-status-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grid-status-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                grid\n                            \n                            \n                                    Private\n                                gridColumnApi\n                            \n                            \n                                    Public\n                                gridFilters\n                            \n                            \n                                    Public\n                                gridGroups\n                            \n                            \n                                    Public\n                                gridState\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                    Private\n                                resetting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                agInit\n                            \n                            \n                                    Public\n                                gridStateChange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                            \n                                    Public\n                                removeGroup\n                            \n                            \n                                    Public\n                                removeSort\n                            \n                            \n                                    Public\n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            agInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        agInit(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Attach AG grid parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridStateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gridStateChange(gridState: GridState)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            When the grid state is changed. This is passed from the parent component\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridState\n                                                        \n                                                                    GridState\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(field: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Remove specified filter\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nfield of filter to remove\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeGroup(colId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Remove specified group\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        colId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \ncolID of group to remove\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeSort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeSort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Remove sorting \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Reset all sorts/filters/groups. Reference is passed by grid.component.ts \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            grid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        grid:     AgGridNg2\n\n                    \n                \n                    \n                        \n                            Type :     AgGridNg2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gridColumnApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridColumnApi:     ColumnApi\n\n                    \n                \n                    \n                        \n                            Type :     ColumnApi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridFilters:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridGroups\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridGroups:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridState:     GridState\n\n                    \n                \n                    \n                        \n                            Type :     GridState\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        params:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetting:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Disable updates while resetting \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ColumnApi } from 'ag-grid-community';\nimport { AgGridNg2 } from 'ag-grid-angular';\n\n@Component({\n  selector: 'app-grid-status-bar',\n  templateUrl: './grid-status-bar.component.html',\n  styleUrls: ['./grid-status-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GridStatusBarComponent implements OnInit {\n  public gridState: GridState = {};\n  public gridFilters: any[] = [];\n  public gridGroups: any[] = [];\n\n  private grid: AgGridNg2;\n  private gridColumnApi: ColumnApi;\n  private params: any;\n  /** Disable updates while resetting */\n  private resetting = false;\n\n  constructor(private ref: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this.grid = this.params;\n    this.gridColumnApi = this.params.columnApi;\n  }\n\n  /**\n   * When the grid state is changed. This is passed from the parent component\n   * @param gridState\n   */\n  public gridStateChange(gridState: GridState) {\n    // Don't update if resetting\n    if (!this.resetting) {\n      this.gridState = gridState;\n\n      // Get the dictionary of filters and turn into array\n      this.gridFilters = [];\n      for (let key in this.gridState.filters) {\n        this.gridFilters.push({\n          ...this.gridState.filters[key],\n          field: key,\n        });\n      }\n\n      // Get the active groups\n      if (this.gridState && this.gridState.columns) {\n        this.gridGroups = this.gridState.columns.filter((column: any) => column.rowGroupIndex !== null);\n      }\n\n      this.ref.detectChanges();\n    }\n  }\n\n  /**\n   * Attach AG grid parameters\n   * @param params\n   */\n  public agInit(params: any): void {\n    this.params = params;\n  }\n\n  /** Reset all sorts/filters/groups. Reference is passed by grid.component.ts */\n  public reset() {}\n\n  /** Remove sorting */\n  public removeSort() {\n    this.grid.api.setSortModel(null);\n  }\n\n  /**\n   * Remove specified group\n   * @param colId - colID of group to remove\n   */\n  public removeGroup(colId: string) {\n    // Loop through columns and set rowGroupIndex to null for the matched group\n    this.gridState.columns.forEach(col => {\n      if (col.colId === colId) {\n        col.rowGroupIndex = null;\n      }\n    });\n    // Update Api\n    this.gridColumnApi.setColumnState(this.gridState.columns);\n  }\n\n  /**\n   * Remove specified filter\n   * @param field - field of filter to remove\n   */\n  public removeFilter(field: string) {\n    delete this.gridState.filters[field];\n    this.grid.api.setFilterModel(this.gridState.filters);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    Clear All\n    \n  \n\n  \n  \n    Sorted By:\n    \n      {{gridState.sorts[0].colId  | textCase }}, {{gridState.sorts[0].sort | textCase }}\n      \n    \n  \n\n  \n  \n    \n      Grouped By:\n      \n        {{group.colId | textCase }}\n        \n      \n    \n  \n\n  \n  \n    \n      Filtered By:\n      \n        {{filter.field | textCase }} {{filter.type }} \"{{filter.filter }}\" \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Clear All              Sorted By:          {{gridState.sorts[0].colId  | textCase }}, {{gridState.sorts[0].sort | textCase }}                          Grouped By:              {{group.colId | textCase }}                                  Filtered By:              {{filter.field | textCase }} {{filter.type }} \"{{filter.filter }}\"                     '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridStatusBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/GridTemplateRendererComponent.html': {
      url: 'components/GridTemplateRendererComponent.html',
      title: 'component - GridTemplateRendererComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  GridTemplateRendererComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libs/grid/grid-template-renderer/grid-template-renderer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                ICellRendererAngularComp\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-template-renderer\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                template\n                            \n                            \n                                templateContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                refresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            agInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nagInit(params: ICellRendererParams)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-template-renderer/grid-template-renderer.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    ICellRendererParams\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefresh(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/grid-template-renderer/grid-template-renderer.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-template-renderer/grid-template-renderer.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateContext\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templateContext:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/libs/grid/grid-template-renderer/grid-template-renderer.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, TemplateRef } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams } from 'ag-grid-community';\n\n// https://blog.angularindepth.com/easier-embedding-of-angular-ui-in-ag-grid-52db93b73884\n@Component({\n  selector: 'app-template-renderer',\n  template: `\n    \n  `,\n})\nexport class GridTemplateRendererComponent implements ICellRendererAngularComp {\n  template: TemplateRef;\n  templateContext: { $implicit: any; params: any };\n\n  refresh(params: any): boolean {\n    if (params.data) {\n      this.templateContext = {\n        $implicit: params.data,\n        params: params,\n      };\n      return true;\n    }\n    return false;\n  }\n\n  agInit(params: ICellRendererParams): void {\n    this.template = (params)['ngTemplate'];\n    //this.template = () => 'test'\n    this.refresh(params);\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridTemplateRendererComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/HeaderComponent.html': {
      url: 'components/HeaderComponent.html',
      title: 'component - HeaderComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/masterpage/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/masterpage/header/header.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/masterpage/header/header.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/masterpage/header/header.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n})\nexport class HeaderComponent implements OnInit {\n  public isOpen = false;\n\n  constructor(private router: Router) {}\n\n  public ngOnInit() {\n    // On route change, close nav window\n    this.router.events.subscribe(() => {\n      this.isOpen = false;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Angular Starter\n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Angular Starter                  '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/HomeComponent.html': {
      url: 'components/HomeComponent.html',
      title: 'component - HomeComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                formMain\n                            \n                            \n                                    Public\n                                gridFilterTerm\n                            \n                            \n                                    Public\n                                gridOptions\n                            \n                            \n                                    Public\n                                gridRowsSelected\n                            \n                            \n                                    Public\n                                gridState\n                            \n                            \n                                    Public\n                                isEditing\n                            \n                            \n                                    Public\n                                sidebarOpen\n                            \n                            \n                                    Public\n                                sidebarOpen$\n                            \n                            \n                                    Public\n                                ui\n                            \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contextAction\n                            \n                            \n                                    Public\n                                doCoolStuff\n                            \n                            \n                                    Public\n                                gridContextMenu\n                            \n                            \n                                    Public\n                                gridStateSave\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                rowsSelected\n                            \n                            \n                                    Public\n                                sidebarToggle\n                            \n                            \n                                    Public\n                                userDelete\n                            \n                            \n                                    Public\n                                userEdit\n                            \n                            \n                                    Public\n                                usersRefresh\n                            \n                            \n                                    Public\n                                userStopEdit\n                            \n                            \n                                    Public\n                                userSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, ui: UIStoreService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/home/home.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ui\n                                                  \n                                                        \n                                                                    UIStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            contextAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        contextAction(value: string, row: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            An action to perform on a context menu click\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        row\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doCoolStuff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCoolStuff(test: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        test\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridContextMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gridContextMenu(params: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Create the context menu\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        params\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridStateSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gridStateSave(gridState: GridState)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Save the grid state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridState\n                                                        \n                                                                    GridState\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:174\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rowsSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        rowsSelected(rows: Models.User[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:115\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rows\n                                                        \n                                                                    Models.User[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sidebarToggle(toggle: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Toggle the sidebar \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toggle\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:168\n                            \n                        \n\n\n                \n                    \n                            Delete user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userEdit(user: Models.User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:159\n                            \n                        \n\n\n                \n                    \n                            Load user into editing pane\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    Models.User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usersRefresh\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usersRefresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Refresh users\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userStopEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userStopEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:150\n                            \n                        \n\n\n                \n                    \n                            Stop editing to create a new user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Create/update user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     \n\n                    \n                \n                    \n                        \n                            Default value : columns\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formMain:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridFilterTerm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridFilterTerm:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridRowsSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridRowsSelected:     Models.User[]\n\n                    \n                \n                    \n                        \n                            Type :     Models.User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridState:     GridState\n\n                    \n                \n                    \n                        \n                            Type :     GridState\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEditing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isEditing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarOpen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarOpen$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.ui.select.sidebarOpen$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ui\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ui:     UIStoreService\n\n                    \n                \n                    \n                        \n                            Type :     UIStoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.api.select.users$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/home/home.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MenuItemDef } from 'ag-grid-community';\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\n\nimport { ApiService } from '$api';\nimport { UIStoreService } from '$ui';\nimport { Models } from '$models';\nimport { columns } from './columns';\n\n@AutoUnsubscribe()\n@Component({\n  selector: 'app-home',\n  styleUrls: ['./home.component.scss'],\n  templateUrl: './home.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  public columns = columns;\n  public gridState: GridState = {};\n  public gridOptions = {};\n  public gridFilterTerm = '';\n  public gridRowsSelected: Models.User[];\n\n  //@ViewChild('phone') cellTemplatePhone: TemplateRef;\n  //@ViewChild('delete') cellTemplateDelete: TemplateRef;\n\n  public users$ = this.api.select.users$;\n  public sidebarOpen$ = this.ui.select.sidebarOpen$;\n  public formMain: FormGroup;\n  public isEditing: boolean;\n  public sidebarOpen = false;\n\n  constructor(private api: ApiService, public ui: UIStoreService, private fb: FormBuilder) {}\n\n  public ngOnInit() {\n    // Get users and load into store\n    this.api.users.get().subscribe();\n\n    // Rehydrate grid from UI state\n    this.ui.select.gridState$.subscribe(gridState => {\n      // Make sure this isn't the multiscreen originator and that the new state passed down doesn't match the current state\n      if (!this.ui.screen && gridState !== this.gridState) {\n        this.gridState = gridState;\n      }\n    });\n\n    // Formgroup\n    this.formMain = this.fb.group({\n      address: ['', []],\n      company: ['', []],\n      email: ['', []],\n      id: ['', []],\n      name: ['', [Validators.required]],\n      phone: ['', []],\n      username: ['', [Validators.required]],\n      website: ['', []],\n    });\n  }\n\n  public doCoolStuff(test: any) {\n    console.log(test);\n  }\n\n  /**\n   * Create the context menu\n   * @param params\n   */\n  public gridContextMenu(params: any) {\n    // console.log(params.value, params.node.data) // Cell value and row object\n    return [\n      'copy',\n      'copyWithHeaders',\n      'paste',\n      'separator',\n      {\n        name: 'Tags',\n        icon: '',\n        subMenu: [\n          {\n            name: 'Red',\n            icon: '',\n            action: function() {\n              params.context.this.contextAction(params.value, params.node.data);\n            },\n          },\n          {\n            name: 'Green',\n            icon: '',\n            action: function() {\n              params.context.this.contextAction(params.value, params.node.data);\n            },\n          },\n        ],\n      },\n      'separator',\n      'export',\n    ];\n  }\n\n  /**\n   * An action to perform on a context menu click\n   * @param params\n   */\n  public contextAction(value: string, row: any) {\n    console.log(value, row);\n  }\n\n  /** Save the grid state */\n  public gridStateSave(gridState: GridState) {\n    this.gridState = gridState;\n    this.ui.gridStateChange(gridState);\n  }\n\n  public rowsSelected(rows: Models.User[]) {\n    console.log(rows);\n  }\n\n  /**\n   * Create/update user\n   */\n  public userSubmit() {\n    // If editing, use put\n    if (this.isEditing) {\n      this.api.users.put(this.formMain.value).subscribe(() => {\n        this.formMain.reset(); // Reset form after completion\n        this.isEditing = false;\n      });\n    } else {\n      // If creating, use post\n      this.api.users.post(this.formMain.value).subscribe(() => this.formMain.reset());\n    }\n  }\n\n  /**\n   * Refresh users\n   */\n  public usersRefresh() {\n    this.api.users.get(true).subscribe();\n  }\n\n  /** Toggle the sidebar */\n  public sidebarToggle(toggle: boolean) {\n    this.ui.sidebarToggle(!toggle);\n  }\n\n  /**\n   * Stop editing to create a new user\n   */\n  public userStopEdit() {\n    this.formMain.reset();\n    this.isEditing = false;\n  }\n\n  /**\n   * Load user into editing pane\n   * @param user\n   */\n  public userEdit(user: Models.User) {\n    this.formMain.patchValue(user);\n    this.isEditing = true;\n  }\n\n  /**\n   * Delete user\n   * @param user\n   */\n  public userDelete() {\n    const user = this.gridRowsSelected[0];\n    this.api.users.delete(user).subscribe();\n  }\n\n  // Must be present even if not used for unsubs\n  ngOnDestroy() {}\n}\n\n    \n\n    \n        \n\n  \n    \n\n      \n\n        \n\n        \n          \n        \n\n        \n          \n          Toggle User Sidebar\n        \n      \n\n      \n        \n      \n    \n      \n      \n        \n          \n          \n        \n      \n\n    \n  \n\n  \n\n    No users found\n\n    \n      \n\n          \n          \n\n          \n          \n            {{ row?.phone | phoneNumber }}\n          \n\n          \n          \n            \n               Delete\n            \n          \n\n      \n      \n         Add New User\n          Add User\n         Updating User\n        \n\n        \n\n          \n            \n            \n              This field is required\n            \n          \n\n          \n            \n          \n\n          \n            \n          \n\n          \n            \n          \n\n          \n            \n          \n\n          \n            \n               Add User\n            \n            \n               Update User\n            \n          \n\n        \n\n      \n    \n\n  \n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Toggle User Sidebar                                                                                                        No users found                                                              {{ row?.phone | phoneNumber }}                                                         Delete                                           Add New User          Add User         Updating User                                                                This field is required                                                                                                                                                                                           Add User                                       Update User                                          '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/HomeComponent-1.html': {
      url: 'components/HomeComponent-1.html',
      title: 'component - HomeComponent-1',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/monolith/routes/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                columns\n                            \n                            \n                                    Public\n                                filterGlobal\n                            \n                            \n                                    Public\n                                formMain\n                            \n                            \n                                    Public\n                                isEditing\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                rowsSelected\n                            \n                            \n                                    Public\n                                sidebarOpen\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                    Public\n                                ui\n                            \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                contextMenu\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onfilterGlobal\n                            \n                            \n                                    Public\n                                onRowsSelected\n                            \n                            \n                                    Public\n                                onRowUpdated\n                            \n                            \n                                    Public\n                                onStateChange\n                            \n                            \n                                    Public\n                                userDelete\n                            \n                            \n                                    Public\n                                userEdit\n                            \n                            \n                                    Public\n                                usersRefresh\n                            \n                            \n                                    Public\n                                userStopEdit\n                            \n                            \n                                    Public\n                                userSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: MonolithApiService, ui: UIStoreService, fb: FormBuilder, contextSvc: ContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/monolith/routes/home/home.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    MonolithApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ui\n                                                  \n                                                        \n                                                                    UIStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contextSvc\n                                                  \n                                                        \n                                                                    ContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            contextMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        contextMenu($event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Open a context menu on right click\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        $event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:162\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onfilterGlobal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onfilterGlobal(searchTerm: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Update the global filter term\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        searchTerm\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onRowsSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onRowsSelected(users: Models.User[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:121\n                            \n                        \n\n\n                \n                    \n                            When rows have been selected\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                        \n                                                                    Models.User[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onRowUpdated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onRowUpdated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            When a row has been edited\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onStateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onStateChange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            When the state has been changed (grouping/filtering/sorting/etc)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userDelete(user: Models.User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:105\n                            \n                        \n\n\n                \n                    \n                            Delete user\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    Models.User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userEdit(user: Models.User)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Load user into editing pane\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    Models.User\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usersRefresh\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        usersRefresh()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Refresh users\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userStopEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userStopEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:87\n                            \n                        \n\n\n                \n                    \n                            Stop editing to create a new user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Create/update user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : columns\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterGlobal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterGlobal:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    term: '',\n    props: ['name', 'website'],\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formMain:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEditing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isEditing:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    scrollbarH: true,\n    selectionType: 'single',\n    fullScreen: true,\n    controlsDropdown: true,\n    showInfo: true,\n    primaryKey: 'id',\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rowsSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rowsSelected:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subs:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:43\n                            \n                        \n\n                \n                    \n                        Hold subs for unsub \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ui\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ui:     UIStoreService\n\n                    \n                \n                    \n                        \n                            Type :     UIStoreService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.api.select.users$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/home.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { ContextService, ContextMenuList } from '$libs';\n\nimport { MonolithApiService } from '../../shared/stores/api/api.store.service';\nimport { UIStoreService } from '$ui';\nimport { Models } from '$models';\nimport { DesktopUtils } from '$utils';\nimport { columns } from './columns';\n\n@Component({\n  selector: 'app-home',\n  styleUrls: ['./home.component.scss'],\n  templateUrl: './home.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  public users$ = this.api.select.users$;\n  public formMain: FormGroup;\n  public isEditing: boolean;\n  public sidebarOpen = false;\n  public rowsSelected: any[] = [];\n\n  public filterGlobal: any = {\n    term: '',\n    props: ['name', 'website'],\n  };\n\n  // Inputs\n  public options: any = {\n    scrollbarH: true,\n    selectionType: 'single',\n    fullScreen: true,\n    controlsDropdown: true,\n    showInfo: true,\n    primaryKey: 'id',\n  };\n\n  public columns: any[] = columns;\n\n  /** Hold subs for unsub */\n  private subs: Subscription[] = [];\n\n  constructor(\n    private api: MonolithApiService,\n    public ui: UIStoreService,\n    private fb: FormBuilder,\n    private contextSvc: ContextService,\n  ) {}\n\n  public ngOnInit() {\n    // Get users and load into store\n    this.api.users.get().subscribe();\n\n    // Formgroup\n    this.formMain = this.fb.group({\n      address: ['', []],\n      company: ['', []],\n      email: ['', []],\n      id: ['', []],\n      name: ['', [Validators.required]],\n      phone: ['', []],\n      username: ['', [Validators.required]],\n      website: ['', []],\n    });\n  }\n\n  /**\n   * Refresh users\n   */\n  public usersRefresh() {\n    this.api.users.get(true).subscribe();\n  }\n\n  /**\n   * Update the global filter term\n   * @param searchTerm\n   */\n  public onfilterGlobal(searchTerm: string = null) {\n    this.filterGlobal = { ...this.filterGlobal, term: searchTerm };\n  }\n\n  /**\n   * Stop editing to create a new user\n   */\n  public userStopEdit() {\n    this.formMain.reset();\n    this.isEditing = false;\n  }\n\n  /**\n   * Load user into editing pane\n   * @param user\n   */\n  public userEdit(user: Models.User) {\n    this.formMain.patchValue(user);\n    this.isEditing = true;\n  }\n\n  /**\n   * Delete user\n   * @param user\n   */\n  public userDelete(user: Models.User) {\n    this.api.users.delete(user).subscribe();\n  }\n\n  /**\n   * When the state has been changed (grouping/filtering/sorting/etc)\n   * @param event\n   */\n  public onStateChange(/** state: Datagrid.State */) {\n    // console.log('onStateChange', JSON.stringify(state));\n  }\n\n  /**\n   * When rows have been selected\n   * @param event\n   */\n  public onRowsSelected(users: Models.User[]) {\n    if (users && users[0]) {\n      this.rowsSelected = users;\n      this.formMain.patchValue(users[0]);\n      this.isEditing = true;\n      DesktopUtils.copyToClipboard(users[0].phone); // Copy phone number to clipboard\n    }\n  }\n\n  /**\n   * When a row has been edited\n   * @param event\n   */\n  public onRowUpdated(/** users: Models.User[] */) {\n    // console.log('onRowUpdated', users);\n  }\n\n  /**\n   * Open a context menu on right click\n   * @param $event\n   */\n  public contextMenu($event: MouseEvent) {\n    this.contextSvc.open(ContextMenuList.home, $event, this.rowsSelected); // , this.rowsSelected\n  }\n\n  /**\n   * Create/update user\n   */\n  public userSubmit() {\n    // If editing, use put\n    if (this.isEditing) {\n      this.api.users.put(this.formMain.value).subscribe(() => {\n        this.formMain.reset(); // Reset form after completion\n        this.isEditing = false;\n      });\n    } else {\n      // If creating, use post\n      this.api.users.post(this.formMain.value).subscribe(() => this.formMain.reset());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subs.length) {\n      this.subs.forEach(sub => sub.unsubscribe());\n    } // Unsub\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n\n      \n        \n          \n        \n\n        \n          \n          Toggle User Sidebar\n        \n      \n\n      \n        \n      \n\n      \n      \n        \n          \n          \n        \n      \n    \n  \n\n  \n\n    No users found\n\n    \n      \n        \n\n          Update to AG-Grid coming soon\n\n          \n\n          \n           \n            \n               Phone Number\n            \n          \n            \n              {{ value | phoneNumber }}\n            \n          \n\n          \n            \n              \n                 Delete\n              \n            \n          \n\n          \n          -->\n\n        \n      \n      \n         Add New User\n          Add User\n         Updating User\n        \n\n        \n\n          \n            Username*\n            \n              \n            \n          \n\n          \n            Name*\n            \n              \n            \n          \n\n          \n            Website\n            \n              \n            \n          \n\n          \n            Email\n            \n              \n            \n          \n\n          \n            Phone\n            \n              \n            \n          \n\n          \n            \n               Add User\n            \n            \n               Update User\n            \n          \n\n        \n\n      \n    \n\n  \n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  Toggle User Sidebar                                                                                                    No users found                            Update to AG-Grid coming soon                                                          Phone Number                                                {{ value | phoneNumber }}                                                                           Delete                                                        -->                             Add New User          Add User         Updating User                                      Username*                                                                      Name*                                                                      Website                                                                      Email                                                                      Phone                                                                                     Add User                                       Update User                                          '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/HomeContextMenuComponent.html': {
      url: 'components/HomeContextMenuComponent.html',
      title: 'component - HomeContextMenuComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  HomeContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/monolith/routes/home/context-menu/context-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-context-menu\n            \n\n            \n                styleUrls\n                context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./context-menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doCoolStuff\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menu: ContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/monolith/routes/home/context-menu/context-menu.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menu\n                                                  \n                                                        \n                                                                    ContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            doCoolStuff\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        doCoolStuff()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/context-menu/context-menu.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/context-menu/context-menu.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        contextMenu:     ContextMenuComponent\n\n                    \n                \n                    \n                        \n                            Type :     ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/routes/home/context-menu/context-menu.component.ts:13\n                            \n                        \n\n                \n                    \n                        Reference to current top level context menu \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\nimport { ContextService, ContextMenuList } from '$libs';\n\n@Component({\n  selector: 'app-context-menu',\n  templateUrl: './context-menu.component.html',\n  styleUrls: ['./context-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeContextMenuComponent implements OnInit {\n  /** Reference to current top level context menu */\n  @ViewChild('contextMenu') contextMenu: ContextMenuComponent;\n\n  constructor(private menu: ContextService) {}\n\n  ngOnInit() {\n    this.menu.register(ContextMenuList.home, this.contextMenu);\n  }\n\n  public doCoolStuff() {\n    console.log('Doing cool stuff');\n  }\n}\n\n    \n\n    \n        \n\n  \n     Dial {{ item[0].name }}\n  \n  \n\n  \n     Email {{ item[0].name }}\n  \n  \n     SMS {{ item[0].name }}\n  \n  \n\n  \n     Tags\n  \n\n  \n  \n    \n       Urgent\n    \n    \n        Followup\n    \n    \n       To Do Later\n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       Dial {{ item[0].name }}           Email {{ item[0].name }}         SMS {{ item[0].name }}           Tags                 Urgent                Followup               To Do Later      '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/HomeModule.html': {
      url: 'modules/HomeModule.html',
      title: 'module - HomeModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nGridModule\n\nGridModule\n\nHomeModule -->\n\nGridModule->HomeModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nHomeModule -->\n\nSiteModule->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    GridModule\n                            \n                            \n                                    SiteModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SiteModule } from '$site'; // Site modules\nimport { GridModule } from '$libs'; // Lazy loaded datagrid DatagridModule,\n\n// Home component and routing\nimport { routing } from './home.routes';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [CommonModule, SiteModule, routing, GridModule],\n  declarations: [HomeComponent],\n  providers: [],\n  exports: [],\n  entryComponents: [],\n})\nexport class HomeModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: HomeModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interceptors/HttpInterceptorService.html': {
      url: 'interceptors/HttpInterceptorService.html',
      title: 'interceptor - HttpInterceptorService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interceptors/http.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/interceptors/http.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            Append bearer token to auth settings\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/interceptors/http.interceptor.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AppSettings } from '../app.settings';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n  /**\n   * Append bearer token to auth settings\n   * @param settings\n   */\n  constructor(private settings: AppSettings) {}\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + this.settings.token),\n    });\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/LaunchModalComponent.html': {
      url: 'components/LaunchModalComponent.html',
      title: 'component - LaunchModalComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  LaunchModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/launch-modal/launch-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Sample Usage:\n\n     Delete\n\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-launch-modal\n            \n\n\n\n            \n                template\n                                \n            \n            \n                \n            \n            \n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modals: ModalsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/launch-modal/launch-modal.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modals\n                                                  \n                                                        \n                                                                    ModalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/launch-modal/launch-modal.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/launch-modal/launch-modal.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/launch-modal/launch-modal.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Open a modal window\nAttach a success function and pass any relevant data to the modal component\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/launch-modal/launch-modal.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ModalsService } from '../modals/modals.service';\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\n\n/** Sample Usage:\n\n         Delete\n\n*/\n@AutoUnsubscribe()\n@Component({\n  selector: 'app-launch-modal',\n  template: `\n                \n            \n            \n                \n            \n            `,\n})\nexport class LaunchModalComponent implements OnInit, OnDestroy {\n  /** Is this a button tag or an a link */\n  @Input() isButton = true; //\n  /** The modal component name to launch */\n  @Input() modal: string;\n  /** Should the modal persist on reload */\n  @Input() persist = false;\n  /** Any model data that needs to be passed to the modal component */\n  @Input() data: any;\n  /** Any model data that needs to be passed to the modal component */\n  @Input() dataAlt: any;\n  /** CSS classes to apply to the button */\n  @Input() classes = ''; //\n  /** Default size of the modal, can be sm/md/lg/xl/full */\n  @Input() size: 'sm' | 'lg' | 'xl' | 'full' = 'lg';\n  /** Is the button or a tag disabled */\n  @Input() disabled = false;\n  /** Add a class to the window object */\n  @Input() windowClass = '';\n\n  @Output() success: EventEmitter = new EventEmitter(); // A method to emit events to pass up to parent\n  @Output() dismiss: EventEmitter = new EventEmitter(); // A method to emit events to pass up to parent\n\n  private sub: Subscription;\n\n  constructor(private modals: ModalsService) {}\n\n  ngOnInit() {}\n\n  /**\n   * Open a modal window\n   * Attach a success function and pass any relevant data to the modal component\n   */\n  public openModal() {\n    const modal = this.modals.open(this.modal, this.persist, this.size, this.data);\n    // If static modal\n    if (modal) {\n      modal.afterClosed().subscribe(reason => {\n        // Only emit success event if data is passed\n        if (reason) {\n          this.success.emit(reason);\n        }\n      });\n    } else {\n      // If observable modal. KNOWN BUG: If the page is refreshed and the app is dependent on an onSuccess method\n      // that method will not be persisted\n      this.sub = this.modals.modalRef$.subscribe(modalElem => {\n        if (modalElem) {\n          modalElem.result.then((reason: any) => this.success.emit(reason), (reason: any) => this.success.emit(reason));\n        }\n      });\n    }\n  } // end openModal\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe(); // Unsub from modal observable\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'LaunchModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/LayoutMainComponent.html': {
      url: 'components/LayoutMainComponent.html',
      title: 'component - LayoutMainComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  LayoutMainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/masterpage/main/layout-main.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-main\n            \n\n\n\n\n            \n                templateUrl\n                ./layout-main.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/masterpage/main/layout-main.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-layout-main',\n  templateUrl: './layout-main.component.html',\n})\nexport class LayoutMainComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutMainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/LayoutSingleComponent.html': {
      url: 'components/LayoutSingleComponent.html',
      title: 'component - LayoutSingleComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  LayoutSingleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/masterpage/single/layout-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-single\n            \n\n\n\n\n            \n                templateUrl\n                ./layout-single.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/masterpage/single/layout-single.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-layout-single',\n  templateUrl: './layout-single.component.html',\n})\nexport class LayoutSingleComponent {\n  constructor() {}\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutSingleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/LoginComponent.html': {
      url: 'components/LoginComponent.html',
      title: 'component - LoginComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorApi\n                            \n                            \n                                    Public\n                                formMain\n                            \n                            \n                                    Public\n                                loggedout\n                            \n                            \n                                    Public\n                                returnUrl\n                            \n                            \n                                    Public\n                                sessionExpired\n                            \n                            \n                                    Public\n                                showErrorDetails\n                            \n                            \n                                    Public\n                                showPassword\n                            \n                            \n                                    Public\n                                subs\n                            \n                            \n                                    Public\n                                waiting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: ActivatedRoute, router: Router, fb: FormBuilder, settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Submit the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorApi:     IErrorApi\n\n                    \n                \n                    \n                        \n                            Type :     IErrorApi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formMain:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedout:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        returnUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessionExpired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sessionExpired:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showErrorDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showErrorDetails:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showPassword:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subs:     Subscription[]\n\n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waiting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        waiting:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { AuthService, AppSettings } from '$shared';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  public formMain: FormGroup;\n  public waiting: boolean;\n  public errorApi: IErrorApi;\n  public showErrorDetails = false;\n  public sessionExpired: boolean;\n  public loggedout: boolean;\n  public showPassword = false;\n  public returnUrl: string;\n\n  public subs: Subscription[] = [];\n\n  constructor(\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private settings: AppSettings,\n  ) {}\n\n  public ngOnInit() {\n    let isLogin, hasLogin;\n    if (isPlatformBrowser && window.localStorage.rememberLogin && this.settings.userName) {\n      isLogin = this.settings.userName;\n    }\n\n    if (isPlatformBrowser && window.localStorage.rememberLogin) {\n      hasLogin = true;\n    }\n\n    this.subs = [\n      this.route.queryParams.subscribe(params => {\n        if (params.session === 'expired') {\n          this.sessionExpired = true;\n        }\n        if (params.session === 'loggedout') {\n          this.loggedout = true;\n        }\n      }),\n    ];\n\n    if (isPlatformBrowser) {\n      window.clearTimeout(this.authService.sessionTimer); // When the page is loaded, clear any legacy timeouts\n    }\n\n    this.authService.logOutModal = null; // Get rid of logout modal if it persists\n\n    this.formMain = this.fb.group({\n      userName: [isLogin || 'juser', [Validators.required]],\n      password: ['password', [Validators.required]],\n      remember: [hasLogin],\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Submit the form\n   */\n  public onLogin() {\n    this.waiting = true;\n    this.errorApi = null;\n    this.showErrorDetails = false;\n\n    // If remember username is set\n    if (this.formMain.value.remember) {\n      this.settings.userName = this.formMain.value.userName;\n      if (isPlatformBrowser) {\n        window.localStorage.rememberLogin = true;\n      }\n    } else {\n      if (isPlatformBrowser) {\n        window.localStorage.removeItem('rememberLogin');\n      }\n    }\n\n    // Authenticate\n    this.authService.logIn(this.formMain.value).subscribe(\n      () => {\n        this.settings.userName = this.formMain.value.userName;\n        this.router.navigate([this.returnUrl]);\n        this.waiting = false;\n      },\n      error => {\n        error.errorMsg = 'Error logging in.';\n        if ((error.statusText = 'Unauthorized')) {\n          error.errorMsg = 'Invalid username or password, please try again.';\n          this.showErrorDetails = false;\n        }\n\n        this.errorApi = error;\n        this.waiting = false;\n      },\n    );\n  } // end onSubmit\n\n  ngOnDestroy() {\n    if (this.subs.length) {\n      this.subs.forEach(sub => sub.unsubscribe());\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n       Sign-In\n      \n\n        \n          \n\n            You have successfully logged out.\n            Unable to log in, please check your username and password\n            Session expired, please log in again.\n            Please enter your username and password.\n            \n              Login\n              \n                \n              \n            \n            \n              Password\n              \n                \n              \n            \n\n            \n              \n                \n                  \n                    \n                    Remember my username\n                  \n                \n              \n            \n\n          \n          \n            \n              \n              Sign In\n            \n          \n        \n\n      \n    \n  \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Sign-In                                    You have successfully logged out.            Unable to log in, please check your username and password            Session expired, please log in again.            Please enter your username and password.                          Login                                                                                  Password                                                                                                                                                            Remember my username                                                                                                                        Sign In                                          '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/LogoutModalComponent.html': {
      url: 'components/LogoutModalComponent.html',
      title: 'component - LogoutModalComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  LogoutModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modals/logout/logout-modal.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./logout-modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                counter\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dataAlt\n                            \n                            \n                                    Public\n                                logoutTimer$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modals/logout/logout-modal.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/modals/logout/logout-modal.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/modals/logout/logout-modal.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            counter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counter:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/logout/logout-modal.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 120\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/logout/logout-modal.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataAlt\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dataAlt:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/logout/logout-modal.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logoutTimer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logoutTimer$:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/logout/logout-modal.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n//import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription, interval } from 'rxjs';\n\n@Component({\n  selector: 'app-logout-modal',\n  templateUrl: './logout-modal.component.html',\n})\nexport class LogoutModalComponent implements OnInit, OnDestroy {\n  public logoutTimer$: Subscription; // Holds the countdown obserable\n  public counter: number; // Log out after this many seconds\n  // public modalDuration: number = 120; // This number is passed in through the modal reference, will default to 120 if not specified\n  public data = 120; // Data is actually passed through the modal service not here\n  public dataAlt: any; // Data is actually passed through the modal service not here\n\n  constructor() {}\n\n  ngOnInit() {\n    this.counter = this.data; // How long to display the modal window\n\n    // Create a timer obserable that counts down\n    this.logoutTimer$ = interval(1000).subscribe(() => {\n      // If timer is greater than 0, count down.\n      if (this.counter > 1) {\n        this.counter--;\n      } else {\n        // If timer hits zero or below, CLOSE this modal which toggles the logout action in AuthService\n        this.logoutTimer$.unsubscribe();\n        //this.activeModal.close();\n      }\n    });\n  }\n\n  public ngOnDestroy() {\n    this.logoutTimer$.unsubscribe(); // Unsub from timer on modal close\n  }\n}\n\n    \n\n    \n        \n   Warning\n  \n    &times;\n  \n\n\n\n  Your session is about to expire in {{ counter }} seconds, do you want to continue working?\n\n\n\n  \n    \n    Log Out\n  \n  \n    Continue Working\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Warning      ×    Your session is about to expire in {{ counter }} seconds, do you want to continue working?          Log Out        Continue Working      '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogoutModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Message.html': {
      url: 'interfaces/Message.html',
      title: 'interface - Message',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/post-message.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        event\n                                \n                                \n                                            Optional\n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { ObjectUtils } from '$utils';\nimport { AppSettings } from '../app.settings';\n\ninterface Message {\n  event?: string;\n  payload?: any;\n}\n\ninterface MessageComplete extends Message {\n  token?: string;\n  appId?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostMessageService {\n  /** Postmessage response */\n  public postMessage$: Subject = new Subject();\n  /** Holds postmessage event listener */\n  private postMessageListener: any;\n  /** An array of domains to accept postmessage responses from, based on window.location.origin */\n  private allowedDomains: string[];\n  /** Generate a random number to identify this app. Used to drop same domain postmessages */\n  private appId = Math.floor(Math.random() * 10000000);\n\n  constructor(private settings: AppSettings) {}\n\n  /**\n   * Activates the post message listener\n   * @param allowedDomains - Allowable domains to whitelist message responses. Based on window.location.origin\n   */\n  public listenForMessages(allowedDomains?: string[]) {\n    // Set allowed domains to receive messages from\n    if (allowedDomains) {\n      this.allowedDomains = allowedDomains;\n    }\n\n    if (this.settings.isBrowser) {\n      // If not IE\n      if (window.addEventListener) {\n        this.postMessageListener = window.addEventListener('message', this.messageReceived.bind(this), false);\n      } else {\n        // If IE\n        this.postMessageListener = (window).attachEvent('onmessage', this.messageReceived.bind(this), false);\n      }\n    }\n\n    return this.postMessage$;\n  }\n\n  /**\n   * Stop listening for postmessage events\n   */\n  public stopListening() {\n    if (this.settings.isBrowser) {\n      window.removeEventListener('message', this.postMessageListener);\n    }\n  }\n\n  /**\n   * Post a message from an embedded iframe to its parent\n   * @param message - The message payload\n   * @param urlTarget - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToParent(message: Message, urlTarget: string = '*') {\n    if (this.settings.isBrowser) {\n      if (window.parent) {\n        window.parent.postMessage(this.addMetadata(message), urlTarget);\n      }\n    }\n  }\n\n  /**\n   * Post a message to an embedded iframe\n   * @param id - a CSS ID of the iframe. IE 'messageTarget' of \n   * @param message - The message payload\n   * @param urlTarget  - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToIframe(id: string, message: Message, urlTarget: string = '*') {\n    if (this.settings.isBrowser) {\n      // Make sure the element is on the DOM\n      if ((document).getElementById(id) && (document).getElementById(id).contentWindow) {\n        (document).getElementById(id).contentWindow.postMessage(this.addMetadata(message), urlTarget);\n      }\n    }\n  }\n\n  /**\n   * Post a message to window object reference\n   * @param reference - A window reference either created by window.open or if existing, window.opened\n   * @param message - The message payload\n   * @param urlTarget  - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToWindow(reference: Window, message: Message, urlTarget: string = '*') {\n    reference.postMessage(this.addMetadata(message), urlTarget);\n  }\n\n  /**\n   * When a message was received via the postMessage event listener\n   * @param event - The event passed from the event listener\n   */\n  private messageReceived(event: MessageEvent) {\n    // Scrub webpackOk events and same appId origination\n    if (event.data && event.data.type !== 'webpackOk' && event.data.appId !== this.appId) {\n      // Sanitize incoming payload\n      const msg: MessageComplete = ObjectUtils.sanitize(event.data);\n      // Check if allowable domains\n      if ((this.allowedDomains && this.allowedDomains.indexOf(event.origin) !== -1) || !this.allowedDomains) {\n        this.postMessage$.next(msg);\n      } else {\n        console.error('Message from unauthorized source');\n      }\n    }\n  }\n\n  /**\n   * Add metadata to the postmessage payload. IE the token and appId\n   * @param msg\n   */\n  private addMetadata(msg: Message): MessageComplete {\n    return {\n      ...ObjectUtils.sanitize(msg),\n      appId: this.appId,\n      token: this.settings.token,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/MessageComplete.html': {
      url: 'interfaces/MessageComplete.html',
      title: 'interface - MessageComplete',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/post-message.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Message\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        appId\n                                \n                                \n                                            Optional\n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { ObjectUtils } from '$utils';\nimport { AppSettings } from '../app.settings';\n\ninterface Message {\n  event?: string;\n  payload?: any;\n}\n\ninterface MessageComplete extends Message {\n  token?: string;\n  appId?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostMessageService {\n  /** Postmessage response */\n  public postMessage$: Subject = new Subject();\n  /** Holds postmessage event listener */\n  private postMessageListener: any;\n  /** An array of domains to accept postmessage responses from, based on window.location.origin */\n  private allowedDomains: string[];\n  /** Generate a random number to identify this app. Used to drop same domain postmessages */\n  private appId = Math.floor(Math.random() * 10000000);\n\n  constructor(private settings: AppSettings) {}\n\n  /**\n   * Activates the post message listener\n   * @param allowedDomains - Allowable domains to whitelist message responses. Based on window.location.origin\n   */\n  public listenForMessages(allowedDomains?: string[]) {\n    // Set allowed domains to receive messages from\n    if (allowedDomains) {\n      this.allowedDomains = allowedDomains;\n    }\n\n    if (this.settings.isBrowser) {\n      // If not IE\n      if (window.addEventListener) {\n        this.postMessageListener = window.addEventListener('message', this.messageReceived.bind(this), false);\n      } else {\n        // If IE\n        this.postMessageListener = (window).attachEvent('onmessage', this.messageReceived.bind(this), false);\n      }\n    }\n\n    return this.postMessage$;\n  }\n\n  /**\n   * Stop listening for postmessage events\n   */\n  public stopListening() {\n    if (this.settings.isBrowser) {\n      window.removeEventListener('message', this.postMessageListener);\n    }\n  }\n\n  /**\n   * Post a message from an embedded iframe to its parent\n   * @param message - The message payload\n   * @param urlTarget - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToParent(message: Message, urlTarget: string = '*') {\n    if (this.settings.isBrowser) {\n      if (window.parent) {\n        window.parent.postMessage(this.addMetadata(message), urlTarget);\n      }\n    }\n  }\n\n  /**\n   * Post a message to an embedded iframe\n   * @param id - a CSS ID of the iframe. IE 'messageTarget' of \n   * @param message - The message payload\n   * @param urlTarget  - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToIframe(id: string, message: Message, urlTarget: string = '*') {\n    if (this.settings.isBrowser) {\n      // Make sure the element is on the DOM\n      if ((document).getElementById(id) && (document).getElementById(id).contentWindow) {\n        (document).getElementById(id).contentWindow.postMessage(this.addMetadata(message), urlTarget);\n      }\n    }\n  }\n\n  /**\n   * Post a message to window object reference\n   * @param reference - A window reference either created by window.open or if existing, window.opened\n   * @param message - The message payload\n   * @param urlTarget  - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToWindow(reference: Window, message: Message, urlTarget: string = '*') {\n    reference.postMessage(this.addMetadata(message), urlTarget);\n  }\n\n  /**\n   * When a message was received via the postMessage event listener\n   * @param event - The event passed from the event listener\n   */\n  private messageReceived(event: MessageEvent) {\n    // Scrub webpackOk events and same appId origination\n    if (event.data && event.data.type !== 'webpackOk' && event.data.appId !== this.appId) {\n      // Sanitize incoming payload\n      const msg: MessageComplete = ObjectUtils.sanitize(event.data);\n      // Check if allowable domains\n      if ((this.allowedDomains && this.allowedDomains.indexOf(event.origin) !== -1) || !this.allowedDomains) {\n        this.postMessage$.next(msg);\n      } else {\n        console.error('Message from unauthorized source');\n      }\n    }\n  }\n\n  /**\n   * Add metadata to the postmessage payload. IE the token and appId\n   * @param msg\n   */\n  private addMetadata(msg: Message): MessageComplete {\n    return {\n      ...ObjectUtils.sanitize(msg),\n      appId: this.appId,\n      token: this.settings.token,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ModalsService.html': {
      url: 'injectables/ModalsService.html',
      title: 'injectable - ModalsService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/modals/modals.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                modalList\n                            \n                            \n                                    Public\n                                modalRef\n                            \n                            \n                                    Public\n                                modalRef$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                onClose\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, settings: AppSettings, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modals/modals.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/modals/modals.service.ts:110\n                            \n                        \n\n\n                \n                    \n                            When the modal window is closed, remove from store\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open(modalId: modals, persist: boolean, size: \"sm\" | \"lg\" | \"xl\" | \"full\", data?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/modals/modals.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Open a modal window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalId\n                                                        \n                                                                    modals\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The class name of the modal window\n\n                                                        \n                                                \n                                                \n                                                        persist\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                Should the modal persist on reload or otherwise have its state managed by the UI store\n\n                                                        \n                                                \n                                                \n                                                        size\n                                                        \n                                                                    \"sm\" | \"lg\" | \"xl\" | \"full\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'lg'\n                                                        \n\n                                                        \n                                                                Modal size\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Primary set of data to pass to the modal\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dialog:     MatDialog\n\n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/modals.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalList:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ConfirmationModalComponent: ConfirmationModalComponent,\n    LogoutModalComponent: LogoutModalComponent,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/modals.service.ts:28\n                            \n                        \n\n                \n                    \n                        List of component references of available modals \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     MatDialogRef\n\n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/modals.service.ts:24\n                            \n                        \n\n                \n                    \n                        Reference to the STATIC currently open modal. This reference is used for static non persistant modals \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalRef$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/modals.service.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the STORE OBSERVABLE currently open modal. This reference is used for modals persisted in the UI store \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfirmationModalComponent, LogoutModalComponent } from '$modals';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { AppSettings, AppStore } from '$shared';\nimport { Store } from '@ngrx/store';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { UIStoreActions } from '$ui';\n\n/** Sample Usage:\nthis.ui.modals.open('ConfirmationModalComponent', false, 'lg', 'Are you sure you want to delete this user?', 'Delete User').result.then(\n\t() => console.log('Modal Closed'),\n\t() => console.log('Modal Dismissed'));\n*/\n\n// List modals here by component name\ntype modals = 'LogoutModalComponent' | 'ConfirmationModalComponent';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalsService {\n  /** Reference to the STATIC currently open modal. This reference is used for static non persistant modals */\n  public modalRef: MatDialogRef;\n  /** Reference to the STORE OBSERVABLE currently open modal. This reference is used for modals persisted in the UI store */\n  public modalRef$: BehaviorSubject = new BehaviorSubject(null);\n  /** List of component references of available modals */\n  public modalList: { [key: string]: any } = {\n    ConfirmationModalComponent: ConfirmationModalComponent,\n    LogoutModalComponent: LogoutModalComponent,\n  };\n\n  constructor(private store: Store, private settings: AppSettings, public dialog: MatDialog) {\n    // Subscribe to the modal in the store and launch store modal if data is found. Also make sure token is present\n    this.store.select(storeElem => storeElem.ui.modal).subscribe((modal: any) => {\n      // Make sure modal exists AND that a token is present in app settings. This prevents a modal from persisting after logout\n      if (modal && Object.keys(modal).length && this.settings.token) {\n        // Store reference to the modal instance\n        let width = '720px';\n\n        switch (modal.size) {\n          case 'sm':\n            width = '480px';\n            break;\n          case 'xl':\n            width = '1024px';\n            break;\n          case 'full':\n            width = '90%';\n            break;\n        }\n        //const modalRef = this.modalService.open(this.modalList[modal.modalId], modal.options);\n        const modalRef = this.dialog.open(this.modalList[modal.modalId], {\n          width: width,\n          data: modal.data || null,\n        });\n\n        this.modalRef$.next(modalRef);\n        this.onClose();\n      }\n    });\n  }\n\n  /**\n   * Open a modal window\n   * @param modalId The class name of the modal window\n   * @param persist Should the modal persist on reload or otherwise have its state managed by the UI store\n   * @param size Modal size\n   * @param data Primary set of data to pass to the modal\n   * @param dataAlt Secondary set of data to pass to the modal\n   */\n  public open(modalId: modals, persist: boolean = false, size: 'sm' | 'lg' | 'xl' | 'full' = 'lg', data?: any) {\n    let width = '720px';\n\n    switch (size) {\n      case 'sm':\n        width = '480px';\n        break;\n      case 'xl':\n        width = '1024px';\n        break;\n      case 'full':\n        width = '90%';\n        break;\n    }\n\n    // If persist is set, load this modal into the store so state is managed by the UI store\n    if (persist) {\n      this.store.dispatch(\n        UIStoreActions.MODAL_OPEN({\n          modalId: modalId,\n          options: { size: size },\n          data: data,\n        }),\n      );\n    } else {\n      // If persist is not set\n      // this.modalRef = this.modalService.open(this.modalList[modalId], { size: size, windowClass: windowClass });\n      this.modalRef = this.dialog.open(this.modalList[modalId], {\n        width: width,\n        data: data,\n      });\n    }\n    return this.modalRef;\n  }\n\n  /**\n   * When the modal window is closed, remove from store\n   */\n  private onClose() {\n    this.modalRef$.subscribe(modal => {\n      // Wait for promise that is returned when modal is closed or dismissed\n      modal.result.then(\n        () => {\n          this.store.dispatch(UIStoreActions.MODAL_UNLOAD(null));\n        },\n        () => {\n          // On modal dismiss, which is closed without performing an action\n          this.store.dispatch(UIStoreActions.MODAL_UNLOAD(null));\n        },\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MonolithApiSelectorsService.html': {
      url: 'injectables/MonolithApiSelectorsService.html',
      title: 'injectable - MonolithApiSelectorsService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonolithApiSelectorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/monolith/shared/stores/api/api.selectors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                users$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/monolith/shared/stores/api/api.selectors.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectors.users)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/shared/stores/api/api.selectors.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store, createSelector } from '@ngrx/store';\n\n// import { Models } from '$models';\nimport { MonolithStore } from '../monolith.store';\n// import { ApiMap } from 'src/app/shared/stores/api';\n// import { Observable, combineLatest } from 'rxjs';\n// import { map } from 'rxjs/operators';\n// const keyBy = require('lodash/keyBy');\n\n// Mapped/source selectors for reuse or transforming data\nconst selectors = {\n  users: createSelector(\n    (state: MonolithStore.Root) => state.api.users,\n    users => {\n      if (users && users.data) {\n        // Modify data before returning to selector\n      }\n      return users;\n    },\n  ),\n};\n\n@Injectable()\nexport class MonolithApiSelectorsService {\n  public users$ = this.store.select(selectors.users); // Memoized selector\n  // public users$ = this.store.select(store => store.api.users);\n\n  constructor(private store: Store) {}\n\n  /**\n   * Returns a single unified API status for one or more API status calls.\n   * Useful for when the app needs multiple http calls and you only want a single status for all\n   * USAGE: this.api.getStatuses([\n      this.api.select.getState$(ApiProps.pod),\n      this.api.select.getState$(ApiProps.productType),\n    ])\n   * @param statuses - A single observable or an array of observables\n  \n  public getStatuses(statuses: Observable[]) {\n    // If this is an array, pass the array, if single load into array for combineLatest\n    const statusesNew = Array.isArray(statuses) ? statuses : [statuses];\n\n    return combineLatest(statusesNew).pipe(\n      map(status => {\n        if (status) {\n          // Set default globals. Used to create final end state\n          let loading = false;\n          let loaded = false;\n          let loadError = false;\n\n          // Loop through all input statuses and rollup individual status to global status\n          status.forEach(statusSingle => {\n            if (statusSingle && statusSingle.loading) {\n              loading = true;\n            }\n            if (statusSingle && statusSingle.loaded) {\n              loaded = true;\n            }\n            if (statusSingle && statusSingle.loadError) {\n              loadError = statusSingle.loadError;\n            }\n          });\n\n          // Figure out which status state to return\n          // If any errors, return an error state\n          if (loadError) {\n            return {\n              loading: false,\n              loaded: false,\n              loadError: loadError,\n            };\n          } else if (loading) {\n            // If no errors but any endpoint is still loading, return loading\n            return {\n              loading: true,\n              loaded: false,\n              loadError: false,\n            };\n          } else if (loaded && !loading && !loadError) {\n            // If all endpoints return loaded and no errors of loading, return loaded\n            return {\n              loading: false,\n              loaded: true,\n              loadError: false,\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }),\n    );\n  }\n   */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MonolithApiService.html': {
      url: 'injectables/MonolithApiService.html',
      title: 'injectable - MonolithApiService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonolithApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/monolith/shared/stores/api/api.store.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fixTS\n                            \n                            \n                                    Public\n                                resetStore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, http: HttpClient, router: Router, props: AppSettings, select: MonolithApiSelectorsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/monolith/shared/stores/api/api.store.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        select\n                                                  \n                                                        \n                                                                    MonolithApiSelectorsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fixTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fixTS()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/shared/stores/api/api.store.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Fix a bug with TS where super calls don't count as usage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetStore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetStore()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/monolith/shared/stores/api/api.store.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Reset the store, clear out all held state and data\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        select:     MonolithApiSelectorsService\n\n                    \n                \n                    \n                        \n                            Type :     MonolithApiSelectorsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/shared/stores/api/api.store.service.ts:31\n                            \n                        \n\n                \n                    \n                        API Store Selectors \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    get: (update?: boolean) => this.getStore(ApiMap.users.endpoint, ApiMap.users, update),\n    post: (user: Models.User) => this.postStore(ApiMap.users.endpoint, ApiMap.users, user),\n    put: (user: Models.User) => this.putStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n    delete: (user: Models.User) => this.deleteStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/monolith/shared/stores/api/api.store.service.ts:18\n                            \n                        \n\n                \n                    \n                        Users endpoint \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n\nimport { AppSettings } from '$shared';\nimport { Models } from '$models';\n\nimport { ApiHttpService } from '$api';\nimport { MonolithApiSelectorsService } from './api.selectors.service';\nimport { ApiStoreActions } from '$api';\nimport { ApiMap } from './api.map';\nimport { MonolithStore } from '../monolith.store';\n\n@Injectable()\nexport class MonolithApiService extends ApiHttpService {\n  /** Users endpoint */\n  public users = {\n    get: (update?: boolean) => this.getStore(ApiMap.users.endpoint, ApiMap.users, update),\n    post: (user: Models.User) => this.postStore(ApiMap.users.endpoint, ApiMap.users, user),\n    put: (user: Models.User) => this.putStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n    delete: (user: Models.User) => this.deleteStore(ApiMap.users.endpoint + '/' + user.id, ApiMap.users, user),\n  };\n\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private router: Router,\n    private props: AppSettings,\n    /** API Store Selectors */\n    public select: MonolithApiSelectorsService,\n  ) {\n    super(http, store, router, props);\n\n    // Output store changes to console\n    // this.store.subscribe(storeApi => console.warn(JSON.parse(JSON.stringify(storeApi))));\n  }\n\n  /**\n   * Reset the store, clear out all held state and data\n   */\n  public resetStore() {\n    this.cacheClear(); // Clear cache\n    this.store.dispatch(ApiStoreActions.RESET(null));\n  }\n\n  /**\n   * Fix a bug with TS where super calls don't count as usage\n   */\n  public fixTS() {\n    console.log(this.http, this.router, this.props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/MonolithModule.html': {
      url: 'modules/MonolithModule.html',
      title: 'module - MonolithModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  MonolithModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MonolithModule\n\n\n\ncluster_MonolithModule_declarations\n\n\n\ncluster_MonolithModule_imports\n\n\n\ncluster_MonolithModule_providers\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nMonolithModule\n\nMonolithModule\n\nMonolithModule -->\n\nHomeComponent->MonolithModule\n\n\n\n\n\nHomeContextMenuComponent\n\nHomeContextMenuComponent\n\nMonolithModule -->\n\nHomeContextMenuComponent->MonolithModule\n\n\n\n\n\nContextModule\n\nContextModule\n\nMonolithModule -->\n\nContextModule->MonolithModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nMonolithModule -->\n\nSiteModule->MonolithModule\n\n\n\n\n\nMonolithApiSelectorsService\n\nMonolithApiSelectorsService\n\nMonolithModule -->\n\nMonolithApiSelectorsService->MonolithModule\n\n\n\n\n\nMonolithApiService\n\nMonolithApiService\n\nMonolithModule -->\n\nMonolithApiService->MonolithModule\n\n\n\n\n\nMonolithService\n\nMonolithService\n\nMonolithModule -->\n\nMonolithService->MonolithModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/monolith/monolith.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                            \n                                HomeContextMenuComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MonolithApiSelectorsService\n                            \n                            \n                                     MonolithApiService\n                            \n                            \n                                     MonolithService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ContextModule\n                            \n                            \n                                    SiteModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\n\nimport { SiteModule } from '$site'; // Site modules\nimport { ContextModule } from '$libs'; // Lazy loaded datagrid\n\n// Store Reducer\nimport { UIReducer } from '$ui';\nimport { ApiReducer } from '$api';\n\n// Home component and routing\nimport { routing } from './monolith.routes';\nimport { HomeComponent } from './routes/home/home.component';\nimport { HomeContextMenuComponent } from './routes/home/context-menu/context-menu.component';\n\nimport { MonolithApiService } from './shared/stores/api/api.store.service';\nimport { MonolithApiSelectorsService } from './shared/stores/api/api.selectors.service';\n\nimport { MonolithService } from './servies/monolith.service';\n\n@NgModule({\n  imports: [CommonModule, SiteModule, routing, ContextModule, StoreModule.forRoot({ api: ApiReducer, ui: UIReducer })],\n  declarations: [HomeComponent, HomeContextMenuComponent],\n  providers: [MonolithApiService, MonolithApiSelectorsService, MonolithService],\n  exports: [],\n  entryComponents: [],\n})\nexport class MonolithModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MonolithModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/MonolithService.html': {
      url: 'injectables/MonolithService.html',
      title: 'injectable - MonolithService',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MonolithService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/monolith/servies/monolith.service.ts\n        \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/monolith/servies/monolith.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from \'@angular/core\';\n\n@Injectable()\nexport class MonolithService {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'components/NavComponent.html': {
      url: 'components/NavComponent.html',
      title: 'component - NavComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/masterpage/nav/nav.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasSW\n                            \n                            \n                                    Public\n                                hasUpdate$\n                            \n                            \n                                    Public\n                                isOpen\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                updateApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, sw: ServiceWorkerService, settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/masterpage/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sw\n                                                  \n                                                        \n                                                                    ServiceWorkerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/nav.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateApp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateApp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/nav.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasSW\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasSW:     \n\n                    \n                \n                    \n                        \n                            Default value : environment.settings.enableServiceWorker\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/nav.component.ts:18\n                            \n                        \n\n                \n                    \n                        Is the service worker enabled \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasUpdate$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasUpdate$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.sw.updateAvailable$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/nav.component.ts:20\n                            \n                        \n\n                \n                    \n                        Does the app have an update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOpen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isOpen:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/nav.component.ts:14\n                            \n                        \n\n                \n                    \n                        Is the dropdown menu open on mobile \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     \n\n                    \n                \n                    \n                        \n                            Default value : startCase(toLower(this.settings.userName))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/nav.component.ts:16\n                            \n                        \n\n                \n                    \n                        Turn the username into title case \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService, ServiceWorkerService, AppSettings } from '$shared';\nimport { environment } from '$env';\n\nconst startCase = require('lodash/startCase');\nconst toLower = require('lodash/toLower');\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n})\nexport class NavComponent {\n  /** Is the dropdown menu open on mobile */\n  public isOpen = false;\n  /** Turn the username into title case */\n  public userName = startCase(toLower(this.settings.userName));\n  /**  Is the service worker enabled */\n  public hasSW = environment.settings.enableServiceWorker;\n  /**   Does the app have an update */\n  public hasUpdate$ = this.sw.updateAvailable$;\n\n  constructor(private auth: AuthService, private sw: ServiceWorkerService, private settings: AppSettings) {}\n\n  public updateApp() {\n    this.sw.openModal();\n  }\n\n  public logOut() {\n    this.auth.logOut(true);\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n\n    \n      \n        \n           Dashboard\n        \n      \n      \n        \n           Monolith\n        \n      \n\n    \n    \n      \n      \n        \n           Update Available\n        \n      \n\n      \n        \n        {{ userName }}\n      \n      \n        \n           Sign Out\n        \n      \n\n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                 Dashboard                                       Monolith                                                     Update Available                                    {{ userName }}                               Sign Out                      '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/NavSearchComponent.html': {
      url: 'components/NavSearchComponent.html',
      title: 'component - NavSearchComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  NavSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/masterpage/nav/search/nav-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-search\n            \n\n\n\n\n            \n                templateUrl\n                ./nav-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/masterpage/nav/search/nav-search.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/search/nav-search.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            submit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        submit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/search/nav-search.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/masterpage/nav/search/nav-search.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-search',\n  templateUrl: './nav-search.component.html',\n})\nexport class NavSearchComponent implements OnInit {\n  public search: any = {};\n\n  constructor(private router: Router) {}\n\n  public ngOnInit() {\n    this.search.type = '';\n  }\n\n  public submit(): void {\n    console.warn(this.search);\n    this.router.navigate(['./search']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Search By:\n        Loan Number\n        First Name\n        Last Name\n        Email\n        SSN\n      \n      \n      \n        \n          \n          Search\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search By:        Loan Number        First Name        Last Name        Email        SSN                                              Search                    '\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/NoContentComponent.html': {
      url: 'components/NoContentComponent.html',
      title: 'component - NoContentComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  NoContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/no-content/no-content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-content\n            \n\n\n\n            \n                template\n                \n    404: page missing\n    Click here to go to the homepage.\n\n\n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-no-content',\n  template: `\n    \n        404: page missing\n        Click here to go to the homepage.\n    \n  `,\n})\nexport class NoContentComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    404: page missing    Click here to go to the homepage.'\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/ObjectUtils.html': {
      url: 'classes/ObjectUtils.html',
      title: 'class - ObjectUtils',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ObjectUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/object-utils.ts\n        \n\n            \n                Description\n            \n            \n                A collection of json/javascript helper utilities\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                cleanup\n                            \n                            \n                                    Static\n                                sanitize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            cleanup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cleanup(obj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/object-utils.ts:21\n                            \n                        \n\n\n                \n                    \n                            Parses JSON to remove nulls, undefined, NaN, empty String, empty array and empty object\nhttps://stackoverflow.com/questions/18515254/recursively-remove-null-values-from-javascript-object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nAny object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sanitize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sanitize(obj: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/object-utils.ts:48\n                            \n                        \n\n\n                \n                    \n                            Sanitize a JS object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nAny object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        const forOwn = require('lodash/forOwn');\nconst isUndefined = require('lodash/isUndefined');\nconst isNull = require('lodash/isNull');\nconst isNaN = require('lodash/isNaN');\nconst isString = require('lodash/isString');\nconst isEmpty = require('lodash/isEmpty');\nconst isObject = require('lodash/isObject');\nconst isArray = require('lodash/isArray');\nconst pull = require('lodash/pull');\nconst cloneDeep = require('lodash/cloneDeep');\n\n/**\n * A collection of json/javascript helper utilities\n */\nexport class ObjectUtils {\n  /**\n   * Parses JSON to remove nulls, undefined, NaN, empty String, empty array and empty object\n   * https://stackoverflow.com/questions/18515254/recursively-remove-null-values-from-javascript-object\n   * @param obj - Any object\n   */\n  static cleanup(obj: any) {\n    return (function prune(current) {\n      forOwn(current, function(value: any, key: any) {\n        if (\n          isUndefined(value) ||\n          isNull(value) ||\n          isNaN(value) ||\n          (isString(value) && isEmpty(value)) ||\n          (isObject(value) && isEmpty(prune(value)))\n        ) {\n          delete current[key];\n        }\n      });\n      // remove any leftover undefined values from the delete\n      // operation on an array\n      if (isArray(current)) {\n        pull(current, undefined);\n      }\n\n      return current;\n    })(cloneDeep(obj)); // Do not modify the original object, create a clone instead\n  }\n\n  /**\n   * Sanitize a JS object\n   * @param obj - Any object\n   */\n  static sanitize(obj: Object) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/PhoneNumberPipe.html': {
      url: 'pipes/PhoneNumberPipe.html',
      title: 'pipe - PhoneNumberPipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PhoneNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/phone-number.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        phoneNumber\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(val: string, makeClickable: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/phone-number.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        makeClickable\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n// Usage: {{ value | phoneNumber: true }}\n@Pipe({\n  name: 'phoneNumber',\n})\nexport class PhoneNumberPipe implements PipeTransform {\n  transform(val: string, makeClickable = false) {\n    // If no value supplied or val is a blank value, return same value\n    if (!val || val === '') {\n      return val;\n    }\n\n    let viewVal = val.trim().replace(/^\\+/, '');\n    viewVal = viewVal.replace(/[^0-9]/g, '').slice(0, 10);\n\n    // If this is a clickable link, return the phone number with no spaces or special characters\n    if (makeClickable) {\n      return viewVal;\n    }\n\n    let area, number;\n\n    switch (viewVal.length) {\n      case 1:\n      case 2:\n      case 3:\n        area = viewVal;\n        break;\n\n      default:\n        area = viewVal.slice(0, 3);\n        number = viewVal.slice(3);\n    }\n\n    if (number) {\n      if (number.length > 3) {\n        number = number.slice(0, 3) + '-' + number.slice(3, 7);\n      } else {\n        number = number;\n      }\n      return ('(' + area + ') ' + number).trim().slice(0, 14);\n    } else {\n      return '(' + area;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PostMessageService.html': {
      url: 'injectables/PostMessageService.html',
      title: 'injectable - PostMessageService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/post-message.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allowedDomains\n                            \n                            \n                                    Private\n                                appId\n                            \n                            \n                                    Public\n                                postMessage$\n                            \n                            \n                                    Private\n                                postMessageListener\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addMetadata\n                            \n                            \n                                    Public\n                                listenForMessages\n                            \n                            \n                                    Private\n                                messageReceived\n                            \n                            \n                                    Public\n                                postMessageToIframe\n                            \n                            \n                                    Public\n                                postMessageToParent\n                            \n                            \n                                    Public\n                                postMessageToWindow\n                            \n                            \n                                    Public\n                                stopListening\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/post-message.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addMetadata\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addMetadata(msg: Message)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Add metadata to the postmessage payload. IE the token and appId\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                        \n                                                                    Message\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MessageComplete\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listenForMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        listenForMessages(allowedDomains?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Activates the post message listener\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        allowedDomains\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                \nAllowable domains to whitelist message responses. Based on window.location.origin\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messageReceived\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        messageReceived(event: MessageEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            When a message was received via the postMessage event listener\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MessageEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe event passed from the event listener\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postMessageToIframe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        postMessageToIframe(id: string, message: Message, urlTarget: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Post a message to an embedded iframe\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \na CSS ID of the iframe. IE 'messageTarget' of \n\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                        \n                                                                    Message\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nThe message payload\n\n\n                                                        \n                                                \n                                                \n                                                        urlTarget\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '*'\n                                                        \n\n                                                        \n                                                                \nIf the target url is known, only post to that domain. Otherwise its *\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postMessageToParent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        postMessageToParent(message: Message, urlTarget: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Post a message from an embedded iframe to its parent\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    Message\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nThe message payload\n\n\n                                                        \n                                                \n                                                \n                                                        urlTarget\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '*'\n                                                        \n\n                                                        \n                                                                \nIf the target url is known, only post to that domain. Otherwise its *\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postMessageToWindow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        postMessageToWindow(reference: Window, message: Message, urlTarget: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:98\n                            \n                        \n\n\n                \n                    \n                            Post a message to window object reference\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        reference\n                                                        \n                                                                    Window\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nA window reference either created by window.open or if existing, window.opened\n\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                        \n                                                                    Message\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                \nThe message payload\n\n\n                                                        \n                                                \n                                                \n                                                        urlTarget\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                '*'\n                                                        \n\n                                                        \n                                                                \nIf the target url is known, only post to that domain. Otherwise its *\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stopListening\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        stopListening()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Stop listening for postmessage events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allowedDomains\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowedDomains:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:26\n                            \n                        \n\n                \n                    \n                        An array of domains to accept postmessage responses from, based on window.location.origin \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            appId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appId:     \n\n                    \n                \n                    \n                        \n                            Default value : Math.floor(Math.random() * 10000000)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:28\n                            \n                        \n\n                \n                    \n                        Generate a random number to identify this app. Used to drop same domain postmessages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postMessage$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postMessage$:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:22\n                            \n                        \n\n                \n                    \n                        Postmessage response \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            postMessageListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postMessageListener:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/post-message.service.ts:24\n                            \n                        \n\n                \n                    \n                        Holds postmessage event listener \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { ObjectUtils } from '$utils';\nimport { AppSettings } from '../app.settings';\n\ninterface Message {\n  event?: string;\n  payload?: any;\n}\n\ninterface MessageComplete extends Message {\n  token?: string;\n  appId?: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostMessageService {\n  /** Postmessage response */\n  public postMessage$: Subject = new Subject();\n  /** Holds postmessage event listener */\n  private postMessageListener: any;\n  /** An array of domains to accept postmessage responses from, based on window.location.origin */\n  private allowedDomains: string[];\n  /** Generate a random number to identify this app. Used to drop same domain postmessages */\n  private appId = Math.floor(Math.random() * 10000000);\n\n  constructor(private settings: AppSettings) {}\n\n  /**\n   * Activates the post message listener\n   * @param allowedDomains - Allowable domains to whitelist message responses. Based on window.location.origin\n   */\n  public listenForMessages(allowedDomains?: string[]) {\n    // Set allowed domains to receive messages from\n    if (allowedDomains) {\n      this.allowedDomains = allowedDomains;\n    }\n\n    if (this.settings.isBrowser) {\n      // If not IE\n      if (window.addEventListener) {\n        this.postMessageListener = window.addEventListener('message', this.messageReceived.bind(this), false);\n      } else {\n        // If IE\n        this.postMessageListener = (window).attachEvent('onmessage', this.messageReceived.bind(this), false);\n      }\n    }\n\n    return this.postMessage$;\n  }\n\n  /**\n   * Stop listening for postmessage events\n   */\n  public stopListening() {\n    if (this.settings.isBrowser) {\n      window.removeEventListener('message', this.postMessageListener);\n    }\n  }\n\n  /**\n   * Post a message from an embedded iframe to its parent\n   * @param message - The message payload\n   * @param urlTarget - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToParent(message: Message, urlTarget: string = '*') {\n    if (this.settings.isBrowser) {\n      if (window.parent) {\n        window.parent.postMessage(this.addMetadata(message), urlTarget);\n      }\n    }\n  }\n\n  /**\n   * Post a message to an embedded iframe\n   * @param id - a CSS ID of the iframe. IE 'messageTarget' of \n   * @param message - The message payload\n   * @param urlTarget  - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToIframe(id: string, message: Message, urlTarget: string = '*') {\n    if (this.settings.isBrowser) {\n      // Make sure the element is on the DOM\n      if ((document).getElementById(id) && (document).getElementById(id).contentWindow) {\n        (document).getElementById(id).contentWindow.postMessage(this.addMetadata(message), urlTarget);\n      }\n    }\n  }\n\n  /**\n   * Post a message to window object reference\n   * @param reference - A window reference either created by window.open or if existing, window.opened\n   * @param message - The message payload\n   * @param urlTarget  - If the target url is known, only post to that domain. Otherwise its *\n   */\n  public postMessageToWindow(reference: Window, message: Message, urlTarget: string = '*') {\n    reference.postMessage(this.addMetadata(message), urlTarget);\n  }\n\n  /**\n   * When a message was received via the postMessage event listener\n   * @param event - The event passed from the event listener\n   */\n  private messageReceived(event: MessageEvent) {\n    // Scrub webpackOk events and same appId origination\n    if (event.data && event.data.type !== 'webpackOk' && event.data.appId !== this.appId) {\n      // Sanitize incoming payload\n      const msg: MessageComplete = ObjectUtils.sanitize(event.data);\n      // Check if allowable domains\n      if ((this.allowedDomains && this.allowedDomains.indexOf(event.origin) !== -1) || !this.allowedDomains) {\n        this.postMessage$.next(msg);\n      } else {\n        console.error('Message from unauthorized source');\n      }\n    }\n  }\n\n  /**\n   * Add metadata to the postmessage payload. IE the token and appId\n   * @param msg\n   */\n  private addMetadata(msg: Message): MessageComplete {\n    return {\n      ...ObjectUtils.sanitize(msg),\n      appId: this.appId,\n      token: this.settings.token,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'components/QaComponent.html': {
      url: 'components/QaComponent.html',
      title: 'component - QaComponent',
      body:
        "\n                   \n\n\n\n\n\n  Components\n  QaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/routes/qa/qa.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-qa\n            \n\n            \n                styleUrls\n                qa.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./qa.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterFruit\n                            \n                            \n                                    Public\n                                filterFruitMore\n                            \n                            \n                                    Public\n                                fruits\n                            \n                            \n                                    Public\n                                fruitsMore\n                            \n                            \n                                    Public\n                                launchModalWorks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                launchModalSuccess\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/qa/qa.component.ts:36\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            launchModalSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        launchModalSuccess(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterFruit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterFruit:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterFruitMore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterFruitMore:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fruits\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fruits:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'Apple',\n    'Orange',\n    'Kiwi',\n    'Marionberries',\n    'Loganberries',\n    'Mangostein',\n    'Peach',\n    'Pear',\n    'Blackberries',\n    'Strawberries',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fruitsMore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fruitsMore:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'Apple' },\n    { name: 'Orange' },\n    { name: 'Kiwi' },\n    { name: 'Marionberries' },\n    { name: 'Loganberries' },\n    { name: 'Mangostein' },\n    { name: 'Peach' },\n    { name: 'Pear' },\n    { name: 'Blackberries' },\n    { name: 'Strawberries' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            launchModalWorks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        launchModalWorks:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/qa/qa.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qa',\n  templateUrl: './qa.component.html',\n  styleUrls: ['./qa.component.scss'],\n})\nexport class QaComponent implements OnInit {\n  public launchModalWorks: boolean;\n\n  public filterFruit: any;\n  public filterFruitMore: any;\n  public fruits = [\n    'Apple',\n    'Orange',\n    'Kiwi',\n    'Marionberries',\n    'Loganberries',\n    'Mangostein',\n    'Peach',\n    'Pear',\n    'Blackberries',\n    'Strawberries',\n  ];\n  public fruitsMore = [\n    { name: 'Apple' },\n    { name: 'Orange' },\n    { name: 'Kiwi' },\n    { name: 'Marionberries' },\n    { name: 'Loganberries' },\n    { name: 'Mangostein' },\n    { name: 'Peach' },\n    { name: 'Pear' },\n    { name: 'Blackberries' },\n    { name: 'Strawberries' },\n  ];\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public launchModalSuccess(event: any) {\n    if (event) {\n      this.launchModalWorks = true;\n    }\n  }\n}\n\n    \n\n    \n        \n  QA Testing Page\n  Used for testing non-routable components.\n  \n\n \n\n\n  \n  Confirmation Modal\n  \n    Launch Modal Component\n  \n  Success method works\n  \n  Filter Pipe\n  \n    \n      Array of strings\n      \n      Clear\n      \n        {{ fruit }}\n      \n    \n    \n      Array of objects\n      \n      Clear\n      \n        {{ fruit.name }}\n      \n    \n  \n\n  \n  Debounce Pipe\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  QA Testing Page  Used for testing non-routable components.       Confirmation Modal      Launch Modal Component    Success method works    Filter Pipe            Array of strings            Clear              {{ fruit }}                    Array of objects            Clear              {{ fruit.name }}                Debounce Pipe'\n    var COMPONENTS = [{'name': 'ApiStateComponent', 'selector': 'app-api-state'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChartComponent', 'selector': 'app-chart'},{'name': 'ChartsComponent', 'selector': 'app-charts'},{'name': 'ConfirmationModalComponent', 'selector': 'app-confirmation-modal'},{'name': 'CounterComponent', 'selector': 'app-counter'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GridComponent', 'selector': 'app-grid'},{'name': 'GridStatusBarComponent', 'selector': 'app-grid-status-bar'},{'name': 'GridTemplateRendererComponent', 'selector': 'app-template-renderer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeContextMenuComponent', 'selector': 'app-context-menu'},{'name': 'LaunchModalComponent', 'selector': 'app-launch-modal'},{'name': 'LayoutMainComponent', 'selector': 'app-layout-main'},{'name': 'LayoutSingleComponent', 'selector': 'app-layout-single'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogoutModalComponent', 'selector': 'app-logout-modal'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NavSearchComponent', 'selector': 'app-nav-search'},{'name': 'NoContentComponent', 'selector': 'app-no-content'},{'name': 'QaComponent', 'selector': 'app-qa'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[appFocus]'},{'name': 'FullScreenDirective', 'selector': '[appFullScreen]'}];\n    var ACTUAL_COMPONENT = {'name': 'QaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/QaModule.html': {
      url: 'modules/QaModule.html',
      title: 'module - QaModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  QaModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QaModule\n\n\n\ncluster_QaModule_declarations\n\n\n\ncluster_QaModule_imports\n\n\n\n\nChartsComponent\n\nChartsComponent\n\n\n\nQaModule\n\nQaModule\n\nQaModule -->\n\nChartsComponent->QaModule\n\n\n\n\n\nQaComponent\n\nQaComponent\n\nQaModule -->\n\nQaComponent->QaModule\n\n\n\n\n\nChartModule\n\nChartModule\n\nQaModule -->\n\nChartModule->QaModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nQaModule -->\n\nSiteModule->QaModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/qa/qa.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ChartsComponent\n                            \n                            \n                                QaComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ChartModule\n                            \n                            \n                                    SiteModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SiteModule } from '$site'; // Site modules\nimport { QaComponent } from './qa.component';\nimport { routing } from './qa.routes';\n\nimport { ChartsComponent } from './routes/charts/charts.component';\nimport { ChartModule } from '$libs';\n\n@NgModule({\n  imports: [CommonModule, SiteModule, routing, ChartModule],\n  declarations: [QaComponent, ChartsComponent],\n})\nexport class QaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/SafeHtmlPipe.html': {
      url: 'pipes/SafeHtmlPipe.html',
      title: 'pipe - SafeHtmlPipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/safe-html.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(value: string, type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/safe-html.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'html'\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n// Usage: {{ value | safe: 'html' }}\n@Pipe({\n  name: 'safeHtml',\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(protected _sanitizer: DomSanitizer) {}\n\n  public transform(\n    value: string,\n    type: string = 'html',\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this._sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this._sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this._sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this._sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this._sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        throw new Error(`Invalid safe type specified: ${type}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/ServiceWorkerService.html': {
      url: 'injectables/ServiceWorkerService.html',
      title: 'injectable - ServiceWorkerService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServiceWorkerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/service-worker.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkInterval\n                            \n                            \n                                    Private\n                                counter\n                            \n                            \n                                    Private\n                                modalPopped\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                    Public\n                                updateAvailable$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Public\n                                openModal\n                            \n                            \n                                    Public\n                                pollForUpdates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sw: SwUpdate, modals: UIModalService, zone: NgZone, settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/service-worker.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sw\n                                                  \n                                                        \n                                                                    SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modals\n                                                  \n                                                        \n                                                                    UIModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        disable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Disable service worker and stop polling\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            enable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Enable service worker functionality which includes polling for updates\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        openModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:78\n                            \n                        \n\n\n                \n                    \n                            Open the modal asking the user to update\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pollForUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pollForUpdates()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Start polling for SW updates\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkInterval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkInterval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:18\n                            \n                        \n\n                \n                    \n                        Check for update this many minutes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            counter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        counter:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:16\n                            \n                        \n\n                \n                    \n                        Holds set interval \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalPopped\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalPopped:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:20\n                            \n                        \n\n                \n                    \n                        Has the modal been popped already? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sub\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sub:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:22\n                            \n                        \n\n                \n                    \n                        Hold SW sub \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateAvailable$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateAvailable$:     \n\n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/service-worker.service.ts:14\n                            \n                        \n\n                \n                    \n                        Notify app when a new version is available \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { UIModalService } from '$ui';\nimport { environment } from '$env';\nimport { AppSettings } from '../app.settings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceWorkerService {\n  /** Notify app when a new version is available */\n  public updateAvailable$ = new BehaviorSubject(false);\n  /** Holds set interval */\n  private counter: any;\n  /** Check for update this many minutes */\n  private checkInterval = 1; //\n  /** Has the modal been popped already? */\n  private modalPopped = false;\n  /** Hold SW sub */\n  private sub: Subscription;\n\n  constructor(\n    private sw: SwUpdate,\n    private modals: UIModalService,\n    private zone: NgZone,\n    private settings: AppSettings,\n  ) {}\n\n  /**\n   * Enable service worker functionality which includes polling for updates\n   */\n  public enable() {\n    if (this.sw.isEnabled && this.settings.isBrowser) {\n      // On initial load, check if service worker is available first\n      this.sub = this.sw.available.subscribe(() => {\n        this.updateAvailable$.next(true);\n        window.clearInterval(this.counter);\n        if (!this.modalPopped) {\n          this.openModal();\n          this.modalPopped = true;\n        }\n      });\n      // Check for update immediately on app load\n      this.sw.checkForUpdate();\n      this.pollForUpdates();\n    }\n  }\n\n  /**\n   * Disable service worker and stop polling\n   */\n  public disable() {\n    if (this.settings.isBrowser) {\n      window.clearInterval(this.counter);\n      this.sub.unsubscribe();\n    }\n  }\n\n  /**\n   * Start polling for SW updates\n   */\n  public pollForUpdates() {\n    // Service worker/zone.js has issue with setInterval https://github.com/angular/angular/issues/20970\n    this.zone.runOutsideAngular(() => {\n      if (this.settings.isBrowser) {\n        this.counter = window.setInterval(() => {\n          this.zone.run(() => this.sw.checkForUpdate());\n        }, this.checkInterval * 1000 * 60);\n      }\n    });\n  }\n\n  /**\n   * Open the modal asking the user to update\n   */\n  public openModal() {\n    this.modals\n      .open(\n        'ConfirmationModalComponent',\n        false,\n        'lg',\n        `A new version of ${\n          environment.properties.appName\n        } is available, would you like to update to the latest version?`,\n      )\n      .result.then(\n        () => {\n          window.location.reload();\n          // this.sw.activateUpdate();\n          // this.updateAvailable$.next(false);\n          // this.pollForUpdates();\n          // this.modalPopped = false;\n        },\n        () => console.warn('User is on an outdated version of the application'),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Settings.html': {
      url: 'interfaces/Settings.html',
      title: 'interface - Settings',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/app-config.service.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/app-config.service.ts:10\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AppSettings } from '../app.settings';\nimport { environment } from '$env';\nimport { Models } from '$models';\n\nconst camelCase = require('lodash/camelCase');\n\ninterface Settings {\n  [key: string]: any;\n}\n\n/**\n * Manages receiving and setting initial environment settings\n */\n@Injectable()\nexport class AppConfigService {\n  constructor(private settings: AppSettings, private http: HttpClient) {}\n\n  /**\n   * Set all env settings in app settings\n   * @param settings\n   */\n  public appSettingsUpdate(settings: Models.EnvSettings) {\n    // Loop through all env properties passed by web api\n    Object.keys(settings).forEach(key => {\n      // Check to make sure this prop has been declared in app.settings and is not undefined\n      // If defined, updated prop value\n      // If not throw error\n      const appSetting = this.settings;\n      const appKey = camelCase(key);\n      if (appSetting[appKey] !== undefined) {\n        appSetting[appKey] = (settings)[key];\n      } else {\n        console.error(camelCase(key), `is not present in app settings`);\n      }\n    });\n  }\n\n  /**\n   * Load environment settings\n   */\n  public loadEnvSettings(): Promise {\n    return this.http\n      .get(environment.endpoints.envConfig)\n      .toPromise()\n      .then((data: any) => this.appSettingsUpdate(data))\n      .catch((err: any) => {\n        console.error('Error getting environment settings', err);\n        this.settings.sessionStorageClear();\n        return Promise.resolve();\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/SharedModule.html': {
      url: 'modules/SharedModule.html',
      title: 'module - SharedModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCountPipe\n\nCountPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCountPipe->SharedModule\n\n\n\n\n\nDebouncePipe\n\nDebouncePipe\n\nSharedModule -->\n\nDebouncePipe->SharedModule\n\n\n\n\n\nDurationPipe\n\nDurationPipe\n\nSharedModule -->\n\nDurationPipe->SharedModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nSharedModule -->\n\nFilterPipe->SharedModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nSharedModule -->\n\nFocusDirective->SharedModule\n\n\n\n\n\nFullScreenDirective\n\nFullScreenDirective\n\nSharedModule -->\n\nFullScreenDirective->SharedModule\n\n\n\n\n\nPhoneNumberPipe\n\nPhoneNumberPipe\n\nSharedModule -->\n\nPhoneNumberPipe->SharedModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nSharedModule -->\n\nSafeHtmlPipe->SharedModule\n\n\n\n\n\nSortPipe\n\nSortPipe\n\nSharedModule -->\n\nSortPipe->SharedModule\n\n\n\n\n\nStringPipe\n\nStringPipe\n\nSharedModule -->\n\nStringPipe->SharedModule\n\n\n\n\n\nCountPipe \n\nCountPipe \n\nCountPipe  -->\n\nSharedModule->CountPipe \n\n\n\n\n\nDebouncePipe \n\nDebouncePipe \n\nDebouncePipe  -->\n\nSharedModule->DebouncePipe \n\n\n\n\n\nDurationPipe \n\nDurationPipe \n\nDurationPipe  -->\n\nSharedModule->DurationPipe \n\n\n\n\n\nFilterPipe \n\nFilterPipe \n\nFilterPipe  -->\n\nSharedModule->FilterPipe \n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nSharedModule->FocusDirective \n\n\n\n\n\nFullScreenDirective \n\nFullScreenDirective \n\nFullScreenDirective  -->\n\nSharedModule->FullScreenDirective \n\n\n\n\n\nPhoneNumberPipe \n\nPhoneNumberPipe \n\nPhoneNumberPipe  -->\n\nSharedModule->PhoneNumberPipe \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nSharedModule->SafeHtmlPipe \n\n\n\n\n\nSortPipe \n\nSortPipe \n\nSortPipe  -->\n\nSharedModule->SortPipe \n\n\n\n\n\nStringPipe \n\nStringPipe \n\nStringPipe  -->\n\nSharedModule->StringPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CountPipe\n                            \n                            \n                                DebouncePipe\n                            \n                            \n                                DurationPipe\n                            \n                            \n                                FilterPipe\n                            \n                            \n                                FocusDirective\n                            \n                            \n                                FullScreenDirective\n                            \n                            \n                                PhoneNumberPipe\n                            \n                            \n                                SafeHtmlPipe\n                            \n                            \n                                SortPipe\n                            \n                            \n                                StringPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CountPipe\n                            \n                            \n                                    DebouncePipe\n                            \n                            \n                                    DurationPipe\n                            \n                            \n                                    FilterPipe\n                            \n                            \n                                    FocusDirective\n                            \n                            \n                                    FullScreenDirective\n                            \n                            \n                                    PhoneNumberPipe\n                            \n                            \n                                    SafeHtmlPipe\n                            \n                            \n                                    SortPipe\n                            \n                            \n                                    StringPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Pipes\nimport { DatePipe, CurrencyPipe } from '@angular/common';\nimport { FilterPipe } from './pipes/filter.pipe';\nimport { DebouncePipe } from './pipes/debounce.pipe';\nimport { StringPipe } from './pipes/string.pipe';\nimport { SortPipe } from './pipes/sort.pipe';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\nimport { PhoneNumberPipe } from './pipes/phone-number.pipe';\nimport { CountPipe } from './pipes/count.pipe';\nimport { DurationPipe } from './pipes/duration.pipe';\nimport { TextCasePipe } from './pipes/text-case.pipe';\n\n// Directives\nimport { FullScreenDirective } from './directives/full-screen.directive';\nimport { FocusDirective } from './directives/focus.directive';\n\n// Pipes + Directives\nexport const APP_PIPES_DIRECTIVES = [\n  // Pipes\n  FilterPipe,\n  DebouncePipe,\n  StringPipe,\n  SortPipe,\n  SafeHtmlPipe,\n  PhoneNumberPipe,\n  CountPipe,\n  DurationPipe,\n  TextCasePipe,\n\n  // Directives\n  FullScreenDirective,\n  FocusDirective,\n];\n\n@NgModule({\n  imports: [\n    // Angular\n    CommonModule,\n  ],\n  providers: [DatePipe, CurrencyPipe],\n  declarations: [APP_PIPES_DIRECTIVES],\n  exports: [APP_PIPES_DIRECTIVES],\n  entryComponents: [],\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SharedModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/SiteModule.html': {
      url: 'modules/SiteModule.html',
      title: 'module - SiteModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  SiteModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SiteModule\n\n\n\ncluster_SiteModule_imports\n\n\n\ncluster_SiteModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nSiteModule\n\nSiteModule\n\nSiteModule -->\n\nSharedModule->SiteModule\n\n\n\n\n\nVendorModule\n\nVendorModule\n\nSiteModule -->\n\nVendorModule->SiteModule\n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nSiteModule->SharedModule \n\n\n\n\n\nVendorModule \n\nVendorModule \n\nVendorModule  -->\n\nSiteModule->VendorModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/site.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    VendorModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    VendorModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VendorModule } from './vendor.module';\n\nimport { SharedModule } from '$shared';\nimport { ComponentsModule } from '$components';\n\n@NgModule({\n  imports: [\n    // Angular\n    CommonModule,\n    VendorModule,\n    // Global components\n    ComponentsModule,\n    // Global shared\n    SharedModule,\n  ],\n  declarations: [],\n  exports: [VendorModule, SharedModule, ComponentsModule],\n})\nexport class SiteModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SiteModule,\n      providers: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/SortPipe.html': {
      url: 'pipes/SortPipe.html',
      title: 'pipe - SortPipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/sort.pipe.ts\n        \n\n            \n                Description\n            \n            \n                USAGE: {{ val | sort: 'asc' : 'name' }}\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        sort\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(arr: any[], sortDir: \"asc\" | \"desc\", objProp: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/sort.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        arr\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        sortDir\n                                                        \n                                                                    \"asc\" | \"desc\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'asc'\n                                                        \n\n                                                \n                                                \n                                                        objProp\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * USAGE: {{ val | sort: 'asc' : 'name' }}\n */\n\n@Pipe({\n  name: 'sort',\n})\nexport class SortPipe implements PipeTransform {\n  transform(arr: any[], sortDir: 'asc' | 'desc' = 'asc', objProp: string): any {\n    let arrayNew = arr;\n\n    const sortAsc = (a: any, b: any) => a[objProp] - b[objProp];\n    const sortDesc = (a: any, b: any) => b[objProp] - a[objProp];\n\n    if (objProp) {\n      arrayNew = sortDir === 'asc' ? arrayNew.sort(sortAsc) : arrayNew.sort(sortDesc);\n    } else {\n      arrayNew = sortDir === 'asc' ? arrayNew.sort() : arrayNew.reverse();\n    }\n    return arrayNew;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/StringPipe.html': {
      url: 'pipes/StringPipe.html',
      title: 'pipe - StringPipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/string.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Convert the input to a string. Will convert objects to json and everything else to string.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        string\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/string.pipe.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Convert the input to a string. Will convert objects to json and everything else to string.\n */\n@Pipe({\n  name: 'string',\n})\nexport class StringPipe implements PipeTransform {\n  transform(value: any): any {\n    // Is object\n    if (!Array.isArray(value) && typeof value === 'object') {\n      return JSON.stringify(value);\n    } else {\n      // Everything else\n      return String(value);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/StringUtils.html': {
      url: 'classes/StringUtils.html',
      title: 'class - StringUtils',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utils/string-utils.ts\n        \n\n            \n                Description\n            \n            \n                Helper utilities for string manipulation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                charShift\n                            \n                            \n                                    Static\n                                obfuscateAdd\n                            \n                            \n                                    Static\n                                obfuscateRemove\n                            \n                            \n                                    Static\n                                pad\n                            \n                            \n                                    Static\n                                randomstring\n                            \n                            \n                                    Static\n                                trim\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            charShift\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        charShift(str: string, offsetAmount: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/string-utils.ts:91\n                            \n                        \n\n\n                \n                    \n                            Shifts the characters in a string to new ones based on the offset amount\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        offsetAmount\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                1\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            obfuscateAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        obfuscateAdd(val: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/string-utils.ts:34\n                            \n                        \n\n\n                \n                    \n                            Obfuscate a string by encoding with base64\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                A string to obfuscate\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            obfuscateRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        obfuscateRemove(val: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/string-utils.ts:45\n                            \n                        \n\n\n                \n                    \n                            Remove the obfuscation of a string by decoding it from base64\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                A string to obfuscate\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pad(val: string, before?: number, after?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/string-utils.ts:58\n                            \n                        \n\n\n                \n                    \n                            Pad a string by adding random characters before or after the input\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Input string\n\n                                                        \n                                                \n                                                \n                                                        before\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Number of characters to PREPEND to the string\n\n                                                        \n                                                \n                                                \n                                                        after\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Number of characters to APPEND to the string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            randomstring\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        randomstring(length: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/string-utils.ts:12\n                            \n                        \n\n\n                \n                    \n                            Generate a random string of letters and numbers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        length\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe length of the string\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            trim\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trim(val: string, before?: number, after?: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utils/string-utils.ts:75\n                            \n                        \n\n\n                \n                    \n                            Remove a specific number of characters from the front or back of a strong\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Input string\n\n                                                        \n                                                \n                                                \n                                                        before\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Number of characters to remove from the FRONT of a string\n\n                                                        \n                                                \n                                                \n                                                        after\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Number of characters to remove from the Back of a string\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        const unescape = require('lodash/unescape');\nconst escape = require('lodash/escape');\n\n/**\n * Helper utilities for string manipulation\n */\nexport class StringUtils {\n  /**\n   * Generate a random string of letters and numbers\n   * @param length - The length of the string\n   */\n  static randomstring(length: number) {\n    let s = '';\n    const randomchar = () => {\n      const n = Math.floor(Math.random() * 62);\n      if (n /?';\n    let strNew = '';\n\n    // Loop through all the chars in the string\n    for (let i = 0; i  charsList.length) {\n          charNewIndex = (charNewIndex + offsetAmount) % charsList.length;\n        } else if (charNewIndex + offsetAmount \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/TextCasePipe.html': {
      url: 'pipes/TextCasePipe.html',
      title: 'pipe - TextCasePipe',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TextCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/text-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        textCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, type?: \"pascal\" | \"upper\" | \"lower\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/text-case.pipe.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    \"pascal\" | \"upper\" | \"lower\"\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nconst capitalize = require('lodash/capitalize');\n\n@Pipe({\n  name: 'textCase',\n})\nexport class TextCasePipe implements PipeTransform {\n  transform(value: string, type?: 'pascal' | 'upper' | 'lower'): any {\n    if (value && typeof value === 'string') {\n      switch (type) {\n        case 'pascal':\n          return capitalize(value);\n        case 'upper':\n          return value.toUpperCase();\n        case 'lower':\n          return value.toLowerCase();\n        default:\n          return capitalize(value);\n      }\n    }\n\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'pipes/TextCasePipe-1.html': {
      url: 'pipes/TextCasePipe-1.html',
      title: 'pipe - TextCasePipe-1',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TextCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/libs/grid/pipes/text-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        textCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string, type?: \"pascal\" | \"upper\" | \"lower\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/libs/grid/pipes/text-case.pipe.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    \"pascal\" | \"upper\" | \"lower\"\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nconst capitalize = require('lodash/capitalize');\n\n@Pipe({\n  name: 'textCase',\n})\nexport class TextCasePipe implements PipeTransform {\n  transform(value: string, type?: 'pascal' | 'upper' | 'lower'): any {\n    if (value && typeof value === 'string') {\n      switch (type) {\n        case 'pascal':\n          return capitalize(value);\n        case 'upper':\n          return value.toUpperCase();\n        case 'lower':\n          return value.toLowerCase();\n        default:\n          return capitalize(value);\n      }\n    }\n\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UIModalService.html': {
      url: 'injectables/UIModalService.html',
      title: 'injectable - UIModalService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIModalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/stores/ui/ui.modal.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modalList\n                            \n                            \n                                    Public\n                                modalRef\n                            \n                            \n                                    Public\n                                modalRef$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                onClose\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal, store: Store, settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/stores/ui/ui.modal.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onClose\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onClose()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.modal.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            When the modal window is closed, remove from store\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        open(modalId: modals, persist: boolean, size: \"sm\" | \"lg\" | \"xl\" | \"full\", data?: any, dataAlt?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.modal.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Open a modal window\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        modalId\n                                                        \n                                                                    modals\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The class name of the modal window\n\n                                                        \n                                                \n                                                \n                                                        persist\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                        \n                                                                Should the modal persist on reload or otherwise have its state managed by the UI store\n\n                                                        \n                                                \n                                                \n                                                        size\n                                                        \n                                                                    \"sm\" | \"lg\" | \"xl\" | \"full\"\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                'lg'\n                                                        \n\n                                                        \n                                                                Modal size\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Primary set of data to pass to the modal\n\n                                                        \n                                                \n                                                \n                                                        dataAlt\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                Secondary set of data to pass to the modal\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalList:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ConfirmationModalComponent: ConfirmationModalComponent,\n    LogoutModalComponent: LogoutModalComponent,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.modal.service.ts:30\n                            \n                        \n\n                \n                    \n                        List of component references of available modals \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef:     NgbModalRef\n\n                    \n                \n                    \n                        \n                            Type :     NgbModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.modal.service.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the STATIC currently open modal. This reference is used for static non persistant modals \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalRef$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalRef$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.modal.service.ts:28\n                            \n                        \n\n                \n                    \n                        Reference to the STORE OBSERVABLE currently open modal. This reference is used for modals persisted in the UI store \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Store } from '@ngrx/store';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { UIStoreActions } from './ui.actions';\nimport { AppSettings } from 'src/app/shared/app.settings';\nimport { AppStore } from 'src/app/shared/stores/store';\n\nimport { ConfirmationModalComponent, LogoutModalComponent } from '$modals';\n\n/** Sample Usage:\nthis.ui.modals.open('ConfirmationModalComponent', false, 'lg', 'Are you sure you want to delete this user?', 'Delete User').result.then(\n\t() => console.log('Modal Closed'),\n\t() => console.log('Modal Dismissed'));\n*/\n\n// List modals here by component name\ntype modals = 'LogoutModalComponent' | 'ConfirmationModalComponent';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UIModalService {\n  /** Reference to the STATIC currently open modal. This reference is used for static non persistant modals */\n  public modalRef: NgbModalRef;\n  /** Reference to the STORE OBSERVABLE currently open modal. This reference is used for modals persisted in the UI store */\n  public modalRef$: BehaviorSubject = new BehaviorSubject(null);\n  /** List of component references of available modals */\n  public modalList: { [key: string]: any } = {\n    ConfirmationModalComponent: ConfirmationModalComponent,\n    LogoutModalComponent: LogoutModalComponent,\n  };\n\n  constructor(private modalService: NgbModal, private store: Store, private settings: AppSettings) {\n    // Subscribe to the modal in the store and launch store modal if data is found. Also make sure token is present\n    this.store.select(storeElem => storeElem.ui.modal).subscribe((modal: any) => {\n      // Make sure modal exists AND that a token is present in app settings. This prevents a modal from persisting after logout\n      if (modal && Object.keys(modal).length && this.settings.token) {\n        // Store reference to the modal instance\n        const modalRef = this.modalService.open(this.modalList[modal.modalId], modal.options);\n        // Add any passed in data to the modal instance after it has opened\n        if (modal.data) {\n          modalRef.componentInstance.data = modal.data;\n        }\n        if (modal.dataAlt) {\n          modalRef.componentInstance.dataAlt = modal.dataAlt;\n        }\n        this.modalRef$.next(modalRef);\n        this.onClose();\n      }\n    });\n  }\n\n  /**\n   * Open a modal window\n   * @param modalId The class name of the modal window\n   * @param persist Should the modal persist on reload or otherwise have its state managed by the UI store\n   * @param size Modal size\n   * @param data Primary set of data to pass to the modal\n   * @param dataAlt Secondary set of data to pass to the modal\n   */\n  public open(\n    modalId: modals,\n    persist: boolean = false,\n    size: 'sm' | 'lg' | 'xl' | 'full' = 'lg',\n    data?: any,\n    dataAlt?: any,\n  ) {\n    let windowClass = '';\n    if (size === 'xl') {\n      windowClass += ' modal-xl';\n    }\n    if (size === 'full') {\n      windowClass += ' modal-full';\n    }\n\n    // If persist is set, load this modal into the store so state is managed by the UI store\n    if (persist) {\n      this.store.dispatch(\n        UIStoreActions.MODAL_OPEN({\n          modalId: modalId,\n          options: { size: size },\n          data: data,\n        }),\n      );\n    } else {\n      // If persist is not set\n      this.modalRef = this.modalService.open(this.modalList[modalId], { size: size, windowClass: windowClass });\n      if (data) {\n        this.modalRef.componentInstance.data = data;\n      }\n      if (dataAlt) {\n        this.modalRef.componentInstance.dataAlt = dataAlt;\n      }\n    }\n    return this.modalRef;\n  }\n\n  /**\n   * When the modal window is closed, remove from store\n   */\n  private onClose() {\n    this.modalRef$.subscribe(modal => {\n      // Wait for promise that is returned when modal is closed or dismissed\n      modal.result.then(\n        () => {\n          this.store.dispatch(UIStoreActions.MODAL_UNLOAD(null));\n        },\n        () => {\n          // On modal dismiss, which is closed without performing an action\n          this.store.dispatch(UIStoreActions.MODAL_UNLOAD(null));\n        },\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UIStoreService.html': {
      url: 'injectables/UIStoreService.html',
      title: 'injectable - UIStoreService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/stores/ui/ui.store.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                pad\n                            \n                            \n                                    Public\n                                screen\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gridStateChange\n                            \n                            \n                                    Public\n                                multiScreenToggle\n                            \n                            \n                                    Public\n                                obfuscateAdd\n                            \n                            \n                                    Public\n                                obfuscateRemove\n                            \n                            \n                                    Public\n                                sidebarToggle\n                            \n                            \n                                    Public\n                                storeStateRestore\n                            \n                            \n                                    Private\n                                storeStateSave\n                            \n                            \n                                    Public\n                                tabChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, select: UiSelectorsService, settings: AppSettings)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/stores/ui/ui.store.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        select\n                                                  \n                                                        \n                                                                    UiSelectorsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                    AppSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridStateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gridStateChange(gridState: GridState)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Toggle sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridState\n                                                        \n                                                                    GridState\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            multiScreenToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        multiScreenToggle(multiScreen: boolean | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Toggle multiscreen view\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        multiScreen\n                                                        \n                                                                    boolean | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            obfuscateAdd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        obfuscateAdd(str: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:116\n                            \n                        \n\n\n                \n                    \n                            Add state obfuscation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            obfuscateRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        obfuscateRemove(str: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:127\n                            \n                        \n\n\n                \n                    \n                            Remove state obfuscation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sidebarToggle(toggle: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Toggle sidebar\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toggle\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nNew sidebar state\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storeStateRestore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storeStateRestore(uiState: AppStore.Ui)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Reload the latest UI state from localstorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiState\n                                                        \n                                                                    AppStore.Ui\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            storeStateSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storeStateSave(state: AppStore.Ui)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:94\n                            \n                        \n\n\n                \n                    \n                            Save the UI store state to localstorage for persistance\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    AppStore.Ui\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        tabChange(tabInstanceId: string, tabId: NgbTabChangeEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:56\n                            \n                        \n\n\n                \n                    \n                            Change the visible tab of a tabset\nUSAGE: \nMake sure all tabs have an id: \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tabInstanceId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nA name or unique identifier for this tab instance\n\n\n                                                        \n                                                \n                                                \n                                                        tabId\n                                                        \n                                                                    NgbTabChangeEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe tabChange event supplied by ng-boostrap\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pad\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pad:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:20\n                            \n                        \n\n                \n                    \n                        Obfuscate reference \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            screen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        screen:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:17\n                            \n                        \n\n                \n                    \n                        Holds the reference to a window opened programmatically. Used by appComms for multiscreen state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        select:     UiSelectorsService\n\n                    \n                \n                    \n                        \n                            Type :     UiSelectorsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.store.service.ts:25\n                            \n                        \n\n                \n                    \n                        UI Store Selectors \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap';\n\nimport { environment } from '$env';\nimport { AppStore } from '$shared';\nimport { StringUtils } from '$utils';\nimport { AppSettings } from '../../app.settings';\nimport { UIStoreActions } from './ui.actions';\nimport { UiSelectorsService } from './ui.selectors.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UIStoreService {\n  /** Holds the reference to a window opened programmatically. Used by appComms for multiscreen state */\n  public screen: any; // Window\n\n  /** Obfuscate reference */\n  private pad = 100;\n\n  constructor(\n    private store: Store,\n    /** UI Store Selectors */\n    public select: UiSelectorsService,\n    private settings: AppSettings,\n  ) {\n    // Rehydrate UI state from localstorage on instantiation\n    if (this.settings.ui) {\n      // Get UI state from localstorage\n      let str = this.settings.ui;\n      // Remove obfusucation if is set\n      if (environment.settings.obfuscate) {\n        // If de-obfuscating errors out, remove ui store state and fail gracefully\n        str = this.obfuscateRemove(str);\n      }\n      // Convert to JSON\n      const uiState: AppStore.Ui = JSON.parse(str);\n      this.storeStateRestore(uiState);\n    }\n\n    // On UI store changes, persist to localstorage\n    this.select.saveState$.subscribe((uiState: AppStore.Ui) => this.storeStateSave(uiState));\n\n    // Output store changes to console\n    // this.store.subscribe(storeApi => console.log(JSON.parse(JSON.stringify(storeApi.ui))));\n  }\n\n  /**\n   * Change the visible tab of a tabset\n   * USAGE: \n   * Make sure all tabs have an id: \n   * @param tabInstanceId - A name or unique identifier for this tab instance\n   * @param tabId - The tabChange event supplied by ng-boostrap\n   */\n  public tabChange(tabInstanceId: string, tabId: NgbTabChangeEvent) {\n    this.store.dispatch(UIStoreActions.TAB_CHANGE({ tabInstanceId: tabInstanceId, tabId: tabId.nextId }));\n  }\n\n  /**\n   * Toggle sidebar\n   * @param toggle - New sidebar state\n   */\n  public sidebarToggle(toggle: boolean) {\n    this.store.dispatch(UIStoreActions.SIDEBAR_TOGGLE(toggle));\n  }\n\n  /**\n   * Toggle sidebar\n   * @param toggle - New sidebar state\n   */\n  public gridStateChange(gridState: GridState) {\n    this.store.dispatch(UIStoreActions.GRID_STATE_CHANGE(gridState));\n  }\n\n  /**\n   * Toggle multiscreen view\n   */\n  public multiScreenToggle(multiScreen: boolean | null = null) {\n    this.store.dispatch(UIStoreActions.MULTISCREEN_TOGGLE(multiScreen));\n  }\n\n  /**\n   *  Reload the latest UI state from localstorage\n   */\n  public storeStateRestore(uiState: AppStore.Ui) {\n    this.store.dispatch(UIStoreActions.REHYDRATE(uiState));\n  }\n\n  /**\n   * Save the UI store state to localstorage for persistance\n   * @param state\n   */\n  private storeStateSave(state: AppStore.Ui) {\n    if (state) {\n      // Delete any keys that should not be persisted\n      for (const key in state) {\n        if (state.hasOwnProperty(key) && environment.state.uiStoreBlacklist.indexOf(key) !== -1 && (state)[key]) {\n          delete (state)[key];\n        }\n      }\n      let str = JSON.stringify(state);\n      // Add obfusciation if set\n      if (environment.settings.obfuscate) {\n        str = this.obfuscateAdd(str);\n      }\n      // Set to localstorage\n      this.settings.ui = str;\n    }\n  }\n\n  /**\n   * Add state obfuscation\n   * @param str\n   */\n  public obfuscateAdd(str: string) {\n    str = StringUtils.pad(str, this.pad, this.pad);\n    str = StringUtils.obfuscateAdd(str);\n    str = StringUtils.charShift(str, 10);\n    return str;\n  }\n\n  /**\n   * Remove state obfuscation\n   * @param str\n   */\n  public obfuscateRemove(str: string) {\n    try {\n      str = StringUtils.charShift(str, -10);\n      str = StringUtils.obfuscateRemove(str);\n      str = StringUtils.trim(str, this.pad, this.pad);\n    } catch (err) {\n      console.error(err);\n      this.settings.ui = null;\n    }\n    return str;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UiSelectorsService.html': {
      url: 'injectables/UiSelectorsService.html',
      title: 'injectable - UiSelectorsService',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiSelectorsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/stores/ui/ui.selectors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gridState$\n                            \n                            \n                                    Public\n                                modal$\n                            \n                            \n                                    Public\n                                multiScreen$\n                            \n                            \n                                    Public\n                                saveState$\n                            \n                            \n                                    Public\n                                sidebarOpen$\n                            \n                            \n                                    Public\n                                tabActive$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/stores/ui/ui.selectors.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gridState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(store => store.ui.gridState)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.selectors.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modal$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(store => store.ui.modal)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.selectors.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            multiScreen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        multiScreen$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(store => store.ui.multiScreen)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.selectors.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveState$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(store => store.ui.saveState)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.selectors.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidebarOpen$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sidebarOpen$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.store.select(store => store.ui.sidebarOpen)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.selectors.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabActive$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabActive$:     \n\n                    \n                \n                    \n                        \n                            Default value : (tabInstanceId: string) => this.store.select(store => store.ui.tabsActive[tabInstanceId])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/stores/ui/ui.selectors.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AppStore } from '$shared';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UiSelectorsService {\n  public sidebarOpen$ = this.store.select(store => store.ui.sidebarOpen);\n  public saveState$ = this.store.select(store => store.ui.saveState);\n  public gridState$ = this.store.select(store => store.ui.gridState);\n  public modal$ = this.store.select(store => store.ui.modal);\n  public multiScreen$ = this.store.select(store => store.ui.multiScreen);\n  public tabActive$ = (tabInstanceId: string) => this.store.select(store => store.ui.tabsActive[tabInstanceId]);\n\n  constructor(private store: Store) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/VendorModule.html': {
      url: 'modules/VendorModule.html',
      title: 'module - VendorModule',
      body:
        "\n                   \n\n\n\n\n  Modules\n  VendorModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/vendor.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n//import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  MatIconModule,\n  MatMenuModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatButtonModule,\n  MatDialogModule,\n  MatExpansionModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    // Angular\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    // Vendors\n    //NgbModule.forRoot(), // ngBootstrap\n    // Angular Materials\n    MatIconModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatExpansionModule,\n  ],\n  exports: [\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule, // NgbModule,\n    MatIconModule,\n    MatMenuModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatExpansionModule,\n  ],\n  declarations: [],\n})\nexport class VendorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/Window.html': {
      url: 'interfaces/Window.html',
      title: 'interface - Window',
      body:
        "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libs/chart/chart.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        CanvasJS\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CanvasJS\n                                    \n                                \n                                \n                                    \n                                        CanvasJS:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef,\n  Input,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\n// import { formatDate, formatNumber, formatCurrency, formatPercent } from '@angular/common';\nconst defaultsDeep = require('lodash/defaultsDeep');\n\ndeclare global {\n  interface Window {\n    CanvasJS: any;\n  }\n}\n\n// JS file source\nconst chartSrc = 'assets/scripts/canvasjs.min.js';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChartComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  /** TEMP */\n  @ViewChild('element') element: ElementRef;\n  @ViewChild('tooltipCustom') tooltipCustom: ElementRef;\n\n  @Input()\n  type:\n    | 'line'\n    | 'column'\n    | 'bar'\n    | 'area'\n    | 'spline'\n    | 'splineArea'\n    | 'stepLine'\n    | 'scatter'\n    | 'bubble'\n    | 'stackedColumn'\n    | 'stackedBar'\n    | 'stackedArea'\n    | 'stackedColumn100'\n    | 'stackedBar100'\n    | 'stackedArea100'\n    | 'pie'\n    | 'doughnut' =\n    'column';\n  @Input() width: string;\n  @Input() height: string;\n  @Input() data: CanvasJS.ChartDataSeriesOptions[];\n  @Input() options: Partial;\n  @Input() stacked: boolean;\n\n  /** Colors for data points in RGB */\n  @Input() colorSet: string;\n  @Input() colorGradient: [string, string];\n  @Input() colorsCustom: string[] = [];\n\n  // Format Elements\n  @Input() formatTooltip: any;\n  @Input() formatTooltipTitle: any;\n  @Input() formatDatalabel: any;\n  @Input() formatXLabels: any;\n  @Input() formatYLabels: any;\n\n  // Show/Hide Elements\n  /** Show or hide the tooltip which appears when you hover over a chart entry */\n  @Input() showLegend = true;\n  /** Show or hide the values that appear inside the chart */\n  @Input() showIndexLabel = false;\n  /** Show or hide the tooltip which appears when you hover over a chart entry */\n  @Input() showTooltip = true;\n  /** Show or hide the labels that appear on the X axis */\n  @Input() showXAxisLabels = true;\n  /** Show or hide the labels that appear on the Y axis */\n  @Input() showYAxisLabels = true;\n\n  // Titles\n  /** Title to show for the main chart */\n  @Input() titleChart: string;\n  /** Title to show for the X Axis, leave null for none */\n  @Input() titleXAxis: string;\n  /** Title to show for the Y Axis, leave null for none */\n  @Input() titleYAxis: string;\n\n  // Template\n  /** Supply a custom html template for the tooltip */\n  @Input() templateTooltip: any = null;\n\n  /** Randomly generated uniqueID for the div that holds the chart. Allows for multiple charts per page */\n  public uniqueId = 'chart' + Math.floor(Math.random() * 1000000);\n\n  /** Chart reference */\n  private chart: CanvasJS.Chart;\n\n  /** If custom colors supplied, this is the auto-generated name of the color scheme */\n  private colorScheme: string;\n\n  /** After initial load */\n  private isLoaded = false;\n\n  private styling = {\n    fontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    fontSize: 10,\n    fontWeight: 'normal',\n  };\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.scriptsLoad();\n  }\n\n  ngOnChanges() {\n    // Only update chart\n    if (this.isLoaded) {\n      this.chartInit();\n    }\n  }\n\n  /**\n   * Check if Chart.js is loaded, if not, load it then initialize the chart in this component\n   */\n  public scriptsLoad() {\n    if (window.CanvasJS) {\n      this.chartInit(); // Chart.js already loaded, init chart\n      this.isLoaded = true;\n    } else {\n      // Dynamically load chart module\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = chartSrc;\n      script.onload = () => {\n        this.chartInit();\n        this.isLoaded = true;\n      }; // After load, init chart\n      document.head.appendChild(script);\n    }\n  }\n\n  /**\n   * Initialize the chart\n   */\n  private chartInit() {\n    if (this.element && this.element.nativeElement && window.CanvasJS) {\n      //  && this.dataSets\n      // Clean up any previous references before reinitializing the chart\n      this.ngOnDestroy();\n\n      if (this.colorsCustom) {\n        this.colorScheme = 'customColors-' + this.colorsCustom.join;\n        window.CanvasJS.addColorSet(this.colorScheme, this.colorsCustom);\n      }\n\n      // Create chart from WINDOW reference not import\n      // Due to bug with plugins registered with global instance and not being available via imports\n      this.chart = new window.CanvasJS.Chart(this.uniqueId, this.chartOptionsCreate());\n      this.chart.render();\n    }\n  }\n\n  /**\n   * Create the options needed by this chart\n   */\n  public chartOptionsCreate() {\n    // If color gradient is specified, create it to match datapoint range\n    if (this.colorGradient && this.data && this.data[0] && this.data[0].dataPoints.length) {\n      this.colorsCustom = this.getColorScheme(\n        this.colorGradient[0],\n        this.colorGradient[1],\n        this.data[0].dataPoints.length,\n      );\n    }\n\n    // If custom colors supplied, register with chart plugin\n    if (this.colorsCustom) {\n      this.colorScheme = 'customColors-' + this.colorsCustom.join;\n      window.CanvasJS.addColorSet(this.colorScheme, this.colorsCustom);\n    }\n\n    // Create default options\n    const options = {\n      animationEnabled: true,\n      exportEnabled: false,\n      animationDuration: 600,\n      title: {\n        text: this.titleChart,\n        fontSize: 18,\n        fontFamily: this.styling.fontFamily,\n        fontWeight: this.styling.fontWeight,\n      },\n      // theme: \"light2\",\n      toolTip: {\n        enabled: this.showTooltip,\n        fontColor: this.formatTooltip ? this.formatTooltip : null,\n      },\n      legend: {\n        fontSize: this.styling.fontSize,\n        fontFamily: this.styling.fontFamily,\n        cursor: 'pointer',\n        // Enable the legend to toggle dataseries on or off\n        itemclick: e => {\n          e.dataSeries.visible = typeof e.dataSeries.visible === 'undefined' || e.dataSeries.visible ? false : true;\n          this.chart.render();\n        },\n      },\n      colorSet: this.colorSet ? this.colorSet : this.colorScheme ? this.colorScheme : null, // Use built in color set if supplied, use custom colors if not\n      data: this.mapChartData(),\n      axisX: {\n        title: this.titleXAxis,\n        titleFontSize: 16,\n        interval: 1,\n        labelFontSize: this.styling.fontSize,\n        labelFontFamily: this.styling.fontFamily,\n        labelFormatter: val => {\n          if (this.showXAxisLabels === false) {\n            return ''; // If show labels is disabled, return empty string which hides the labels\n          } else if (this.formatXLabels) {\n            return this.formatXLabels(val); // If custom formatter supplied, format strings\n          }\n          return val.label; // Otherwise return default value\n        },\n      },\n      axisY: {\n        title: this.titleYAxis,\n        titleFontSize: 16,\n        labelFontSize: this.styling.fontSize,\n        labelFontFamily: this.styling.fontFamily,\n        labelFormatter: val => {\n          if (this.showYAxisLabels === false) {\n            return ''; // If show labels is disabled, return empty string which hides the labels\n          } else if (this.formatYLabels) {\n            return this.formatYLabels(val); // If custom formatter supplied, format strings\n          }\n          return val.value; // Otherwise return default value\n        },\n      },\n    };\n    // console.log(options)\n    // Return options object with overrides\n    return defaultsDeep(this.options, options);\n  }\n\n  /**  */\n  private mapChartData(): CanvasJS.ChartDataSeriesOptions[] {\n    return this.data.map(data => {\n      return {\n        type: this.type,\n        showInLegend: this.showLegend,\n        indexLabel: this.showIndexLabel ? '{y}' : null,\n        indexLabelFontSize: 10,\n        // indexLabelFontColor: '#fff',\n        // legendText: this.data[0].label,\n        ...data,\n      };\n    });\n  }\n\n  /**\n   * Creates a gradient with a fixed number of steps in a string array\n   * @param startColor - Hex start color\n   * @param endColor - Hex end color\n   * @param steps - The number of hex colors to return\n   */\n  private getColorScheme(startColor: string, endColor: string, steps: number) {\n    const colorsCustom: string[] = [];\n    for (var i = 0; i  6, e.g. `E0F` --> `EE00FF`\n    if (startColor.length == 3) {\n      startColor = startColor.replace(/(.)/g, '$1$1');\n    }\n\n    if (endColor.length == 3) {\n      endColor = endColor.replace(/(.)/g, '$1$1');\n    }\n\n    // Get colors\n    let startRed = parseInt(startColor.substr(0, 2), 16),\n      startGreen = parseInt(startColor.substr(2, 2), 16),\n      startBlue = parseInt(startColor.substr(4, 2), 16);\n\n    let endRed = parseInt(endColor.substr(0, 2), 16),\n      endGreen = parseInt(endColor.substr(2, 2), 16),\n      endBlue = parseInt(endColor.substr(4, 2), 16);\n\n    // Calculate new color\n    let diffRed = endRed - startRed;\n    let diffGreen = endGreen - startGreen;\n    let diffBlue = endBlue - startBlue;\n\n    let diffRedStr = (diffRed * percent + startRed).toString(16).split('.')[0];\n    let diffGreenStr = (diffGreen * percent + startGreen).toString(16).split('.')[0];\n    let diffBlueStr = (diffBlue * percent + startBlue).toString(16).split('.')[0];\n\n    // ensure 2 digits by color\n    if (diffRedStr.length == 1) diffRedStr = '0' + diffRed;\n    if (diffGreenStr.length == 1) diffGreenStr = '0' + diffGreenStr;\n    if (diffBlueStr.length == 1) diffBlueStr = '0' + diffBlueStr;\n\n    return '#' + diffRedStr + diffGreenStr + diffBlueStr;\n  }\n\n  /**\n   * Supply a formatter method OR an Angular pipe to the chart instance\n   * Used to format labels, values, datalabels, etc\n   * @param option\n   \n  public formatData(option: FormatData | Formatter) {\n    // Check if a custom formatter was supplied, if not use angular pipe\n    if (typeof option !== 'function' && option.pipe) {\n      let format = option.format;\n\n      if (!option.format) {\n        format = '';\n      }\n\n      switch (option.pipe) {\n        // Use decimal pipe\n        case 'number':\n          return (tooltipItem: Chart.ChartTooltipItem, _data: Chart.ChartData) =>\n            formatNumber(Number(tooltipItem.yLabel), 'en-US', format);\n        // Datepipe\n        case 'date':\n          return (tooltipItem: Chart.ChartTooltipItem, _data: Chart.ChartData) =>\n            formatDate(Number(tooltipItem.yLabel), format, 'en-US');\n        // Currency pipe\n        case 'currency':\n          return (tooltipItem: Chart.ChartTooltipItem, _data: Chart.ChartData) =>\n            formatCurrency(Number(tooltipItem.yLabel), 'en-US', '', format);\n        // Percent pipe\n        case 'percent':\n          return (tooltipItem: Chart.ChartTooltipItem, _data: Chart.ChartData) =>\n            formatPercent(Number(tooltipItem.yLabel), 'en-US', format);\n        default:\n          console.warn('Improper values supplied for chart formatter', option);\n          break;\n      }\n    } else {\n      return option;\n    }\n\n  }\n  */\n\n  ngOnDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'changelog.html': {
      url: 'changelog.html',
      title: 'getting-started - changelog',
      body:
        '\n                   \n\nAngularStarter\nThis project was generated with Angular CLI version 1.5.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                APP_COMPONENTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/api-state/api-state.component.ts\n            \n            \n                component\n            \n            \n                ApiStateComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/components.module.ts\n            \n            \n                variable\n            \n            \n                APP_COMPONENTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/components.module.ts\n            \n            \n                variable\n            \n            \n                APP_MODALS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/counter/counter.component.ts\n            \n            \n                component\n            \n            \n                CounterComponent\n            \n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/components/launch-modal/launch-modal.component.ts\n            \n            \n                component\n            \n            \n                LaunchModalComponent\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/main/layout-main.component.ts\n            \n            \n                component\n            \n            \n                LayoutMainComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/nav/nav.component.ts\n            \n            \n                component\n            \n            \n                NavComponent\n            \n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/nav/nav.component.ts\n            \n            \n                variable\n            \n            \n                startCase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/nav/nav.component.ts\n            \n            \n                variable\n            \n            \n                toLower\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/nav/search/nav-search.component.ts\n            \n            \n                component\n            \n            \n                NavSearchComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/masterpage/single/layout-single.component.ts\n            \n            \n                component\n            \n            \n                LayoutSingleComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/modals/confirmation/confirmation-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfirmationModalComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/modals/logout/logout-modal.component.ts\n            \n            \n                component\n            \n            \n                LogoutModalComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/modals/modals.service.ts\n            \n            \n                injectable\n            \n            \n                ModalsService\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/libs/chart/chart.component.ts\n            \n            \n                component\n            \n            \n                ChartComponent\n            \n            \n                50 %\n                (21/42)\n            \n        \n        \n            \n                \n                src/app/libs/chart/chart.component.ts\n            \n            \n                interface\n            \n            \n                Window\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/libs/chart/chart.component.ts\n            \n            \n                variable\n            \n            \n                chartSrc\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/libs/chart/chart.component.ts\n            \n            \n                variable\n            \n            \n                defaultsDeep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/libs/context-menu/context-menu.service.ts\n            \n            \n                injectable\n            \n            \n                ContextService\n            \n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/libs/grid/grid-status-bar/grid-status-bar.component.ts\n            \n            \n                component\n            \n            \n                GridStatusBarComponent\n            \n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/libs/grid/grid-template-renderer/grid-template-renderer.component.ts\n            \n            \n                component\n            \n            \n                GridTemplateRendererComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/libs/grid/grid/grid.component.ts\n            \n            \n                component\n            \n            \n                GridComponent\n            \n            \n                26 %\n                (11/41)\n            \n        \n        \n            \n                \n                src/app/libs/grid/grid/grid.component.ts\n            \n            \n                variable\n            \n            \n                defaultsDeep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/libs/grid/pipes/text-case.pipe.ts\n            \n            \n                pipe\n            \n            \n                TextCasePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/libs/grid/pipes/text-case.pipe.ts\n            \n            \n                variable\n            \n            \n                capitalize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/home/columns.ts\n            \n            \n                variable\n            \n            \n                columns\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                34 %\n                (9/26)\n            \n        \n        \n            \n                \n                src/app/routes/home/home.routes.ts\n            \n            \n                variable\n            \n            \n                routing\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/monolith.routes.ts\n            \n            \n                variable\n            \n            \n                routing\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/routes/home/columns.ts\n            \n            \n                variable\n            \n            \n                columns\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/routes/home/context-menu/context-menu.component.ts\n            \n            \n                component\n            \n            \n                HomeContextMenuComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/routes/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                45 %\n                (11/24)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/servies/monolith.service.ts\n            \n            \n                injectable\n            \n            \n                MonolithService\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/shared/stores/api/api.map.ts\n            \n            \n                variable\n            \n            \n                ApiMap\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/shared/stores/api/api.selectors.service.ts\n            \n            \n                injectable\n            \n            \n                MonolithApiSelectorsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/shared/stores/api/api.selectors.service.ts\n            \n            \n                variable\n            \n            \n                selectors\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/monolith/shared/stores/api/api.store.service.ts\n            \n            \n                injectable\n            \n            \n                MonolithApiService\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/routes/no-content/no-content.component.ts\n            \n            \n                component\n            \n            \n                NoContentComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/qa/qa.component.ts\n            \n            \n                component\n            \n            \n                QaComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/routes/qa/qa.routes.ts\n            \n            \n                variable\n            \n            \n                routing\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/qa/routes/charts/charts.component.ts\n            \n            \n                component\n            \n            \n                ChartsComponent\n            \n            \n                14 %\n                (2/14)\n            \n        \n        \n            \n                \n                src/app/routes/qa/routes/charts/summary.ts\n            \n            \n                variable\n            \n            \n                data\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/qa/routes/charts/transfers.ts\n            \n            \n                variable\n            \n            \n                transfers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routes/qa/routes/charts/user.ts\n            \n            \n                variable\n            \n            \n                user\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/app.settings.ts\n            \n            \n                injectable\n            \n            \n                AppSettings\n            \n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                src/app/shared/directives/focus.directive.ts\n            \n            \n                directive\n            \n            \n                FocusDirective\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/full-screen.directive.ts\n            \n            \n                directive\n            \n            \n                FullScreenDirective\n            \n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/shared/interceptors/error.interceptor.ts\n            \n            \n                injectable\n            \n            \n                GlobalErrorHandler\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/count.pipe.ts\n            \n            \n                pipe\n            \n            \n                CountPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/debounce.pipe.ts\n            \n            \n                pipe\n            \n            \n                DebouncePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/duration.pipe.ts\n            \n            \n                pipe\n            \n            \n                DurationPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/filter.pipe.ts\n            \n            \n                pipe\n            \n            \n                FilterPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/phone-number.pipe.ts\n            \n            \n                pipe\n            \n            \n                PhoneNumberPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/safe-html.pipe.ts\n            \n            \n                pipe\n            \n            \n                SafeHtmlPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/sort.pipe.ts\n            \n            \n                pipe\n            \n            \n                SortPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/string.pipe.ts\n            \n            \n                pipe\n            \n            \n                StringPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/text-case.pipe.ts\n            \n            \n                pipe\n            \n            \n                TextCasePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/text-case.pipe.ts\n            \n            \n                variable\n            \n            \n                capitalize\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/app-comms.service.ts\n            \n            \n                injectable\n            \n            \n                AppCommsService\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/app-config.service.ts\n            \n            \n                injectable\n            \n            \n                AppConfigService\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/shared/services/app-config.service.ts\n            \n            \n                interface\n            \n            \n                Settings\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/app-config.service.ts\n            \n            \n                variable\n            \n            \n                camelCase\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/post-message.service.ts\n            \n            \n                injectable\n            \n            \n                PostMessageService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/shared/services/post-message.service.ts\n            \n            \n                interface\n            \n            \n                Message\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/post-message.service.ts\n            \n            \n                interface\n            \n            \n                MessageComplete\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/service-worker.service.ts\n            \n            \n                injectable\n            \n            \n                ServiceWorkerService\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            \n                variable\n            \n            \n                APP_PIPES_DIRECTIVES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.actions.ts\n            \n            \n                variable\n            \n            \n                actionCreator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.actions.ts\n            \n            \n                variable\n            \n            \n                ApiStoreActions\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.actions.ts\n            \n            \n                variable\n            \n            \n                createEntity\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.http.base.service.ts\n            \n            \n                injectable\n            \n            \n                ApiHttpService\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.map.ts\n            \n            \n                variable\n            \n            \n                ApiMap\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.reducer.ts\n            \n            \n                function\n            \n            \n                ApiReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.reducer.ts\n            \n            \n                variable\n            \n            \n                adapter\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.selectors.service.ts\n            \n            \n                injectable\n            \n            \n                ApiSelectorsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.selectors.service.ts\n            \n            \n                variable\n            \n            \n                selectors\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/api/api.store.service.ts\n            \n            \n                injectable\n            \n            \n                ApiService\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.actions.ts\n            \n            \n                variable\n            \n            \n                actionCreator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.actions.ts\n            \n            \n                variable\n            \n            \n                UIStoreActions\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.modal.service.ts\n            \n            \n                injectable\n            \n            \n                UIModalService\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.reducer.ts\n            \n            \n                function\n            \n            \n                UIReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.reducer.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.selectors.service.ts\n            \n            \n                injectable\n            \n            \n                UiSelectorsService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/stores/ui/ui.store.service.ts\n            \n            \n                injectable\n            \n            \n                UIStoreService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/shared/utils/api-utils.ts\n            \n            \n                class\n            \n            \n                ApiUtils\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/utils/desktop-utils.ts\n            \n            \n                class\n            \n            \n                DesktopUtils\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                class\n            \n            \n                ObjectUtils\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                cloneDeep\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                forOwn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isArray\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isEmpty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isNaN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isNull\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isObject\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isString\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                isUndefined\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/object-utils.ts\n            \n            \n                variable\n            \n            \n                pull\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/string-utils.ts\n            \n            \n                class\n            \n            \n                StringUtils\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shared/utils/string-utils.ts\n            \n            \n                variable\n            \n            \n                escape\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/utils/string-utils.ts\n            \n            \n                variable\n            \n            \n                unescape\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                __karma__\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/core : 7.0.1\n        \n            @angular/animations : 7.0.0\n        \n            @angular/cdk : 7.0.2\n        \n            @angular/common : 7.0.0\n        \n            @angular/compiler : 7.0.0\n        \n            @angular/core : 7.0.0\n        \n            @angular/elements : 7.0.0\n        \n            @angular/forms : 7.0.0\n        \n            @angular/http : 7.0.0\n        \n            @angular/material : 7.0.1\n        \n            @angular/platform-browser : 7.0.0\n        \n            @angular/platform-browser-dynamic : 7.0.0\n        \n            @angular/platform-server : 7.0.0\n        \n            @angular/router : 7.0.0\n        \n            @angular/service-worker : 7.0.0\n        \n            @ng-bootstrap/ng-bootstrap : 3.3.1\n        \n            @ngrx/entity : 6.0.1\n        \n            @ngrx/store : 6.0.1\n        \n            @nguniversal/express-engine : 7.0.2\n        \n            @nguniversal/module-map-ngfactory-loader : 7.0.0\n        \n            @schematics/update : 0.10.1\n        \n            ag-grid-angular : 19.0.0\n        \n            ag-grid-community : 19.0.0\n        \n            ag-grid-enterprise : 19.0.0\n        \n            bootstrap : 4.1.3\n        \n            core-js : 2.5.7\n        \n            document-register-element : 1.11.0\n        \n            helpful-decorators : 1.7.2\n        \n            lodash : 4.17.11\n        \n            ngx-auto-unsubscribe : 2.4.1\n        \n            ngx-contextmenu : 5.0.3\n        \n            node-sass : 4.9.4\n        \n            rxjs : 6.3.3\n        \n            ts-loader : 4.5.0\n        \n            typescript-fsa : 2.5.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/enumerations.html': {
      url: 'miscellaneous/enumerations.html',
      title: 'miscellaneous-enumerations - enumerations',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiProps   (src/.../api.props.ts)\n                        \n                        \n                            ApiProps   (src/.../api.props.ts)\n                        \n                        \n                            AppSettingsProps   (src/.../app.settings.ts)\n                        \n                        \n                            ContextMenuList   (src/.../context-menu.list.ts)\n                        \n                        \n                            MessageActions   (src/.../app-comms.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/stores/api/api.props.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiProps\n                    \n                \n                    \n                        \n                            String enum of store properties/primary keys \n\n                        \n                    \n                        \n                            \n                                 users\n                            \n                        \n                        \n                            \n                                Value : users\n                            \n                        \n            \n        \n\n    src/app/routes/monolith/shared/stores/api/api.props.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiProps\n                    \n                \n                    \n                        \n                            String enum of store properties/primary keys \n\n                        \n                    \n                        \n                            \n                                 users\n                            \n                        \n                        \n                            \n                                Value : users\n                            \n                        \n            \n        \n\n    src/app/shared/app.settings.ts\n    \n        \n            \n                \n                    \n                        \n                        AppSettingsProps\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 apiUrl\n                            \n                        \n                        \n                            \n                                Value : apiUrl\n                            \n                        \n                        \n                            \n                                 userName\n                            \n                        \n                        \n                            \n                                Value : userName\n                            \n                        \n                        \n                            \n                                 ui\n                            \n                        \n                        \n                            \n                                Value : ui\n                            \n                        \n            \n        \n\n    src/app/libs/context-menu/context-menu.list.ts\n    \n        \n            \n                \n                    \n                        \n                        ContextMenuList\n                    \n                \n                        \n                            \n                                 home\n                            \n                        \n                        \n                            \n                                Value : home\n                            \n                        \n            \n        \n\n    src/app/shared/services/app-comms.service.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageActions\n                    \n                \n                        \n                            \n                                 RESYNC_UI\n                            \n                        \n                        \n                            \n                                Value : RESYNC_UI\n                            \n                        \n                        \n                            \n                                 END_MULTISCREEN\n                            \n                        \n                        \n                            \n                                Value : END_MULTISCREEN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiReducer   (src/.../api.reducer.ts)\n                        \n                        \n                            UIReducer   (src/.../ui.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/stores/api/api.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nApiReducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/stores/ui/ui.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UIReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nUIReducer(state: , action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body:
        '\n                   \n\nAngular Starter\nA rapid starter project for creating Angular single page apps. Contains Angular, lodash, Bootstrap 4, Ng-Bootstrap & Ngrx-Store (Redux). Built with Angular CLI.\nAvailable online @ https://jerrolkrause.github.io/angular-starter/#/. \nQuick Start\n# Clone the repo\ngit clone https://github.com/JerrolKrause/angular-starter.git\n\n# Rename directory from `angular-starter` to `your-app`\n\n# Change directory to the repo\ncd your-app\n\n# Install the repo with yarn or npm\nyarn\nnpm iUsage\nSee Angular CLI github page for full usage: https://github.com/angular/angular-cli\n# Serve dev on http://localhost:4200/\nng serve --aot\n\n# Build for prod. Files will appear in the dist folder\nng build --prod\n\n# Serve prod build at http://127.0.0.1:8080/#/.\n# Requires http server which can be installed with `npm install http-server -g`\nnpm run prod\n\n# Run prettier which will format the code in the entire project\nnpm run format\n\n# Run prod build and then use webpack bundle analyzer to check bundle sizes and composition\nnpm run stats\n\n# Automatically generate documentation\nnpm run docs\n\n# Run e2e protractor tests\nng e2e\n\n# Run e2e protractor tests without rebuilding every time (faster)\nng e2e --s false\n\n# Update NPM dependencies via Angular CLI\nng update\n\n# Deploy dist folder to git pages. Be sure to update deploy script in package.json\nnpm run deployLocalizing Your App\npackage.json\n\nIf using github pages, update the npm run deploy command in this file to include the correct slug. IE replace /angular-starter/ with your url\n\nsrc > environments > environment.ts +\nsrc > environments > environment.prod.ts\n\nLocalize environment settings and properties in these files. Enable/disable app functionality as needed.\n\nsrc > app > shared > app.settings.ts\n\nAdd/change global app & environment variables\n\nsrc > index.html\n\nUpdate any header changes to the html in this file. IE logo, navigation, etc. This is a poor man\'s app-Shell since ng-bootstrap isn\'t compatible with SSR\n\nsrc > manifest.json\n\nChange the site info in this file to be specific to your app. Make sure the start Url property matches your production URL\n\nsrc > assets > icons\n\nChange these icons to ones for your app\n\nsrc > apple-touch-icon + favicon.ico + safari-pinned-tab.svg\n\nChange these icons to ones for your app\n\nsrc > ngsw-config.json\n\nUpdate any dependencies needed for the service worker. Use asset groups for site resources & use dataGroups for API calls\n\nUseful Tools\nVSCode Tools\n\nPrettier: https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\nTS Lint: https://marketplace.visualstudio.com/items?itemName=eg2.tslint\n\nVisual Studio Tools\n\nPrettier: https://marketplace.visualstudio.com/items?itemName=MadsKristensen.JavaScriptPrettier\nTS Lint (Note that this requires the project to be in a solution to work): https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebAnalyzer\n\nUseful Info\nLazy load libraries. Normally libraries that are shared between lazy loaded routes are all bundled into a single master bundle. This approach will bundle them separately.\n\nAdd a module in app > components > libs > * that imports the library and then exports it\nExport the module in the barrel file in app > components > libs > index.ts\nIn angular.json, add the path to the module in projects > architect > build > options > lazyModules\nIn the module where the library is needed, import the lazy loaded module from the barrel like import { DatagridModule } from \'$libs\'; and then add to the ngModule imports array\n\nWhen working with Yarn/NPM Link and your local NPM package src folders (uncompiled .ts), use the following boilerplate in your root tsconfig so that Angular CLI will compile and build on save and not throw an Angular package error\n"include": [\n    "src/**/*",\n    "node_modules/libName/**/*",\n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body:
        '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GridModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MonolithModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SiteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VendorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body:
        '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_imports\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_ContextModule\n\n\n\ncluster_ContextModule_providers\n\n\n\ncluster_GridModule\n\n\n\ncluster_GridModule_declarations\n\n\n\ncluster_GridModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_MonolithModule\n\n\n\ncluster_MonolithModule_declarations\n\n\n\ncluster_MonolithModule_providers\n\n\n\ncluster_QaModule\n\n\n\ncluster_QaModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SiteModule\n\n\n\ncluster_SiteModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nAppComponent->ComponentsModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\nComponentsModule -->\n\nLoginComponent->ComponentsModule\n\n\n\n\n\nNoContentComponent\n\nNoContentComponent\n\nAppModule -->\n\nNoContentComponent->AppModule\n\n\n\nComponentsModule -->\n\nNoContentComponent->ComponentsModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nSiteModule\n\nSiteModule\n\nAppModule -->\n\nSiteModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSiteModule->HomeModule\n\n\n\n\n\nMonolithModule\n\nMonolithModule\n\nMonolithModule -->\n\nSiteModule->MonolithModule\n\n\n\n\n\nQaModule\n\nQaModule\n\nQaModule -->\n\nSiteModule->QaModule\n\n\n\n\n\nSharedModule \n\nSharedModule \n\nSharedModule  -->\n\nSiteModule->SharedModule \n\n\n\n\n\nVendorModule \n\nVendorModule \n\nVendorModule  -->\n\nSiteModule->VendorModule \n\n\n\n\n\nAppSettings\n\nAppSettings\n\nAppModule -->\n\nAppSettings->AppModule\n\n\n\n\n\nHttpInterceptorService\n\nHttpInterceptorService\n\nAppModule -->\n\nHttpInterceptorService->AppModule\n\n\n\nAppModule -->\n\nHttpInterceptorService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nChartComponent\n\nChartComponent\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartComponent->ChartModule\n\n\n\n\n\nChartComponent \n\nChartComponent \n\nChartComponent  -->\n\nChartModule->ChartComponent \n\n\n\nQaModule -->\n\nChartModule->QaModule\n\n\n\nAppComponent  -->\n\nComponentsModule->AppComponent \n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nComponentsModule->LoginComponent \n\n\n\n\n\nNoContentComponent \n\nNoContentComponent \n\nNoContentComponent  -->\n\nComponentsModule->NoContentComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSiteModule -->\n\nSharedModule->SiteModule\n\n\n\nComponentsModule -->\n\nSharedModule->ComponentsModule\n\n\n\n\n\nCountPipe \n\nCountPipe \n\nCountPipe  -->\n\nSharedModule->CountPipe \n\n\n\n\n\nDebouncePipe \n\nDebouncePipe \n\nDebouncePipe  -->\n\nSharedModule->DebouncePipe \n\n\n\n\n\nDurationPipe \n\nDurationPipe \n\nDurationPipe  -->\n\nSharedModule->DurationPipe \n\n\n\n\n\nFilterPipe \n\nFilterPipe \n\nFilterPipe  -->\n\nSharedModule->FilterPipe \n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nSharedModule->FocusDirective \n\n\n\n\n\nFullScreenDirective \n\nFullScreenDirective \n\nFullScreenDirective  -->\n\nSharedModule->FullScreenDirective \n\n\n\n\n\nPhoneNumberPipe \n\nPhoneNumberPipe \n\nPhoneNumberPipe  -->\n\nSharedModule->PhoneNumberPipe \n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nSharedModule->SafeHtmlPipe \n\n\n\n\n\nSortPipe \n\nSortPipe \n\nSortPipe  -->\n\nSharedModule->SortPipe \n\n\n\n\n\nStringPipe \n\nStringPipe \n\nStringPipe  -->\n\nSharedModule->StringPipe \n\n\n\n\n\nVendorModule\n\nVendorModule\n\nSiteModule -->\n\nVendorModule->SiteModule\n\n\n\nComponentsModule -->\n\nVendorModule->ComponentsModule\n\n\n\n\n\nContextService\n\nContextService\n\n\n\nContextModule\n\nContextModule\n\nContextModule -->\n\nContextService->ContextModule\n\n\n\nMonolithModule -->\n\nContextModule->MonolithModule\n\n\n\n\n\nGridComponent\n\nGridComponent\n\n\n\nGridModule\n\nGridModule\n\nGridModule -->\n\nGridComponent->GridModule\n\n\n\n\n\nGridStatusBarComponent\n\nGridStatusBarComponent\n\nGridModule -->\n\nGridStatusBarComponent->GridModule\n\n\n\n\n\nGridTemplateRendererComponent\n\nGridTemplateRendererComponent\n\nGridModule -->\n\nGridTemplateRendererComponent->GridModule\n\n\n\n\n\nTextCasePipe\n\nTextCasePipe\n\nGridModule -->\n\nTextCasePipe->GridModule\n\n\n\n\n\nGridComponent \n\nGridComponent \n\nGridComponent  -->\n\nGridModule->GridComponent \n\n\n\n\n\nGridStatusBarComponent \n\nGridStatusBarComponent \n\nGridStatusBarComponent  -->\n\nGridModule->GridStatusBarComponent \n\n\n\n\n\nGridTemplateRendererComponent \n\nGridTemplateRendererComponent \n\nGridTemplateRendererComponent  -->\n\nGridModule->GridTemplateRendererComponent \n\n\n\nHomeModule -->\n\nGridModule->HomeModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\nMonolithModule -->\n\nHomeComponent->MonolithModule\n\n\n\n\n\nHomeContextMenuComponent\n\nHomeContextMenuComponent\n\nMonolithModule -->\n\nHomeContextMenuComponent->MonolithModule\n\n\n\n\n\nMonolithApiSelectorsService\n\nMonolithApiSelectorsService\n\nMonolithModule -->\n\nMonolithApiSelectorsService->MonolithModule\n\n\n\n\n\nMonolithApiService\n\nMonolithApiService\n\nMonolithModule -->\n\nMonolithApiService->MonolithModule\n\n\n\n\n\nMonolithService\n\nMonolithService\n\nMonolithModule -->\n\nMonolithService->MonolithModule\n\n\n\n\n\nChartsComponent\n\nChartsComponent\n\nQaModule -->\n\nChartsComponent->QaModule\n\n\n\n\n\nQaComponent\n\nQaComponent\n\nQaModule -->\n\nQaComponent->QaModule\n\n\n\n\n\nCountPipe\n\nCountPipe\n\nSharedModule -->\n\nCountPipe->SharedModule\n\n\n\n\n\nDebouncePipe\n\nDebouncePipe\n\nSharedModule -->\n\nDebouncePipe->SharedModule\n\n\n\n\n\nDurationPipe\n\nDurationPipe\n\nSharedModule -->\n\nDurationPipe->SharedModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nSharedModule -->\n\nFilterPipe->SharedModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nSharedModule -->\n\nFocusDirective->SharedModule\n\n\n\n\n\nFullScreenDirective\n\nFullScreenDirective\n\nSharedModule -->\n\nFullScreenDirective->SharedModule\n\n\n\n\n\nPhoneNumberPipe\n\nPhoneNumberPipe\n\nSharedModule -->\n\nPhoneNumberPipe->SharedModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nSharedModule -->\n\nSafeHtmlPipe->SharedModule\n\n\n\n\n\nSortPipe\n\nSortPipe\n\nSharedModule -->\n\nSortPipe->SharedModule\n\n\n\n\n\nStringPipe\n\nStringPipe\n\nSharedModule -->\n\nStringPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/typealiases.html': {
      url: 'miscellaneous/typealiases.html',
      title: 'miscellaneous-typealiases - typealiases',
      body:
        '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            modals   (src/.../modals.service.ts)\n                        \n                        \n                            modals   (src/.../ui.modal.service.ts)\n                        \n                        \n                            overflow   (src/.../full-screen.directive.ts)\n                        \n                        \n                            Propkey   (src/.../app.settings.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/modals/modals.service.ts\n    \n        \n            \n                \n                    \n                        \n                        modals\n                    \n                \n                    \n                        \n                            Sample Usage:\nthis.ui.modals.open(\'ConfirmationModalComponent\', false, \'lg\', \'Are you sure you want to delete this user?\', \'Delete User\').result.then(\n() => console.log(\'Modal Closed\'),\n() => console.log(\'Modal Dismissed\'));\n\n                        \n                    \n                \n                    \n                        modals:     "LogoutModalComponent" | "ConfirmationModalComponent"\n\n                    \n                \n            \n        \n\n    src/app/shared/stores/ui/ui.modal.service.ts\n    \n        \n            \n                \n                    \n                        \n                        modals\n                    \n                \n                    \n                        \n                            Sample Usage:\nthis.ui.modals.open(\'ConfirmationModalComponent\', false, \'lg\', \'Are you sure you want to delete this user?\', \'Delete User\').result.then(\n() => console.log(\'Modal Closed\'),\n() => console.log(\'Modal Dismissed\'));\n\n                        \n                    \n                \n                    \n                        modals:     "LogoutModalComponent" | "ConfirmationModalComponent"\n\n                    \n                \n            \n        \n\n    src/app/shared/directives/full-screen.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        overflow\n                    \n                \n                \n                    \n                        overflow:     "auto" | "hidden" | "inherit" | "initial" | "overlay" | "scroll" | "visible"\n\n                    \n                \n            \n        \n\n    src/app/shared/app.settings.ts\n    \n        \n            \n                \n                    \n                        \n                        Propkey\n                    \n                \n                \n                    \n                        Propkey:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
  },
};
